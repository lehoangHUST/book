1
00:00:05,940 --> 00:00:10,350
皆さん、こんにちはパイ演習のソリューションへようこそこの講義を行います。

2
00:00:10,380 --> 00:00:13,880
演習のためのソリューションを手動でコーディングします。

3
00:00:13,890 --> 00:00:17,250
木星ノートブックにジャンプして始めましょう。

4
00:00:17,250 --> 00:00:17,540
大丈夫。

5
00:00:17,540 --> 00:00:19,820
だから私は木星ノートにいます。

6
00:00:20,190 --> 00:00:23,120
先に進んで、重要な審判員から始めましょう。

7
00:00:23,740 --> 00:00:27,720
うまくいけば、これを簡単に行うことができます。コマンドは基本的にはあなたのために書かれています。

8
00:00:27,720 --> 00:00:27,970
&nbsp;

9
00:00:28,020 --> 00:00:30,140
いつシフトが重要になるか。

10
00:00:30,240 --> 00:00:31,880
私たちは行く準備ができています。

11
00:00:31,890 --> 00:00:32,130
OK。

12
00:00:32,130 --> 00:00:35,590
最初に、10個のゼロの配列を作成したかったのです。

13
00:00:35,730 --> 00:00:42,910
これを行う簡単な方法は、ちょうどNと言うことです。 P。

14
00:00:42,940 --> 00:00:48,120
ゼロと過去10桁の数字と10桁の配列を作成するために出力がある正確な出力は出力されません。ゼロを使用する代わりに正確に同じことをすることができます。あなたは10

15
00:00:48,120 --> 00:00:54,550
1を持っています。

16
00:00:54,570 --> 00:00:56,190
今では10個のファイブの配列を作成しています。

17
00:00:56,190 --> 00:01:03,330
実際にはこれを行うにはいくつかの方法がありますが、簡単な方法の1つは幸せなことを言うことです。

18
00:01:03,330 --> 00:01:07,570
&nbsp;

19
00:01:08,310 --> 00:01:11,340
そして、それはあなたに10の魚群の配列を得るでしょう。

20
00:01:11,550 --> 00:01:18,020
言い換えれば、これはNと言うことができます。 P。 ゼロの10。

21
00:01:18,780 --> 00:01:22,680
あなたができることは、それに5を加えることです。

22
00:01:22,680 --> 00:01:26,220
そしてそれらはおそらく、10個のファイブの配列を作成するための2つの最も単純な方法です。

23
00:01:26,220 --> 00:01:27,920
非常に迅速に。

24
00:01:27,990 --> 00:01:28,430
大丈夫。

25
00:01:28,470 --> 00:01:32,310
今度は、10から50までの整数の配列を作成します。

26
00:01:32,550 --> 00:01:36,510
うまくいけば、これはあなたがarrを考えさせた出力です。 関数。

27
00:01:36,530 --> 00:01:38,460
それがこれを行う最も簡単な方法ですから。

28
00:01:39,090 --> 00:01:46,660
だから私たちは範囲内にあり、10から50に行きました。つまり、最初の入力として10で始まり、インデックス作成がゼロから始まるので、50を含めるようにします。

29
00:01:46,870 --> 00:01:50,740
&nbsp;

30
00:01:50,850 --> 00:01:58,480
これを入力すると、51に移動しなければなりません。出力整数は10から50になります。

31
00:01:58,500 --> 00:02:03,330
あなたがしなければならないことは、10から50までのすべての偶数の整数の配列を作成することです。

32
00:02:03,330 --> 00:02:05,500
それはまたかなり簡単です。

33
00:02:05,540 --> 00:02:10,800
うまくいけば、私は講義から、実際の議論が欲しいなら3番目の議論はここでタブをシフトすることを覚えているが、ステップサイズを得て、偶数の整数がほしいと言うことを覚えているだろう。

34
00:02:11,070 --> 00:02:14,730
&nbsp;

35
00:02:14,730 --> 00:02:20,340
私は先に進み、ステップサイズを2にしてから、10から50までのすべての偶数の整数を取得します。

36
00:02:20,340 --> 00:02:21,370
&nbsp;

37
00:02:21,960 --> 00:02:22,350
OK。

38
00:02:22,350 --> 00:02:28,790
移動すると、ゼロから8の範囲の値を持つ3つのMatrixを作成したかったのです。

39
00:02:28,800 --> 00:02:31,900
これは2段階のプロセスの一部になります。

40
00:02:32,040 --> 00:02:40,170
最初にarrを使って作成します。 8を作成し、これを3つのマトリックスで3つにしたいと思います。

41
00:02:40,350 --> 00:02:43,860
あなたはここでパーザン9を知っています。それは配列0

42
00:02:43,860 --> 00:02:48,600
私ができることは、3つの形が3つになると言うことができるということです。

43
00:02:48,840 --> 00:02:53,950
そしてそれは、0からAIDSの範囲の値の3つの3つのマトリックスを作り出します。

44
00:02:53,970 --> 00:02:58,650
&nbsp;

45
00:02:59,350 --> 00:03:07,680
今度はこれを2つのステップに分けて、私がディランジ9のようなものを言うことができ、その後3つずつ3つの形状を設定することもできます。

46
00:03:07,680 --> 00:03:09,720
&nbsp;

47
00:03:09,720 --> 00:03:14,190
しかし、あなたがPiの仕事をしているときには、これらの方法を互いの上に置くだけのことがあります。

48
00:03:14,190 --> 00:03:15,200
&nbsp;

49
00:03:15,240 --> 00:03:16,260
大丈夫。

50
00:03:16,260 --> 00:03:18,320
次に、3つずつ3つ作成する必要がありました。

51
00:03:18,330 --> 00:03:19,870
私は行列を見る傾向がある。

52
00:03:20,070 --> 00:03:23,920
審判員Aの最初の講義の命令を覚えていればうれしいです。

53
00:03:23,970 --> 00:03:25,440
しかし、それは私だけです。

54
00:03:25,890 --> 00:03:31,920
行列は正方形でなければならず、3つのIは3つずつ3つであることがわからないので、あなたはただ1つの数をパッセンジャーにします。

55
00:03:31,920 --> 00:03:32,690
&nbsp;

56
00:03:32,700 --> 00:03:34,890
Iteと行列を参照してください。

57
00:03:34,890 --> 00:03:36,090
大丈夫。

58
00:03:36,090 --> 00:03:42,050
次は、PIを使って0と1の間の乱数を生成したかったのです。

59
00:03:42,070 --> 00:03:48,270
&nbsp;

60
00:03:48,480 --> 00:03:55,490
実際にはこれを行うにはかなりの方法がありますが、おそらく最も簡単なのは、ランダムなパスとRanzが0と1の間のランダムな値を変えることを覚えていることだけです。

61
00:03:55,530 --> 00:04:01,410
だから私はちょうど1つをここに渡すことができ、それは0と1の間のランダムな値を返します。

62
00:04:01,410 --> 00:04:06,220
あなたの答えは私のものと少し違っていたかもしれませんが、これはランダムですからです。

63
00:04:06,330 --> 00:04:08,540
だから毎回違う数字が出てくる。

64
00:04:08,550 --> 00:04:11,190
しかし、毎回0と1の間でなければなりません。

65
00:04:11,190 --> 00:04:14,010
あなたが引数として1桁の数字を渡すだけの場合。

66
00:04:14,010 --> 00:04:19,980
ランダムな考えRandはランダムな数のトゥイーン0と1を返します。

67
00:04:20,790 --> 00:04:26,820
その後、標準正規分布から25個の乱数サンプルの配列を生成するためにpiを使用したかった。

68
00:04:26,820 --> 00:04:28,310
&nbsp;

69
00:04:28,320 --> 00:04:34,920
うまくいけば、それはあなたがNと呼べることを覚えておくためのキーワードです。 P。

70
00:04:35,140 --> 00:04:41,640
Rand

71
00:04:41,790 --> 00:04:44,120
nと思っていました。ここでシフトタブを使用すると、標準正規分布からのサンプルが返されます。これは基本的にそこの最後のタックです。

72
00:04:44,400 --> 00:04:51,540
私は25を入れて、標準正規分布から25個の乱数サンプルの配列を返します。

73
00:04:51,540 --> 00:04:52,710
&nbsp;

74
00:04:52,830 --> 00:04:57,480
ここでは、角括弧では、これは5つではなく25の数字の1次元配列であることがわかります。

75
00:04:57,480 --> 00:05:00,540
&nbsp;

76
00:05:00,540 --> 00:05:07,290
あなたは実際にここに形をつけることによって、それが5つずつではなく25だけを言うことを実際に確認することができます。

77
00:05:07,290 --> 00:05:07,940
大丈夫。

78
00:05:08,010 --> 00:05:13,020
今度は、以下のマトリックスを作成し、このマトリックスが実際に何をしているかに注意を払うことにしました。

79
00:05:13,800 --> 00:05:15,650
それは2次元の行列です。

80
00:05:15,720 --> 00:05:18,590
ここでは2つの括弧のセットからそれを知ることができます。

81
00:05:19,110 --> 00:05:22,020
そして、ゼロ点ゼロから移動します。

82
00:05:22,170 --> 00:05:29,550
それは0または1のゼロ点のステップサイズになるように見えます。さらに、実際にこれを行うには2つの方法があります。

83
00:05:29,880 --> 00:05:31,710
&nbsp;

84
00:05:31,710 --> 00:05:36,120
私は最初に、これを考える簡単な方法かもしれない解決策に示されている方法を実行し、次にその空間を使用するより巧妙な方法を示します。

85
00:05:36,120 --> 00:05:40,010
&nbsp;

86
00:05:40,020 --> 00:05:48,990
あなたがこれを行うことができる1つの方法は、Rangeが1から101になると言うことです。そしてそれは最初にあなたが私たちがまだそこにいないSarayを取得します。

87
00:05:48,990 --> 00:05:50,000
&nbsp;

88
00:05:50,010 --> 00:05:55,960
私たちが望むものは、これを10×10の配列に再構成することです。

89
00:05:56,400 --> 00:05:59,750
そして、我々はほぼそこにいるが、我々は1から100に行くことに気付く。

90
00:05:59,790 --> 00:06:02,820
だから、もし私がちょうど行うことができれば、これを100で割ると言うことです。

91
00:06:03,630 --> 00:06:07,960
そして、それは二重括弧を持つ配列を10行10列配列で返します。

92
00:06:08,160 --> 00:06:15,170
そして、それはゼロ点ゼロから、あるいは1つのステップサイズで1つになります。さらに、すべて1になります。

93
00:06:15,240 --> 00:06:16,980
それがあなたがこれに加えることができる1つの方法です。

94
00:06:17,250 --> 00:06:19,370
それがソリューションブックに示されている方法です。

95
00:06:19,380 --> 00:06:23,640
&nbsp;

96
00:06:23,640 --> 00:06:30,120
しかしこれをやるための本当にいいやり方は、これを最初に考えていた方法ですが、宇宙でやっていて、どこから出発したのか、どこで止めていたのかを書き留めることもできます。

97
00:06:30,120 --> 00:06:30,990
&nbsp;

98
00:06:31,020 --> 00:06:35,870
だから我々は0から始めている。 01は1へとずっと進んでいます。

99
00:06:36,030 --> 00:06:45,570
そして、これらは実際に線形に配置されているので、私はちょうど100と言うことができます。これを10行10列の行列として再構成し、上記の結果と全く同じ結果を返します。

100
00:06:46,190 --> 00:06:49,260
&nbsp;

101
00:06:49,530 --> 00:06:52,470
したがって、これらの2つの答えのいずれかが問題ありません。

102
00:06:52,500 --> 00:06:56,730
これを行うには他にいくつかの方法がありますが、おそらくこれは最も論理的で簡単なものです。

103
00:06:56,730 --> 00:06:57,320
&nbsp;

104
00:06:57,330 --> 00:07:01,170
どちらの方法でも問題はありません。うまくいけば、これらのうちの1つを見つけ出すことができます。

105
00:07:01,320 --> 00:07:06,600
これはちょっと難しい問題です。ちょっと難しいのは少し難しい質問です。ここに明確なパターンがないのは、それがポイント0になるという注意を実際に払っていない限りです。加えて、それが括弧の二重セットであったことにも注意してくださいそれらに10

106
00:07:06,600 --> 00:07:10,710
10を追加します。

107
00:07:10,710 --> 00:07:15,390
&nbsp;

108
00:07:15,390 --> 00:07:15,870
大丈夫。

109
00:07:15,990 --> 00:07:17,970
さあ、続けましょう。

110
00:07:17,970 --> 00:07:22,710
今度は、0と1の間に20個の直線的に離間した点の配列を作成したいと考えました。

111
00:07:22,740 --> 00:07:30,640
そのためにあなたがしなければならないのはNです。 P。 Lynnの空間には0と1の間が入ります。

112
00:07:30,960 --> 00:07:37,170
だから私は先に進んで0と言うと、線形に離間した1点と20点が来ると、それは私にそこにある正確な答えを得る。

113
00:07:37,170 --> 00:07:39,030
&nbsp;

114
00:07:39,060 --> 00:07:40,020
大丈夫。

115
00:07:40,020 --> 00:07:45,090
今では、いくつかの行列を性的に1つの行列Matとしています。私たちがしたいのは、結果の行列出力を複製することです。

116
00:07:45,090 --> 00:07:47,410
&nbsp;

117
00:07:47,700 --> 00:07:51,390
もう一度、ここでコードを書く必要がありました。そうしないと、コピーする出力が上書きされてしまいます。

118
00:07:51,390 --> 00:07:52,470
&nbsp;

119
00:07:52,470 --> 00:07:55,050
だからこれからやりましょう。

120
00:07:55,080 --> 00:08:02,540
最初に、配列のこのセクションを15から15、次に12から17:22の行を取得しなければなりませんでした。

121
00:08:02,550 --> 00:08:06,260
では、このコメントアウトをクリアするために、どうやって実際にこれを行うつもりですか？

122
00:08:06,390 --> 00:08:08,480
私がしたい最初のことはMattさんに電話することです。

123
00:08:09,120 --> 00:08:13,880
そして、ここにカンマを入れて、あなたが望む行を見てみましょう。

124
00:08:14,190 --> 00:08:18,680
だから私が望む行は12 17 22で始まります。

125
00:08:18,780 --> 00:08:28,530
だから、最後の3行の意味は、インデックスを見れば意味があります。

126
00:08:28,530 --> 00:08:29,620
&nbsp;

127
00:08:29,670 --> 00:08:37,830
だからコロンには、私の行があり、行こうとすると、ここにコロンを置くだけで、それらの行のすべての列を選択することで確認できます。

128
00:08:37,860 --> 00:08:40,170
&nbsp;

129
00:08:40,460 --> 00:08:43,070
うわさはセルを動かさなければならなかった。

130
00:08:43,660 --> 00:08:44,190
OK。

131
00:08:44,460 --> 00:08:45,070
だから私はそれを走らせた。

132
00:08:45,070 --> 00:08:46,200
それでいいよ。

133
00:08:46,230 --> 00:08:47,910
そして今、私はすべてを選んでいます。

134
00:08:47,910 --> 00:08:52,910
これらの行のすべての列は、実際にはここでサブセットを見ることができます。

135
00:08:52,980 --> 00:08:54,510
だから、私は行がいい。

136
00:08:54,510 --> 00:08:59,820
次に、実際に正しい列を取得したいのですが、この場合は列1のインデックス1以降を取得することができます。

137
00:08:59,820 --> 00:09:03,190
&nbsp;

138
00:09:03,330 --> 00:09:07,850
だから私は実際にはコロンと言うだけで、それを実行しようとしています、それは私の答えです。

139
00:09:07,850 --> 00:09:09,430
私はそれが一致することがわかります。

140
00:09:09,510 --> 00:09:15,180
だからこれをもう一度打ち破るために、私は行のインデックスからそれまでのすべてのものに行き、次に列のインデックスの1つを渡し、すべてを渡します。

141
00:09:15,180 --> 00:09:18,120
&nbsp;

142
00:09:18,120 --> 00:09:20,550
この種の表記ではここに。

143
00:09:20,580 --> 00:09:21,530
よし

144
00:09:21,540 --> 00:09:23,340
次のものに移動してください。

145
00:09:23,430 --> 00:09:29,490
次の1つはナンバー20をつかみたいので、もう一度マットを見てみると、ナンバー20をつけたいだけです。

146
00:09:29,490 --> 00:09:30,300
&nbsp;

147
00:09:30,310 --> 00:09:32,300
それがどこにあるのかを考えてみましょう。

148
00:09:32,330 --> 00:09:36,030
この場合はここにあります。

149
00:09:36,030 --> 00:09:40,290
私が行を最初に取り出した場合の意味は長い0 1 2 3。

150
00:09:40,320 --> 00:09:41,800
だから3列目です。

151
00:09:41,960 --> 00:09:43,990
または、それを入力してください。

152
00:09:44,460 --> 00:09:51,100
そして最後の列は0 1 2 3 4 6です。

153
00:09:51,120 --> 00:09:52,890
インデックスはゼロから始まります。

154
00:09:52,890 --> 00:09:58,310
だから私がマット3が先に来ると言うなら、私は完璧な20を得る。

155
00:09:58,430 --> 00:10:05,370
私はこの2 7 12をつかみたいと思っていました。次に、私の数学がどのように見えるかを見てみましょう。

156
00:10:05,370 --> 00:10:07,510
ここに私の地図があり、私は2つをつかみたい7。

157
00:10:07,530 --> 00:10:09,060
もう一度やり直しましょう。

158
00:10:09,060 --> 00:10:12,860
行と列を2 7 12で区切ります。

159
00:10:12,870 --> 00:10:14,380
それはここのように見えます。

160
00:10:14,400 --> 00:10:21,840
7と12のラップを入れたい。

161
00:10:22,200 --> 00:10:26,120
だから私はすべての行を一定数まで掴みたいので、インデックス番号3を含めずに把握したい2

162
00:10:26,130 --> 00:10:28,990
これは0 1 2です。

163
00:10:29,190 --> 00:10:32,580
だから私は先に進んで3つまでのすべてを言うつもりです。

164
00:10:32,610 --> 00:10:39,850
私は正しい行を持っているので、ここにコロンを置くことによってそれを確認してみましょう。

165
00:10:39,850 --> 00:10:40,640
&nbsp;

166
00:10:40,660 --> 00:10:47,590
さあ、ちょうどその列を正しい列にしてみましょう。この場合、出力について知っておくべき重要なことがあります。

167
00:10:47,590 --> 00:10:48,460
&nbsp;

168
00:10:48,460 --> 00:10:56,380
ここの出力は2つの角括弧を持っています。これは3つずつであることを意味し、3つの行が1つの列になります。

169
00:10:57,340 --> 00:11:01,290
&nbsp;

170
00:11:01,600 --> 00:11:08,680
だから、もし私がちょうど例えば入れたいと思えば0 1を見ましょう。私は7 12になります。

171
00:11:08,860 --> 00:11:09,970
しかし、ここの形に気づく。

172
00:11:09,960 --> 00:11:12,120
これは単なる1次元配列です。

173
00:11:12,220 --> 00:11:15,440
そして、この場合、2組の括弧が必要です。

174
00:11:15,520 --> 00:11:20,100
そのためにはスライス表記を使用して実際にインデックスを作成するしかありません。

175
00:11:20,200 --> 00:11:24,000
だから私は1つから2つまでを含めてすべてを言わなければならない。

176
00:11:24,070 --> 00:11:28,270
それは最初はちょっと奇妙に思えるかもしれませんが、私が前進してこれを実行すると、同じフォーマットでそれをつかむことができます。

177
00:11:28,270 --> 00:11:29,980
&nbsp;

178
00:11:29,980 --> 00:11:35,920
今私はそれが直感的ではないことを知っていますが、これはこの二次元の括弧の同じ形でその列の塊をつかむ限り、審判が働く方法です。

179
00:11:35,950 --> 00:11:40,310
&nbsp;

180
00:11:40,330 --> 00:11:43,400
それ以外の場合は、1次元配列として取得します。

181
00:11:43,420 --> 00:11:49,810
だから私は同じ数字を取得するだけで1つを入れているかどうかを明確にするために、私は一次元の配列として彼を取得します。

182
00:11:49,810 --> 00:11:50,590
&nbsp;

183
00:11:50,620 --> 00:11:52,660
私はこの実際の二重括弧をここで欲しい。

184
00:11:52,660 --> 00:11:59,890
私はそれらの2つの列の間につかむように指定しなければなりません。

185
00:11:59,880 --> 00:12:02,480
だから私はそれが少し奇妙で直感的ではないことを知っています。

186
00:12:02,740 --> 00:12:07,160
そして、実際には、実際には私たちは実際にはすべての価値をつかむことになるでしょう。

187
00:12:07,180 --> 00:12:12,400
&nbsp;

188
00:12:12,400 --> 00:12:18,070
&nbsp;

189
00:12:18,070 --> 00:12:18,670
このように、この種の同じインデックス表記法は実際には行っていませんが、pi構文の構文がちょっと変わっているのを覚えておいてください。

190
00:12:18,730 --> 00:12:21,720
そして、それをもう少し詳しく知ることができます。

191
00:12:22,660 --> 00:12:25,840
しかし、あなたがそれを解決することができなければ、あまりにも汗をかいてはいけません。

192
00:12:25,840 --> 00:12:28,730
限り、同じ形式でそれを取得する。

193
00:12:28,980 --> 00:12:32,770
わかりました。私たちは2人だけここに残しています。

194
00:12:32,980 --> 00:12:35,650
私が先に進み、マットを走らせて、それがどのように見えるかを見ることができます。

195
00:12:35,650 --> 00:12:45,870
私はちょうどここに最後の行がほしいと思うように見える80そして私は21 22 23 24 25をリップします。

196
00:12:46,290 --> 00:12:46,710
OK。

197
00:12:46,780 --> 00:12:48,280
だから、これを行うにはいくつかの方法があります。

198
00:12:48,310 --> 00:12:55,030
おそらく最も簡単な方法は、行のインデックスに行き、すべてを返すということだけです。

199
00:12:55,660 --> 00:12:58,630
そこには21 22 23 24 25があります。

200
00:12:58,620 --> 00:13:04,130
そして、これはあなたがこれを行うことができる他の方法にマッチします。それがマトリックスの最後の行であることがわかっている場合です。

201
00:13:04,270 --> 00:13:08,140
負のインデックス付けを行うこともできます。実際には全く同じものが返されます。

202
00:13:08,130 --> 00:13:11,000
しかし、私はここで使うことをお勧めします。

203
00:13:11,020 --> 00:13:13,640
だからもう少し明確です。

204
00:13:13,660 --> 00:13:14,030
大丈夫。

205
00:13:14,170 --> 00:13:17,020
もう一回、マットを見せてください。

206
00:13:17,020 --> 00:13:23,080
ここではMattがあり、最後の2つの行のすべての列を取得するように見えます。

207
00:13:23,230 --> 00:13:26,220
しかしここで再び何かが二重括弧を持っていることに気付く。

208
00:13:26,260 --> 00:13:35,560
だから私はそのスライス表記法を使用して、行インデックス3から5に移動し、そこにあるすべての列を取得して、同じ値をここに戻したいとします。

209
00:13:35,620 --> 00:13:39,830
&nbsp;

210
00:13:40,090 --> 00:13:43,270
再びこれは私たちが最後に見たものよりやや厄介でした。

211
00:13:43,420 --> 00:13:47,200
しかし、うまくいけば、あなたはそれを見たのですが、答えはあなたには意味があります。

212
00:13:47,200 --> 00:13:50,290
さあ、次のことをやってみましょう。

213
00:13:50,350 --> 00:13:55,900
あなたがここに新しいセルを置くために行くとき、私たちがしたいマットが最大値のすべての値の合計を得ることを見ることができます。

214
00:13:55,890 --> 00:13:56,950
&nbsp;

215
00:13:56,950 --> 00:13:58,240
これを行うには2通りの方法があります。

216
00:13:58,240 --> 00:14:07,780
あなたは言うことができますし、いくつかのマットを渡すことができますか、あなたはまた、マットサムと言うことですが、あなたは同じ答えを得ることができます。

217
00:14:10,570 --> 00:14:11,710
&nbsp;

218
00:14:11,740 --> 00:14:13,420
いずれも問題ありません。

219
00:14:13,420 --> 00:14:15,790
次に標準偏差にしたいと思う。

220
00:14:16,090 --> 00:14:22,180
だからうまくいけば、ユニバーサル関数とptを使ってこれを理解してからMattに渡すことができます。

221
00:14:22,180 --> 00:14:23,130
&nbsp;

222
00:14:23,200 --> 00:14:27,460
&nbsp;

223
00:14:27,790 --> 00:14:34,020
&nbsp;

224
00:14:34,240 --> 00:14:36,390
今私はそれを得て、あなたは普遍的な機能のための注釈のリンクを参照することができますか、それは実際にあなたが言うことができる一般的なCDまたはそれは私がAssaidiとそれもすべてうまくいくだろうマットの数学を言い訳。

225
00:14:36,580 --> 00:14:41,530
最終的にOKです。最後にこの小さなトリッキーな1つは、マットのすべての列の合計を取得する必要があることを行うには、マットがいくつか持っていると言うことです。

226
00:14:41,530 --> 00:14:45,260
&nbsp;

227
00:14:45,540 --> 00:14:49,750
そして、あなたがここでそのタブを動かすと、見たことのある軸を指定しなければなりませんでした。

228
00:14:49,960 --> 00:14:53,440
与えられたアクセス上のすべての配列要素の合計を返します。

229
00:14:53,560 --> 00:14:58,780
この場合、アクセスはゼロに等しいと言う必要があります。

230
00:14:59,230 --> 00:15:01,430
それがその仕組みです。

231
00:15:01,620 --> 00:15:05,780
&nbsp;

232
00:15:05,780 --> 00:15:11,860
その最後のものはアクセスコードに入れてしまったのでややこしいものでしたが、アクセスしていないとあまり心配しないでください。なぜなら、アクセス0または1を指定する限り、パンダの図書館で働き始める。

233
00:15:11,860 --> 00:15:14,310
&nbsp;

234
00:15:14,320 --> 00:15:14,890
大丈夫。

235
00:15:15,070 --> 00:15:16,440
うまくいけばそれはあなたにとってあまりにも悪くはなかった。

236
00:15:16,450 --> 00:15:20,830
繰り返しますが、すべての回答とあなたが通過したすべてのコードをノートブックでチェックすることができ、常にQ＆Aフォーラムに投稿することができます。

237
00:15:20,980 --> 00:15:23,370
&nbsp;

238
00:15:23,380 --> 00:15:28,340
あなたが何かに何か質問があるなら、私はあなたにさらなる説明をしてくれるでしょう。

239
00:15:28,720 --> 00:15:31,370
皆さんありがとうございました。次の講演でお会いしましょう。
