1
00:00:06,180 --> 00:00:11,970
Olá a todos e seja bem vindo à conferência de arrays de PI e esta palestra aprenderá as várias maneiras

2
00:00:11,970 --> 00:00:16,690
pelas quais você pode criar uma taxa mais alta usando Python e depois alguma biblioteca de PI.

3
00:00:16,920 --> 00:00:20,460
Vamos em frente e vamos até a nota de Jupiter para começar.

4
00:00:20,490 --> 00:00:20,760
Tudo bem.

5
00:00:20,760 --> 00:00:27,000
Aqui estamos nos blocos de notebooks de Jupiter são a principal maneira de usar o nome da biblioteca

6
00:00:27,030 --> 00:00:32,910
de PI ao longo do curso e estou alto res, basicamente, vem em dois sabores que vêm

7
00:00:32,910 --> 00:00:37,450
como vetores unidimensionais ou matrizes bidimensionais, mas podem ambos se chamam de arrays.

8
00:00:37,450 --> 00:00:44,020
novo arbitramento de objetos Python, como uma lista que vou e criar um objeto na minha lista.

9
00:00:44,020 --> 00:00:48,730
Se houver um ou dois, vamos sair e mostrar como podemos criar um

10
00:00:48,980 --> 00:00:50,840
Um dois três.

11
00:00:51,210 --> 00:00:54,180
E se eu continuar em frente e exibir essa lista.

12
00:00:54,350 --> 00:00:58,450
Observe que eu retire um dois três e é apenas uma lista de python.

13
00:00:58,650 --> 00:01:06,020
Eu vou seguir em frente e dizer importar pi como P e então eu posso ligar e pede array.

14
00:01:06,290 --> 00:01:10,920
E agora eu posso lançar essa lista como uma matriz.

15
00:01:11,290 --> 00:01:15,900
E observe que recebo uma matriz de volta como o recipiente para esse objeto de lista.

16
00:01:15,930 --> 00:01:20,670
E então eu posso realmente atribuir isso e, em seguida, apenas chamar a disposição fora disso.

17
00:01:20,790 --> 00:01:24,930
Então eu posso lançar uma lista Python normal em uma matriz.

18
00:01:24,990 --> 00:01:31,110
Agora retornarei uma matriz unidimensional se eu quiser obter uma matriz bidimensional ou uma matriz.

19
00:01:31,170 --> 00:01:33,390
Posso criar uma lista de listas.

20
00:01:33,420 --> 00:01:45,180
Então, por exemplo, eu posso dizer que minhas matemáticas de sublinhado são iguais a uma lista de três listas para que um dois

21
00:01:45,180 --> 00:01:52,450
três quatro cinco seis se livrar dessa vírgula extra e, em seguida, 7 8 9.

22
00:01:53,220 --> 00:02:03,570
Então, note que recebo uma lista de listas e, se eu lançar isso para uma matriz, eu voltarei a uma matriz bidimensional e isso é notado

23
00:02:03,570 --> 00:02:09,930
tanto pela forma como é apresentado como saída, mas também mais importante, pois o número de

24
00:02:09,930 --> 00:02:14,340
colchetes mostrados no fechamento e as extremidades de abertura desta matriz.

25
00:02:14,580 --> 00:02:20,640
Eu tenho dois conjuntos de colchetes que irão indicar que Z para essa matriz mencionável tem três linhas e três

26
00:02:20,640 --> 00:02:27,260
colunas e é assim que você pode lançar listas normais de Python ou lista de listas para o alcance do árbitro.

27
00:02:27,600 --> 00:02:33,030
Normalmente, no entanto, você provavelmente usará os próprios métodos de geração própria de torta para realmente

28
00:02:33,060 --> 00:02:36,090
criar arrays muito mais rápidos e muito mais simples.

29
00:02:36,090 --> 00:02:40,520
Vamos seguir adiante e seguir algumas das maneiras mais comuns de fazer isso.

30
00:02:40,560 --> 00:02:46,740
A maneira mais comum provavelmente estará criando uma taxa maior usando o arr. e isso é realmente semelhante à

31
00:02:46,740 --> 00:02:49,930
própria função de alcance construído da Python.

32
00:02:49,950 --> 00:02:56,370
Você vai seguir em frente e dizer N. P. organizar e, em seguida, pasan um começo e uma parada.

33
00:02:56,460 --> 00:03:02,490
Então, note que você começa a parar e, em seguida, um tamanho de etapa é um terceiro argumento e os

34
00:03:02,490 --> 00:03:04,860
valores de retorno uniformemente espaçados dentro desse intervalo.

35
00:03:04,860 --> 00:03:14,040
Então, se eu apenas disser de 0 a 10, lembre-se, assim como na indexação da gama Python, começa em zero.

36
00:03:14,070 --> 00:03:16,990
Ele vai subir, mas não incluindo 10.

37
00:03:17,430 --> 00:03:20,660
Eu irei ter uma matriz de volta de 0 até 9.

38
00:03:20,760 --> 00:03:24,840
Então eu começo em 0 e eu vou até o final, mas não incluindo 10.

39
00:03:25,020 --> 00:03:29,480
Então eu recebo 10 dígitos de volta 0 1 2 3 4 5 6.

40
00:03:29,890 --> 00:03:33,900
Essencialmente funciona exatamente como a função de alcance própria do Python.

41
00:03:33,960 --> 00:03:37,990
Então eu quero ir de zero até 10 depois de Z.

42
00:03:38,190 --> 00:03:43,010
Eu tenho que dizer zero coma 11 e é isso que eu voltei.

43
00:03:43,380 --> 00:03:46,930
E, finalmente, eu posso adicionar um terceiro argumento a um tamanho de passo.

44
00:03:46,980 --> 00:03:51,820
Então, se eu fosse todos os números pares de 0 a 10 eu poderia dizer que zero, venha 11.

45
00:03:51,960 --> 00:03:58,930
E, em seguida, em um tamanho de passo de dois para que eu pular em etapas de 2 0 2 4 6 8 10.

46
00:03:59,070 --> 00:04:05,580
Isso significa que um intervalo será uma das funções mais úteis para gerar rapidamente uma matriz

47
00:04:05,580 --> 00:04:06,590
usando-os pi.

48
00:04:06,960 --> 00:04:12,330
Se você deseja tipos específicos de arrays, há outras funções em não-piloto que podem nos ajudar a fazer isso.

49
00:04:12,330 --> 00:04:19,970
Por exemplo, se você deseja gerar arrays de todos os zeros, podemos dizer zeros P-doc e você pode

50
00:04:19,970 --> 00:04:22,050
passar em um único dígito.

51
00:04:22,050 --> 00:04:30,780
Então você obtém um vetor unidimensional ou pode dizer N. P. que os zeros e passar uma tupla das dimensões

52
00:04:30,780 --> 00:04:36,840
que você deseja que o primeiro número vai representar o número de linhas e o segundo número naquela

53
00:04:36,840 --> 00:04:39,220
tupla vai representar o número de colunas.

54
00:04:39,240 --> 00:04:48,770
Então, por exemplo, eu quero filas por três colunas eu passo na tupla para vir um três e eu volto para

55
00:04:48,770 --> 00:04:53,330
Rose por três colunas e isso é observado pelos suportes.

56
00:04:53,360 --> 00:04:59,620
Tudo bem, se eu quiser um aumento de apenas puro, eu posso dizer aqueles.

57
00:04:59,690 --> 00:05:07,580
E da mesma forma eu posso passar um único número ou uma matriz unidimensional ou uma tupla deles menções

58
00:05:08,180 --> 00:05:16,370
para uma matriz bidimensional que é as e zeros em outra função construída realmente útil é o espaço da lente

59
00:05:16,370 --> 00:05:21,500
e o espaço retorna números uniformemente espaçados ao longo de um intervalo especificado.

60
00:05:21,750 --> 00:05:23,960
É importante não confundir Lewan.

61
00:05:23,990 --> 00:05:31,490
Organize o seu podemos ver que um intervalo basicamente retorna números inteiros de um início e uma parada e um determinado

62
00:05:31,490 --> 00:05:32,600
tamanho de etapa.

63
00:05:32,720 --> 00:05:37,580
número de pontos que você quer que eu mostre o que eu quero dizer com isso, eu

64
00:05:37,580 --> 00:05:45,140
posso dizer o espaço do P Gotland e eu recebo um passe e um começo de parada e há um terceiro argumento que vou passar num número.

65
00:05:45,140 --> 00:05:50,300
O que o Lin Space vai fazer é que na verdade vai levar um terceiro argumento sobre o

66
00:05:50,300 --> 00:06:00,590
Então, digamos que eu tenho um começo de zero e uma parada de cinco e eu quero obter 10 pontos uniformemente espaçados

67
00:06:00,590 --> 00:06:02,510
entre zero a cinco.

68
00:06:02,510 --> 00:06:09,650
Posso passar em um terceiro argumento 10 e isso retorna um vetor unidimensional observado pela uma vez

69
00:06:09,650 --> 00:06:15,490
que os colchetes estão aqui de dez pontos uniformemente espaçados de zero a cinco.

70
00:06:15,490 --> 00:06:18,140
E eu posso mudar este terceiro argumento para qualquer número que eu queira.

71
00:06:18,140 --> 00:06:24,140
Então, se eu quiser 100 pontos uniformemente espaçados de zero a cinco, eu só posso passar isso e isso

72
00:06:24,140 --> 00:06:26,470
retorna uma matriz de dimensões muito maior.

73
00:06:26,540 --> 00:06:30,800
E tenha em mente, apesar de parecer que é para eles, na medida em que está sendo impresso,

74
00:06:31,040 --> 00:06:35,870
você pode dizer que é um dimensional pelo fato de que há apenas um suporte aqui na frente da matriz

75
00:06:36,460 --> 00:06:40,220
quando você está lidando com duas dimensões Você verá que você tem dois conjuntos de suportes.

76
00:06:40,220 --> 00:06:42,910
Ao abrir ou fechar nas extremidades.

77
00:06:42,980 --> 00:06:46,140
Três que mencionei terão três suportes, etc. Tudo bem.

78
00:06:46,310 --> 00:06:47,120
Então é quando o espaço.

79
00:06:47,120 --> 00:06:48,320
deseja organizar irá assumir

80
00:06:48,320 --> 00:06:54,980
esse argumento como o tamanho da etapa que deseja, vamos seguir em frente e mostrar como você pode criar uma matriz de identidade usando pi.

81
00:06:54,980 --> 00:07:01,430
Mais uma vez, não confunda o espaço com arrumar o espaço do lint tomará o terceiro argumento, pois o número de pontos que

82
00:07:01,430 --> 00:07:04,960
Podemos dizer n p e y e.

83
00:07:05,360 --> 00:07:08,680
E então você apenas passa um único dígito na matriz de identidade.

84
00:07:09,350 --> 00:07:13,570
Se você não está familiarizado é uma matriz útil quando você está lidando com problemas de álgebra linear.

85
00:07:13,580 --> 00:07:17,750
E é basicamente apenas uma matriz quadrada bidimensional que significa que o

86
00:07:17,900 --> 00:07:23,040
número de linhas é o mesmo que um número de colunas e você tem uma

87
00:07:23,040 --> 00:07:30,320
diagonal de que tudo o resto é zero e essa é a razão pela qual ele só leva um único dígito

88
00:07:30,320 --> 00:07:36,440
como argumento porque disse que a matriz deve ser quadrada como a saída e a P i.

89
00:07:36,650 --> 00:07:38,340
Tudo bem, movendo-se agora, agora também tem muitas maneiras de criar matrizes de números aleatórios.

90
00:07:39,170 --> 00:07:45,320
E vamos usar isso muitas vezes ao longo do curso, então vamos seguir em

91
00:07:45,380 --> 00:07:49,100
frente e cobrir algumas maneiras de fazer isso.

92
00:07:49,100 --> 00:07:49,690
O que você vai seguir em frente e fazer é chamar N. P. pontos aleatórios e, em seguida, executou o método.

93
00:07:50,090 --> 00:07:58,040
Você pode listar você verá que há realmente um pouco de métodos.

94
00:07:58,100 --> 00:08:01,520
Então, vamos entrar e mostrar-lhe os mais comuns.

95
00:08:01,580 --> 00:08:05,130
O primeiro é Ran é a e b.

96
00:08:05,660 --> 00:08:09,080
com amostras aleatórias de uma distribuição uniforme sobre 0 a 1.

97
00:08:09,590 --> 00:08:14,570
E isso vai criar uma matriz da forma dada que você passar e vai preenchê-la

98
00:08:14,630 --> 00:08:19,620
E isso significa que, se eu quiser apenas oito conjuntos unidimensionais de números aleatórios uniformemente

99
00:08:19,620 --> 00:08:24,950
distribuídos de 0 a 1, posso passar num único dígito e eu retornarei essa matriz unidimensional.

100
00:08:24,950 --> 00:08:30,840
Eu quero que isso seja importante.

101
00:08:31,160 --> 00:08:34,760
Ao contrário das funções anteriores, você trabalhou em vez de passar em uma tupla.

102
00:08:35,030 --> 00:08:38,930
Na verdade, eu apenas passarei as dimensões como argumentos separados.

103
00:08:38,950 --> 00:08:42,820
Então, isso significa que, se eu quiser uma matriz cinco por cinco

104
00:08:42,860 --> 00:08:49,130
de números aleatórios, eu apenas passei e 5 venha 5 em vez da tupla e trabalhando com essas bibliotecas aleatórias.

105
00:08:49,130 --> 00:08:52,040
Tudo bem se quisermos retornar uma amostra ou muitas

106
00:08:52,400 --> 00:08:58,490
amostras da distribuição normal padrão ou uma distribuição Gaussiana em vez de usar o Ranz, podemos usar rand n.

107
00:08:58,490 --> 00:09:02,580
E isso significa que eu posso dizer que P pensou pensamento aleatório Ran n

108
00:09:03,030 --> 00:09:10,790
e isso retornará números não de uma distribuição uniforme de 0 a 1, mas em vez de um centro de distribuição normal padrão em torno de zero.

109
00:09:10,790 --> 00:09:16,750
E isso significa que eu posso seguir em frente e passar em dois e eu recebo dois números aleatórios de uma distribuição normal normal.

110
00:09:17,060 --> 00:09:25,130
E, mais tarde, veremos que isso não funciona nessa palestra, mas também obtém a visualização dos dados.

111
00:09:25,670 --> 00:09:30,140
Vamos prosseguir e mostrar uma boa curva de distribuição normal ou uma curva de distribuição Gaussiana.

112
00:09:30,560 --> 00:09:35,200
E, novamente, se eu quero que isso seja bidimensional, posso passar por duas dimensões.

113
00:09:35,950 --> 00:09:40,580
Então, por quatro a quatro, digo que quatro são quatro.

114
00:09:40,670 --> 00:09:43,540
E não, eu não passo uma tupla aqui, eu apenas

115
00:09:43,970 --> 00:09:49,070
passo em cada menção de tempo como um argumento separado e posso ver pelo conjunto de dois

116
00:09:49,070 --> 00:09:57,020
suportes é uma matriz bidimensional como saída e o método aleatório final de criar uma matriz, vou aprender sobre o Rand int e isso retorna números inteiros

117
00:09:57,200 --> 00:10:02,990
aleatórios de um número baixo para um alto ou vai em frente e mostra o que podemos fazer por isso.

118
00:10:03,000 --> 00:10:06,140
Você vai adiante e diz que Rand Rand Rand Rand. UMA. você vai passar.

119
00:10:06,140 --> 00:10:12,310
Eu vou para essa guia de mudança aqui um baixo e, em seguida, o tamanho real que você deseja.

120
00:10:12,360 --> 00:10:17,810
entre 1 e 100 e o baixo é inclusivo.

121
00:10:17,810 --> 00:10:26,870
Então, por exemplo, se você apenas diz 1 a 100, você terá um número inteiro aleatório

122
00:10:26,930 --> 00:10:27,700
E o alto x significado exclusivo que tem a chance de ser selecionado, mas 100 não é.

123
00:10:27,750 --> 00:10:34,570
E se você quer um número específico de inteiros aleatórios, você pode passá-los como um terceiro argumento.

124
00:10:35,540 --> 00:10:40,410
Então, de inteiros aleatórios de 1 a 100.

125
00:10:40,400 --> 00:10:43,770
Mas não incluindo 100.

126
00:10:43,790 --> 00:10:45,160
Eu só posso passar

127
00:10:45,440 --> 00:10:50,930
e 10 lá e há 10 números inteiros aleatórios inclusive no baixo em um exclusivo no alto.

128
00:10:50,930 --> 00:10:51,920
ESTÁ BEM.

129
00:10:52,200 --> 00:10:52,820
Vamos discutir apenas alguns atributos e métodos úteis de uma matriz para fazer isso.

130
00:10:53,100 --> 00:10:59,350
Eu vou seguir em frente e criar dois novos objetos de matrizes que vamos entrar e limpar isso e limpar essas células.

131
00:10:59,370 --> 00:11:05,450
Tudo bem.

132
00:11:07,830 --> 00:11:08,630
Eu vou dizer uma variável r r e vou dizer que isso é igual ao alcance puro 25.

133
00:11:08,630 --> 00:11:16,330
Então, se eu verificar o que A-R parece aqui, é uma matriz unidimensional de zero até 24.

134
00:11:16,380 --> 00:11:22,220
E então eu vou dizer que o Rand é realmente aleatório e será Rand.

135
00:11:22,500 --> 00:11:30,660
Tenho que colocar um D lá.

136
00:11:31,000 --> 00:11:32,790
Inteiros aleatórios de 0 a 50.

137
00:11:32,960 --> 00:11:35,980
Então eu não recebi 10 desses.

138
00:11:36,390 --> 00:11:37,930
Então, se eu cheka

139
00:11:38,210 --> 00:11:44,040
ou correi, parece que parece isso, você pode obter valores diferentes porque é selecionado aleatoriamente.

140
00:11:44,030 --> 00:11:44,690
Estes devem ter apenas 10 inteiros lá.

141
00:11:44,690 --> 00:11:47,890
Tudo bem.

142
00:11:48,020 --> 00:11:48,780
Um dos métodos mais úteis que você pode usar em uma matriz é o método de remodelação.

143
00:11:48,840 --> 00:11:53,130
E isso vai retornar uma matriz contendo os mesmos dados se for nova.

144
00:11:53,300 --> 00:11:57,770
eu passo as novas dimensões que eu quero.

145
00:11:57,770 --> 00:12:07,930
Isso significa que eu posso chamar pontos de Mirei e, em seguida, o método de remodelação é remodelado e

146
00:12:07,940 --> 00:12:08,940
Então, por exemplo, se eu quiser remodelar esse membro da matriz A R R é vinte cinco dígitos zero a 24.

147
00:12:08,930 --> 00:12:16,940
Eu posso remodelá-lo como uma matriz de 5 por 5 usando remodelar e depois

148
00:12:16,940 --> 00:12:24,350
passar o número de linhas que você deseja e o número de colunas.

149
00:12:24,360 --> 00:12:25,780
Tenha em mente que você receberá um erro se não conseguir preencher essa matriz completamente.

150
00:12:25,790 --> 00:12:30,630
Então, por exemplo, se eu quisesse 5 por 10 eu precisaria de 50 elementos para fazer isso.

151
00:12:30,620 --> 00:12:35,940
E eu vou ter um erro aqui porque o tamanho total da nova matriz deve ser inalterado.

152
00:12:36,200 --> 00:12:40,820
número real de elementos, então cinco vezes cinco é igual a 25.

153
00:12:40,940 --> 00:12:48,990
O que significa que você precisa preencher usando apenas os dígitos que você possui ou os elementos que você possui uma maneira

154
00:12:48,990 --> 00:12:56,310
simples e simples de verificar isso é que o número de linhas vezes o número de colunas é igual ao

155
00:12:56,370 --> 00:12:59,330
E eu sei que tenho 25 elementos nesta matriz.

156
00:12:59,450 --> 00:13:02,860
OK, entremos e mostremos alguns métodos mais úteis para encontrar

157
00:13:02,900 --> 00:13:08,780
valores máximos ou mínimos ou para encontrar sua localização e passaremos por muitas mais operações em futuras conferências.

158
00:13:09,200 --> 00:13:13,670
Aqui estão alguns úteis para você saber.

159
00:13:13,830 --> 00:13:15,880
Então, vá em frente e confira nossa matriz aleatória.

160
00:13:15,960 --> 00:13:17,880
Mais uma vez.

161
00:13:17,880 --> 00:13:18,980
Mais uma vez, seus números podem ser diferentes, mas para o bem deste exercício que realmente não importa.

162
00:13:18,990 --> 00:13:24,030
Se você quiser encontrar o valor máximo em sua matriz.

163
00:13:24,120 --> 00:13:27,400
Você pode chamar o método máximo fora dele e isso retornará o valor máximo dessa matriz.

164
00:13:27,440 --> 00:13:33,170
Da mesma forma, se você deseja obter o valor mínimo da sua matriz.

165
00:13:33,870 --> 00:13:37,340
Você pode chamar o método min.

166
00:13:37,350 --> 00:13:40,240
Demos uma olhada na matriz.

167
00:13:40,280 --> 00:13:41,710
Mais uma vez,

168
00:13:41,730 --> 00:13:48,980
podemos descobrir a localização dos valores máximos ou mínimos especificando o nosso máximo ou mínimo.

169
00:13:49,080 --> 00:13:50,490
Significado se eu quiser

170
00:13:50,580 --> 00:13:59,660
saber realmente qual índice é este Max localizado em 49, posso dizer que Ranh é Argive Max e que retornará a localização do índice do valor máximo.

171
00:13:59,680 --> 00:14:04,750
Então percebo que 49 está localizado no índice 3.

172
00:14:04,980 --> 00:14:08,270
Então, 0 1 2 3.

173
00:14:08,450 --> 00:14:11,310
Tenho quarenta e nove lá.

174
00:14:11,420 --> 00:14:12,930
E novamente, você pode fazer o

175
00:14:13,100 --> 00:14:18,470
mesmo com o valor do minuto que você pode dizer são homens e retornará a localização do índice do valor mínimo.

176
00:14:18,470 --> 00:14:20,990
Portanto, 6 é a localização do índice o valor mínimo eo valor mínimo foi três.

177
00:14:21,000 --> 00:14:25,760
Nesse caso.

178
00:14:25,760 --> 00:14:26,940
ESTÁ BEM.

179
00:14:27,500 --> 00:14:28,130
E rapidamente alguns mais métodos e atributos úteis.

180
00:14:28,400 --> 00:14:31,820
Se você quer descobrir a forma do

181
00:14:31,970 --> 00:14:39,050
vetor que você pode dizer, eles são moldados em um baixo retorno de volta à forma.

182
00:14:39,060 --> 00:14:39,980
Observe aqui que eu tenho 25 Khama e isso está indicando que uma r r dessa matriz era apenas um vetor unidimensional.

183
00:14:39,980 --> 00:14:47,910
Se eu avançar e remodelá-lo.

184
00:14:49,080 --> 00:14:50,960
Então eu vou dizer remodelado para um cinco por cinco e eu vou definir isso igual a R. Ou a r r.

185
00:14:51,140 --> 00:15:01,060
Observe agora que eu tenho uma matriz bidimensional denominada forma de ponto fora disso.

186
00:15:01,160 --> 00:15:02,190
Observe que não estou colocando parênteses.

187
00:15:02,180 --> 00:15:07,340
Estou apenas chamando o atributo dele.

188
00:15:07,350 --> 00:15:08,970
Agora, relata que é um cinco por cinco.

189
00:15:09,000 --> 00:15:11,350
Então, é a Mitchell agora e o último atributo útil

190
00:15:11,390 --> 00:15:14,360
que eu quero mostrar agora é o tipo de dados nesta matriz.

191
00:15:14,450 --> 00:15:20,810
Se você já tem curiosidade sobre o tipo de dados que você possui uma matriz, você pode simplesmente dizer um r r e digitar como um tipo de atributo D, ele retornará o tipo de dados real

192
00:15:20,820 --> 00:15:21,690
que está no seu caminho.

193
00:15:21,750 --> 00:15:28,410
Nesse caso, números inteiros de 32 bits.

194
00:15:28,500 --> 00:15:32,700
ESTÁ BEM.

195
00:15:32,720 --> 00:15:35,470
Apenas uma rápida revisão de tudo o que passamos.

196
00:15:35,510 --> 00:15:36,000
Nós mostramos como criar um

197
00:15:36,200 --> 00:15:38,660
edifício do império, criando uma lista para uma matriz mais alta ou usando uma das funções incorporadas para um arrays de árbitros, como arr. zeros e do espaço de

198
00:15:38,720 --> 00:15:45,390
Lyn e eu e também os métodos de geração aleatória que você chama de N. P. que os executou e, em seguida, Rand correu e correu e

199
00:15:45,380 --> 00:15:52,680
ou alguns dos outros métodos aleatórios.

200
00:15:52,670 --> 00:15:59,840
aleatórias e, em seguida, qualquer método ou função que você queira importar .

201
00:15:59,850 --> 00:16:01,690
Tudo bem e uma última sugestão que eu quero

202
00:16:01,730 --> 00:16:06,920
mostrar se você não quiser ter que digitar NPE aleatoriamente que Rand é o que você pode fazer, você pode dizer da PI que as importações

203
00:16:06,940 --> 00:16:16,200
Então, se você quisesse importar Rand I N C, você poderia seguir em frente e fazer isso.

204
00:16:16,190 --> 00:16:17,440
E então, em vez de dizer que pensou que o pensamento aleatório correu, inti, você pode simplesmente dizer o Rand, eu. UMA. e eu

205
00:16:17,450 --> 00:16:20,900
tenho uma referência para você.

206
00:16:20,900 --> 00:16:27,480
Ai está.

207
00:16:27,470 --> 00:16:30,020
ESTÁ BEM.

208
00:16:30,020 --> 00:16:31,110
a qualquer um desses códigos ou a qualquer uma das notas que realmente falaram ao longo desta palestra.

209
00:16:31,190 --> 00:16:32,130
Mais uma vez, lembre-se de ter o caderno com todas as notas caso queira fazer referência

210
00:16:32,250 --> 00:16:36,650
Próximamente, vamos aprender sobre indexação e seleção para uma

211
00:16:36,680 --> 00:16:40,760
disputa de árbitros, bem como operações dos árbitros.

212
00:16:40,760 --> 00:16:45,860
Obrigado a todos e eu vou ver você na próxima palestra

213
00:16:45,870 --> 00:16:47,270
&nbsp;

214
00:16:47,270 --> 00:16:49,310
&nbsp;
