1
00:00:06,780 --> 00:00:11,700
Salve a tutti e benvenuti alla conferenza sulle operazioni PI e questa conferenza vi mostreremo la riforma

2
00:00:11,700 --> 00:00:14,520
delle operazioni di base sugli array di un umpire.

3
00:00:14,640 --> 00:00:18,720
Andiamo avanti e saltiamo sul taccuino di Giove per iniziare.

4
00:00:18,720 --> 00:00:21,090
Va bene, eccoci al taccuino di Giove.

5
00:00:21,210 --> 00:00:27,180
Andremo avanti e discuteremo di array con array di operazioni di array con operazioni scalari e

6
00:00:27,180 --> 00:00:33,360
poi alcune funzioni di array universali quali sono e come è possibile trovarne di più andranno

7
00:00:33,470 --> 00:00:36,400
avanti e inizieranno dicendo pi importante come NPE.

8
00:00:36,810 --> 00:00:44,370
E poi vado avanti e faccio un array, diremo N. P. dalla virgola zero 11.

9
00:00:44,370 --> 00:00:47,600
sistemare e andremo avanti e passeremo

10
00:00:47,640 --> 00:00:53,090
In questo modo otteniamo cifre da 0 a 10, quindi 11 cifre da 0 a 10.

11
00:00:53,460 --> 00:00:53,910
Tutto ok.

12
00:00:53,910 --> 00:00:59,460
È possibile eseguire facilmente array con operazioni di array semplicemente utilizzando semplici segni aritmetici a cui si

13
00:00:59,460 --> 00:01:01,600
è già abituati da Python stesso.

14
00:01:02,070 --> 00:01:08,400
Quindi, ad esempio, se si desidera aggiungere due array in base a elementi per elementi, si dovrebbe

15
00:01:08,400 --> 00:01:10,300
semplicemente dire array più array.

16
00:01:10,320 --> 00:01:12,140
Ora aggiungi i due array insieme.

17
00:01:12,180 --> 00:01:14,450
In questo caso sto solo aggiungendo array a se stesso.

18
00:01:14,590 --> 00:01:18,370
Quindi in sostanza ogni numero è stato raddoppiato.

19
00:01:18,840 --> 00:01:25,500
Posso fare la stessa cosa per sottrazione o anche per moltiplicazione.

20
00:01:25,500 --> 00:01:31,770
Posso anche eseguire array con operazioni scalari nello stesso modo in modo che gli scaler significhi

21
00:01:31,770 --> 00:01:37,800
solo un numero e sia diventato numb pi fa è che trasmette praticamente quel numero a

22
00:01:37,800 --> 00:01:43,960
ogni elemento dell'array in modo che l'operazione avvenga anche su base element by element se voglio.

23
00:01:44,010 --> 00:01:45,140
Ecco la mia matrice.

24
00:01:45,240 --> 00:01:48,270
Aggiungi un centinaio ad ogni elemento dell'array.

25
00:01:48,270 --> 00:01:50,590
Potrei dire più e poi lo stesso scalare.

26
00:01:50,820 --> 00:01:53,620
E ciò aggiungerebbe 100 ogni elemento dell'array.

27
00:01:53,620 --> 00:01:55,680
E questo funziona anche per la

28
00:01:58,230 --> 00:01:59,910
sottrazione delle divisioni di moltiplicazione.

29
00:01:59,910 --> 00:02:04,820
Quindi se volessi sottrarre 100 da ogni atomo nella pausa per dire meno 100.

30
00:02:05,130 --> 00:02:05,760
Tutto ok.

31
00:02:05,760 --> 00:02:11,940
Quindi queste sono operazioni aritmetiche di base che è possibile eseguire con l'array su operazioni di array

32
00:02:11,940 --> 00:02:13,800
o array con operazioni scalari.

33
00:02:13,950 --> 00:02:20,510
Qualcosa che voglio mostrarti è che un sacco di volte in cui NUMP emette un avviso anziché

34
00:02:20,580 --> 00:02:22,940
emettere errori su determinate operazioni matematiche.

35
00:02:23,220 --> 00:02:31,250
Quindi, ad esempio, se provo a dire che 1 diviso per zero in Python, otterrò un errore effettivo, che ha zero errori di

36
00:02:31,250 --> 00:02:35,290
divisione che ha senso perché non puoi dividere un numero per zero.

37
00:02:35,340 --> 00:02:38,400
Tuttavia PI non ti darà lo stesso errore.

38
00:02:38,490 --> 00:02:43,860
Quindi, se provo a dire un tasso diviso per Array.

39
00:02:43,890 --> 00:02:46,200
Si noti che il primo elemento è zero.

40
00:02:46,230 --> 00:02:50,240
Proverò a dire zero diviso per zero che non ha davvero senso.

41
00:02:50,250 --> 00:02:53,570
Tuttavia nessuno pi emetterà un avvertimento.

42
00:02:53,570 --> 00:02:58,580
Dirà un valore non valido incontrato in verità come qui e ti darà un null.

43
00:02:58,620 --> 00:03:05,100
Se provi a dividere zero per zero tutto il resto è OK perché dice che 1 diviso per 1 è 1 2 diviso

44
00:03:05,100 --> 00:03:06,360
per 2 è 1.

45
00:03:06,390 --> 00:03:07,710
Eccetera. eccetera. Tuttavia i primi vengono divisi per zero e ti danno un nome o nessun oggetto indietro.

46
00:03:07,710 --> 00:03:14,170
In realtà non ha fornito un errore per te, il che significa che

47
00:03:14,250 --> 00:03:19,170
ottieni comunque un risultato che è importante notare la differenza.

48
00:03:19,380 --> 00:03:20,840
Ciò significa che se si dispone di una sorta di operazione nel codice in realtà non si otterrà un errore.

49
00:03:20,850 --> 00:03:25,310
Il codice continuerà a funzionare e invece riceverà solo un avviso se

50
00:03:25,350 --> 00:03:30,900
si tenta di eseguire un'operazione che divide vides forse un altro numero per zero.

51
00:03:30,900 --> 00:03:32,980
Quindi per esempio 1 diviso per 0 invece di 0 il Vajda per zero.

52
00:03:32,990 --> 00:03:36,720
Riceverai anche un avvertimento.

53
00:03:36,720 --> 00:03:38,190
Ma in questo caso lo show di Alexa è infinito anziché null.

54
00:03:38,400 --> 00:03:41,880
Quindi, ancora una volta ottieni una divisione per zero e contrasta e vera l'avvertenza vide qui.

55
00:03:42,150 --> 00:03:45,930
Tuttavia esegue ancora il codice e si ottiene abbastanza per significare l'infinito per quello diviso per zero.

56
00:03:46,050 --> 00:03:52,170
A quegli stessi primi elementi.

57
00:03:52,440 --> 00:03:55,340
Tutto ok.

58
00:03:55,350 --> 00:03:55,800
Quindi questo è

59
00:03:55,800 --> 00:04:00,270
qualcosa da tenere a mente quando lavori con la divisione e gli array che contengono un numero sono cifre 0 e anche una nota rapida, dato che puoi anche fare array con esponenti.

60
00:04:00,270 --> 00:04:06,760
Dico Asterix Asterix proprio come faresti con Python e poi con lo scalare o l'array.

61
00:04:06,780 --> 00:04:12,510
Quindi questa è la matrice per il potere di due.

62
00:04:12,660 --> 00:04:15,210
Quindi tutto è stato quadrettato nella matrice Nel discorso

63
00:04:15,270 --> 00:04:21,870
sulla funzione di matrice universale, il tastierino numerico viene fornito con molte funzioni di array universale che sono essenzialmente solo operazioni matematiche.

64
00:04:21,870 --> 00:04:26,220
È possibile utilizzare per eseguire l'operazione e trasmettere attraverso l'intero array.

65
00:04:26,220 --> 00:04:30,830
Andiamo avanti e mostriamo alcuni comuni.

66
00:04:30,840 --> 00:04:33,390
Ad esempio se vuoi prendere la radice quadrata

67
00:04:33,450 --> 00:04:39,060
di ogni elemento dell'array puoi semplicemente dire P che è la tua t e quindi passare nella matrice stessa.

68
00:04:39,100 --> 00:04:42,690
E questo prenderà la radice quadrata di tutto nella matrice.

69
00:04:42,930 --> 00:04:46,550
Allo stesso modo per calcolare l'esponenziale si può dire

70
00:04:46,560 --> 00:04:55,830
che XP e nell'array o al massimo si può dire l'array che Max o si potrebbe anche dire che Max e passare nell'array.

71
00:04:55,830 --> 00:05:01,010
È la stessa cosa che si chiama il metodo che abbiamo

72
00:05:01,230 --> 00:05:06,120
visto in precedenza nella prima lezione su di loro pyros.

73
00:05:06,120 --> 00:05:07,750
È possibile anche Neutrik che

74
00:05:07,770 --> 00:05:15,560
le funzioni della metrica siano tali e in pratica passeranno ogni elemento in seno e c'è il co-segno e ci sono anche opzioni logaritmiche.

75
00:05:15,570 --> 00:05:19,710
Puoi dire che il log e se qualcosa non funziona, ad

76
00:05:19,710 --> 00:05:25,380
esempio il log di zero è tecnicamente negativo all'infinito, riceverai effettivamente un avviso di runtime.

77
00:05:25,380 --> 00:05:28,520
Diviso per zero.

78
00:05:28,530 --> 00:05:29,590
Ma ti darà l'infinito negativo è la risposta.

79
00:05:29,730 --> 00:05:32,610
Se ti stai chiedendo dove è possibile trovare un elenco di tutte queste funzioni o

80
00:05:32,610 --> 00:05:36,870
riferimenti di array universali, puoi andare avanti e controllare il notebook e contiene un link per le funzioni di array universale.

81
00:05:36,870 --> 00:05:41,550
Ti porterà a link che assomiglia a questo.

82
00:05:41,840 --> 00:05:44,540
Questa è la documentazione del raid dell'Impero qui per le funzioni universali o si funziona.

83
00:05:44,550 --> 00:05:50,340
E se scorri verso il basso fino alla fine di questa pagina e ancora questo link è nel taccuino per questa lezione.

84
00:05:50,610 --> 00:05:55,260
Ora operazioni PI.

85
00:05:55,620 --> 00:05:57,090
Vedrai un intero elenco di tutte le funzioni universali che hai a disposizione per te.

86
00:05:57,090 --> 00:06:00,690
Quindi hai operazioni matematiche di base aggiungi sottrazione resto assoluto ecc. Funzioni trigonometriche della Laga e

87
00:06:00,900 --> 00:06:07,560
poi alcune funzioni più avanzate.

88
00:06:08,040 --> 00:06:10,320
Sono solo funzioni di confronto massimi minimi di funzioni fluttuanti, ecc. propria funzione per gestire quella particolare operazione matematica.

89
00:06:10,330 --> 00:06:14,860
Se si tratta di una funzione matematica molto semplice o comune, è consigliabile visitare prima

90
00:06:15,270 --> 00:06:20,730
questa pagina e vedere se alcuni elementi di torta sono già incorporati prima di iniziare a creare la

91
00:06:20,730 --> 00:06:26,280
Stavi cercando di esibirti sul tuo array.

92
00:06:26,280 --> 00:06:27,320
Bene a quelli di base durante il

93
00:06:27,330 --> 00:06:29,070
corso e ti ricorderanno come li abbiamo incontrati durante il resto del corso.

94
00:06:29,370 --> 00:06:34,350
OK, questo è tutto ciò che c'è per quanto riguarda le operazioni di base sugli array.

95
00:06:34,410 --> 00:06:35,830
Puoi semplicemente usare l'aritmetica di base su un array per irragionevole o con un array e una base scalare.

96
00:06:36,090 --> 00:06:39,840
L'unica cosa a cui prestare attenzione è se hai uno 0 e stai usando array divisionali.

97
00:06:40,080 --> 00:06:46,650
Quindi la seconda parte di questa lezione ha appena coperto una funzione di matrice universale in cui è stata trovata.

98
00:06:46,980 --> 00:06:51,230
Tieni presente che le operazioni matematiche più comuni sono già integrate in esse da OK.

99
00:06:51,390 --> 00:06:55,990
Grazie a tutti e ci vediamo alla prossima lezione

100
00:06:56,040 --> 00:07:01,780
&nbsp;

101
00:07:01,980 --> 00:07:04,020
&nbsp;
