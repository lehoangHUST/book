1
00:00:05,400 --> 00:00:10,170
Bună ziua tuturor și vă urez bun venit la cursul de lectură al acestei conferințe, vom examina câteva

2
00:00:10,170 --> 00:00:15,090
dintre cele mai importante operațiuni pentru panda și vom învăța câteva operații utile pe care nu le-am mai

3
00:00:15,090 --> 00:00:15,930
dat încă.

4
00:00:16,290 --> 00:00:19,850
Să mergem înainte și să pornim la notebook-ul Jupiter pentru a începe.

5
00:00:19,860 --> 00:00:20,160
In regula.

6
00:00:20,160 --> 00:00:22,020
Aici sunt la notebook-ul Jupiter.

7
00:00:22,020 --> 00:00:26,520
Am mers înainte și am copiat doar prima celulă a operației este cartea care merge cu această prelegere

8
00:00:26,850 --> 00:00:28,830
pentru a crea acest cadru de date.

9
00:00:28,830 --> 00:00:30,060
Are doar trei coloane.

10
00:00:30,060 --> 00:00:37,940
Apelați 1 apel pentru a apela 3 și are un index de doar numere 0 1 2 3 și apelați 1 avem 4 cifre și sunați

11
00:00:37,940 --> 00:00:38,520
2.

12
00:00:38,700 --> 00:00:40,550
Avem patru numere aici.

13
00:00:40,680 --> 00:00:46,460
Dar observați că 4 4 4 este repetat și apoi sunați 3 avem doar patru seturi de șiruri de caractere.

14
00:00:46,470 --> 00:00:49,780
Să vorbim despre găsirea unor valori unice într-un cadru de date.

15
00:00:49,800 --> 00:00:56,460
Există trei metode utile principale care vizează găsirea de valori unice într-un cadru de date.

16
00:00:56,460 --> 00:01:00,570
Imaginați-vă că doriți să găsiți toate valorile unice din coloana a doua.

17
00:01:00,690 --> 00:01:07,590
Metoda pe care o putem folosi pentru aceasta este doar metoda unică și aceasta va întoarce o rată mai mare a tuturor

18
00:01:07,590 --> 00:01:13,110
valorilor unice din coloana a doua, în loc să-și dorească de fapt matricea de valori unice.

19
00:01:13,110 --> 00:01:16,960
Să presupunem că doriți doar numărul de valori în sine.

20
00:01:16,980 --> 00:01:18,600
Ei bine, există două metode pentru asta.

21
00:01:18,630 --> 00:01:24,930
Ați putea verifica doar lungimea matricei returnate și tipul răspunsului la 3 sau 3 valori unice

22
00:01:24,930 --> 00:01:26,210
în coloana 2.

23
00:01:26,580 --> 00:01:31,740
Dar Halo are de fapt o metodă construită în acest sens și este unică și unică.

24
00:01:31,770 --> 00:01:34,670
Și dacă conduc celula, primesc același răspuns.

25
00:01:34,740 --> 00:01:35,190
In regula.

26
00:01:35,280 --> 00:01:36,600
Deci avem unicat.

27
00:01:37,110 --> 00:01:40,750
Pentru returnarea reală a unei serii de valori unice și unice.

28
00:01:41,010 --> 00:01:46,890
Dacă vreau numărul de valori unice, funcția mai puțin utilă pe care vreau să o arăt este valoarea contează.

29
00:01:46,950 --> 00:01:52,470
Și acest lucru înseamnă, în principiu, că dacă doriți o tabelă cu valorile unice și

30
00:01:52,470 --> 00:01:57,300
de câte ori acestea apar, puteți utiliza doar metode de subliniere a valorilor.

31
00:01:57,420 --> 00:02:00,440
Rulați acest lucru și acesta se întoarce.

32
00:02:00,660 --> 00:02:03,980
De câte ori a apărut o valoare unică în coloana respectivă.

33
00:02:04,010 --> 00:02:09,810
În acest caz, 4 4 4 apar de două ori, iar celelalte numere au apărut câte o dată.

34
00:02:09,810 --> 00:02:14,490
În fine, acestea sunt trei metode foarte utile și veți găsi că le folosiți adesea în cadrul exercițiilor.

35
00:02:15,210 --> 00:02:18,390
Să mergem mai departe și să vorbim despre selectarea datelor.

36
00:02:18,480 --> 00:02:24,300
Am trecut deja selecția condiționată, dar vreau să reamintesc cât de important este și cât de

37
00:02:24,300 --> 00:02:26,420
puternic este ca un instrument.

38
00:02:26,610 --> 00:02:33,810
Avem cadrul nostru de date DMF și putem folosi selecția condiționată prin trecerea într-o declarație de selecție condiționată,

39
00:02:33,810 --> 00:02:41,160
cum ar fi spunând returnați T. F. unde coloana 1 este mai mare de 2.

40
00:02:41,250 --> 00:02:46,410
Și aceasta va returna toate rândurile cadrului de date în cazul în care coloana 1 se întâmplă să fie mai mare de 2.

41
00:02:46,500 --> 00:02:53,920
Amintiți-vă că această comandă din interior este în esență doar o serie booleană de False False Adevărat adevărat.

42
00:02:54,000 --> 00:03:00,630
Acum, ca o reamintire rapidă dacă doriți să combinați condițiile, puteți împacheta aceste condiții în paranteze și apoi utilizați fie

43
00:03:02,070 --> 00:03:05,090
un operator ampersand, fie un operator de țevi.

44
00:03:05,220 --> 00:03:07,140
Penny dacă vrei și sau sau.

45
00:03:07,410 --> 00:03:15,090
Apoi, puteți spune în alte condiții, cum ar fi unde apelat la trimiteți are un șir are o

46
00:03:15,090 --> 00:03:21,600
calitate cu 4 4 4 și retur doar acel ultim rând 3 și acolo este.

47
00:03:21,900 --> 00:03:23,000
O.K.

48
00:03:23,000 --> 00:03:26,640
Deci, doar un memento rapidă a modului de selectare a datelor utilizând selecția condiționată.

49
00:03:26,910 --> 00:03:33,030
Acum, să vorbim despre metoda aplicată, metoda aplicată va fi unul dintre cele mai puternice instrumente din centura de

50
00:03:33,120 --> 00:03:35,180
scule atunci când se utilizează pandererii.

51
00:03:35,400 --> 00:03:38,080
Deci haideți să ieșim și să vă arătăm cum funcționează.

52
00:03:38,190 --> 00:03:52,640
Magin avem o funcție DPF ori 2 care are o valoare X și apoi se întoarce să spunem X ori 2.

53
00:03:52,650 --> 00:03:54,920
O funcție foarte simplă.

54
00:03:55,020 --> 00:04:01,740
Acum știi că deja poți apuca, de exemplu, o coloană și apela o funcție construită din ea,

55
00:04:01,890 --> 00:04:05,660
cum ar fi suma și care returnează suma coloanei.

56
00:04:05,700 --> 00:04:10,270
Dar dacă doriți să aplicați propria funcție personalizată, cum ar fi ori prea bine.

57
00:04:10,320 --> 00:04:11,840
Are abilitatea de a face asta.

58
00:04:11,880 --> 00:04:18,300
Puteți doar să spuneți numele coloanei și apoi să aplicați și apoi să treceți în orice

59
00:04:18,300 --> 00:04:25,830
funcție doriți să aplicați acest caz, vom merge mai departe și vom aplica ori și aceasta va transmite această funcție

60
00:04:25,830 --> 00:04:29,990
la fiecare element din acea coloană 2 4 6 8.

61
00:04:30,000 --> 00:04:33,040
De asemenea, puteți aplica funcții construite, cum ar fi lungimea.

62
00:04:33,120 --> 00:04:37,820
De exemplu, dacă aruncăm o privire la coloana a treia, avem o grămadă de șiruri de caractere.

63
00:04:37,860 --> 00:04:41,370
Să presupunem că am vrut o coloană care să fie prezentă la lungimea fiecărui șir.

64
00:04:41,370 --> 00:04:47,520
Ei bine, atunci am putea spune că se aplică în persoană Elyon și că returnează lungimea fluxului, care în acest caz

65
00:04:47,520 --> 00:04:50,880
a fost de 3 pentru toate aceste corzi se aplică.

66
00:04:50,880 --> 00:04:54,530
Va fi deosebit de puternic atunci când îl combinați cu expresiile de pământ.

67
00:04:54,570 --> 00:04:58,030
În acest fel nu este nevoie să luați tot timpul pentru a defini o întreagă funcție.

68
00:04:58,050 --> 00:05:02,580
Dacă o să o aplicați o dată, de exemplu, să mergem mai departe și să facem o expresie a

69
00:05:02,580 --> 00:05:03,700
lămpii de 2 ori.

70
00:05:03,870 --> 00:05:12,960
Voi ieși să-i spun lui Lamda X și apoi doar x de ori. 2 Voi aplica acest lucru pentru a-l

71
00:05:12,990 --> 00:05:13,920
chema.

72
00:05:14,370 --> 00:05:16,160
Să mergem mai departe și să vedem cum funcționează aceasta.

73
00:05:16,820 --> 00:05:17,600
Și acolo aveți.

74
00:05:17,680 --> 00:05:23,050
Am reușit să înmulțim fiecare valoare în acea coloană cu două și am reușit să facem acest lucru fără a fi

75
00:05:23,040 --> 00:05:25,220
nevoie să scriem o întreagă funcție pentru aceasta.

76
00:05:25,240 --> 00:05:29,340
Tocmai am făcut acest lucru ca un miel expresia și acesta este genul de lucru pe care îl veți folosi tot timpul, pe

77
00:05:29,340 --> 00:05:31,830
măsură ce vă veți bucura din ce în ce mai mult de panda.

78
00:05:31,830 --> 00:05:36,150
Aceasta, probabil, una dintre cele mai puternice caracteristici ale pantless abilitatea de a aplica

79
00:05:36,150 --> 00:05:38,280
propriile expresii sau funcții lambda personalizate.

80
00:05:38,280 --> 00:05:42,680
Bine, să vorbim despre eliminarea din nou a Combs.

81
00:05:42,690 --> 00:05:46,110
Dacă avem dacă vrem să spunem că eliminăm.

82
00:05:46,120 --> 00:05:47,580
Coloana 1.

83
00:05:47,580 --> 00:05:55,360
Putem spune că ZF aruncă coloana pe care dorim să o desenectăm.

84
00:05:55,380 --> 00:06:00,250
Și apoi rețineți, deoarece este în coloanele pe care trebuie să le specificăm accesul este egal cu 1.

85
00:06:00,570 --> 00:06:04,070
Și aceasta va scădea acea coloană dacă vrem să se întâmple așa.

86
00:06:04,200 --> 00:06:09,580
Trebuie să specificăm în loc egal cu adevărat.

87
00:06:09,720 --> 00:06:11,800
Să mergem mai departe și să nu fugim.

88
00:06:11,810 --> 00:06:17,790
Așadar, păstrăm cadrul original de date dacă doriți să obțineți numele de coloană și de index dintr-un cadru de date.

89
00:06:18,090 --> 00:06:21,070
Acestea sunt de fapt doar atribute ale cadrului de date în sine.

90
00:06:21,370 --> 00:06:29,050
Înseamnă că puteți spune că coloanele DF vor întoarce acest tip de obiect index în esență doar o listă cu numele

91
00:06:29,040 --> 00:06:29,800
de coloane.

92
00:06:29,810 --> 00:06:34,930
Acest lucru va fi util în special atunci când încercați să indice o coloană și poate că spațierea este ciudată

93
00:06:34,920 --> 00:06:37,500
sau nu vă puteți da seama ce este șirul.

94
00:06:37,500 --> 00:06:40,940
Puteți să apelați doar coloane DFA sau orice nume al cadrului de date.

95
00:06:41,040 --> 00:06:46,170
Și voi întoarce această listă de nume de coloane și de fapt puteți face același lucru pentru un index.

96
00:06:46,360 --> 00:06:49,540
Puteți spune că indexul DFA vă va oferi informații despre index.

97
00:06:49,770 --> 00:06:55,830
Acest caz, deoarece este un indice de interval, de fapt, raportează doar stopul de pornire și

98
00:06:55,830 --> 00:06:57,360
dimensiunea pasului indexului.

99
00:06:57,370 --> 00:07:01,800
Bine, să vorbim despre sortarea și ordonarea unui cadru de date.

100
00:07:02,000 --> 00:07:07,880
Aici avem respirație adâncă și ne imaginăm că doriți să o sortați după coloana 2.

101
00:07:08,130 --> 00:07:13,890
În esență, vrem 4 4 4 și apoi 4 pentru 4 din nou înainte de a vedea 5 5 5 și 6 6.

102
00:07:14,040 --> 00:07:17,330
Putem folosi valori de sortare pentru a face acest lucru.

103
00:07:18,150 --> 00:07:22,750
Ați solicitat valori pentru sublinierea DMF.

104
00:07:22,920 --> 00:07:28,200
Și apoi, ca argument, spuneți că până acum am verificat fila de schimbare aici, putem spune pa,

105
00:07:28,200 --> 00:07:32,280
și ați putea ordona acest lucru, fie din rânduri, fie din coloane.

106
00:07:32,280 --> 00:07:36,910
Dar în esență tu doar Pessin, ca argument, coloana pe care vrei să o sortezi.

107
00:07:36,960 --> 00:07:43,580
Aș vrea să clasific acest lucru după coloana 2 și puteți spune doar o coloană pentru ca o astfel de schimbare să intre.

108
00:07:43,600 --> 00:07:50,280
Și acum am un fel de stare de cadre pe coloană pentru a ști cum rămâne indexul pe rând.

109
00:07:50,310 --> 00:07:52,520
Deci nu pierdeți niciodată acele informații acolo.

110
00:07:52,920 --> 00:07:59,220
Și acesta este același lucru ca și cum spuneam doar în coloana 2 același lucru, deoarece se așteaptă să

111
00:07:59,230 --> 00:08:00,350
fie primul argument.

112
00:08:01,020 --> 00:08:01,440
In regula.

113
00:08:01,830 --> 00:08:04,370
Să vorbim despre doar câteva operații utile.

114
00:08:04,530 --> 00:08:12,410
O metodă foarte utilă pentru a nu găsi valori în cadrul dvs. de date este DFT este nulă și acest lucru va reveni

115
00:08:12,410 --> 00:08:17,940
un cadru de date de booleani indicând dacă valoarea a fost sau nu nulă sau nu.

116
00:08:17,940 --> 00:08:23,340
În acest caz, obținem un boolean din toate falsurile, deoarece ne-am cunoscut nulls în cadrul nostru de date.

117
00:08:23,350 --> 00:08:23,730
In regula.

118
00:08:23,740 --> 00:08:29,690
Acum, să vorbim despre o ultimă funcție sau o metodă în pantaloni numită pivot.

119
00:08:29,940 --> 00:08:33,890
Această metodologie va fi foarte familiarizată pentru utilizatorii avansați Excel.

120
00:08:34,000 --> 00:08:40,340
Am de gând să merg și să copiez și să lipesc un cod din cartea de note pentru a crea un nou cadru de date.

121
00:08:41,080 --> 00:08:44,210
Vom ieși afară și verificăm starea cadrului în care avem ceva care arată așa.

122
00:08:44,250 --> 00:08:46,820
Avem coloane b c și d.

123
00:08:47,460 --> 00:08:54,010
Și observați aici că avem valori repetitive atât în ​​coloana A coloana B, cât și în coloana C pe care

124
00:08:54,000 --> 00:08:57,850
o coloană o are Foo și barele B au două perechi.

125
00:08:58,050 --> 00:09:04,950
C are X și înțelept și apoi D are niște valori întregi pe care le puteți folosi pivotul DFT.

126
00:09:04,950 --> 00:09:09,600
Creați o tabelă pivot și, dacă nu sunteți familiarizat cu Pivot Tables nu mi-ar face griji prea

127
00:09:09,960 --> 00:09:15,120
mult, dar dacă sunteți probabil un utilizator Excel care este familiarizat cu Pivot Tables Sperăm că veți găsi această

128
00:09:15,120 --> 00:09:15,760
funcție utilă.

129
00:09:16,000 --> 00:09:21,810
Practic, în cazul în care vom face pentru a nu utilizatorii de excel este doar a crea un index multi din acest

130
00:09:22,170 --> 00:09:23,940
tabel sau un cadru de date.

131
00:09:24,420 --> 00:09:33,600
Metoda de a face acest lucru este să-i dați tabelul de subliniere și tabelul de pivot pentru subliniere să ia în

132
00:09:34,000 --> 00:09:37,450
trei argumente principale valorile indexului și coloanelor.

133
00:09:37,500 --> 00:09:43,050
În acest caz, hai să mergem mai departe și să indicați că valorile pe care le dorim în tabelul nostru sunt aceste valori.

134
00:09:43,060 --> 00:09:44,250
Aceasta este ceea ce dorim de fapt.

135
00:09:44,250 --> 00:09:47,270
Datele din cadrele de date care urmează să fie alcătuite din.

136
00:09:47,280 --> 00:09:52,140
Așa că am să spun că valorile sunt egale cu coloana D.

137
00:09:53,040 --> 00:09:59,950
Și apoi voi stabili indexul meu să fie egal cu coloana A și cu coloana B și asta va face, în principiu, să

138
00:09:59,940 --> 00:10:03,200
facă a și b un index pe mai multe nivele.

139
00:10:03,210 --> 00:10:09,760
Așa că mergeți la lista pasagerilor atunci când este vorba de mai mult de un indice de coloană și de B.

140
00:10:09,780 --> 00:10:14,950
Și apoi, în final, vreau ca coloanele mele reale să fie definite de coloana C.

141
00:10:15,070 --> 00:10:21,810
Acest caz vedeți doar că trec asta ca o listă aici și rețineți că vă spun că va fi

142
00:10:21,820 --> 00:10:22,320
coloana.

143
00:10:22,330 --> 00:10:25,860
Deci ar trebui să ajung cu o coloană pentru X și o coloană pentru y.

144
00:10:25,870 --> 00:10:28,360
Să mergem mai departe și să vedem cum funcționează aceasta.

145
00:10:28,470 --> 00:10:34,390
O să mai rulez încă o dată aici pentru a putea compara cadrul original de date versus

146
00:10:34,380 --> 00:10:36,930
pivotul pe care urmează să-l creez.

147
00:10:36,930 --> 00:10:38,970
În regulă, am rulat comanda de pivot.

148
00:10:39,180 --> 00:10:41,220
Și să mergem și să comparăm cele două.

149
00:10:41,400 --> 00:10:47,580
Se pare că un indice creat din acele coloane și B, astfel încât să aibă sens lexical o bară

150
00:10:47,590 --> 00:10:54,780
și un foo și apoi una și două repetate apoi coloanele reale vreau acolo unde valorile în acest caz doar X și Y

151
00:10:54,780 --> 00:10:58,410
și valorile reale ale punctului de date au fost coloanele D.

152
00:10:58,600 --> 00:11:03,820
Nu, nu am valori aici pentru că nu există valori care să corespundă acelui punct specific.

153
00:11:04,200 --> 00:11:11,130
Înseamnă că dacă m-am uitat înapoi la cadrul original de date nu există nici o valoare care să vină cu bara la x.

154
00:11:11,130 --> 00:11:16,130
Deci, dacă te uiți aici nu vei găsi barrer la X. veți găsi doar partea a 2-a.

155
00:11:16,750 --> 00:11:19,550
Și, de asemenea, pentru alimente la y.

156
00:11:19,600 --> 00:11:25,850
Nu există nici un fel de mâncare pentru motivul pentru care nu există decât alimente pentru X și de aceea nu a fost nevoie să completăm valori aici.

157
00:11:25,920 --> 00:11:26,500
O.K.

158
00:11:26,560 --> 00:11:31,320
Simțiți-vă liber să postați întrebările și întrebările dacă aveți mai multe întrebări despre Pivot Tables sau doriți mai multe

159
00:11:31,330 --> 00:11:32,950
resurse pentru exemplele din Pivot Tables.

160
00:11:32,940 --> 00:11:34,870
Nu vom folosi cu adevărat aceste lucruri de multe ori în curs.

161
00:11:34,870 --> 00:11:39,630
De fapt, există doar o întrebare despre un exercițiu mai târziu în care lucrăm cu hărți termice în ceea ce privește

162
00:11:39,630 --> 00:11:41,180
modul de utilizare a tabelelor pivot.

163
00:11:41,250 --> 00:11:45,930
Dar, pentru moment, nu vă îngrijorați decât dacă sunteți deja familiarizați cu tabele pivot de la ceva

164
00:11:46,000 --> 00:11:46,970
de genul Excel.

165
00:11:47,110 --> 00:11:47,770
O.K.

166
00:11:47,940 --> 00:11:50,100
Sper că unele dintre aceste operațiuni ți-au fost utile.

167
00:11:50,130 --> 00:11:55,340
Ei văd doar o pungă de apucă de funcții utile și metode care sunt disponibile în panas.

168
00:11:55,470 --> 00:12:01,440
Puteți să mergeți înainte și să consultați notebook-ul de lectură al operațiunilor pandas care este sub

169
00:12:01,470 --> 00:12:02,510
dosarul panderers.

170
00:12:02,520 --> 00:12:04,580
Mulțumesc tuturor și o să văd la următoarea conferință
