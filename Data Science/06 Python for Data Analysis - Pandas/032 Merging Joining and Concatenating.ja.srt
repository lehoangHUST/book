1
00:00:05,280 --> 00:00:07,320
みなさんこんにちは、講義を歓迎します。

2
00:00:07,440 --> 00:00:11,140
この講義をデータフレームにすることはできません。

3
00:00:11,160 --> 00:00:16,110
&nbsp;

4
00:00:16,110 --> 00:00:21,180
&nbsp;

5
00:00:21,180 --> 00:00:25,150
これらのメソッドとコマンドは実際には本当に簡単であり、タイピングの大部分は実際にはマージまたは結合するデータフレームを実際に作成するだけなので、実際にすべてをコーディングする代わりに、さまざまな方法でデータフレームを結合する方法を学習します。

6
00:00:25,170 --> 00:00:29,160
私たちはこの講義のために講義ノートを歩いていくだけです。

7
00:00:29,160 --> 00:00:32,920
これはマージン・ジョイナリと呼ばれ、連結しており、パンダのフォルダの下にあります。

8
00:00:33,150 --> 00:00:35,610
今すぐ木星ノートにジャンプしましょう。

9
00:00:35,670 --> 00:00:35,970
大丈夫。

10
00:00:35,970 --> 00:00:41,250
ここでは結合と連結をマージするための木星ノートブックにあります。

11
00:00:41,250 --> 00:00:45,080
最初に、ここで使用するサンプルデータフレームをいくつか作成します。

12
00:00:45,120 --> 00:00:50,150
私はpandas PDをインポートし、辞書とインデックス番号のリストを使用しました。

13
00:00:50,310 --> 00:00:57,000
私は3つのデータフレームを作成しました.1つのDFAから3つのADFへこれらのデータフレームを見てみると、ABCとDの列と0から3までのインデックスを持つDiffとDF

14
00:00:57,000 --> 00:01:05,470
2のインデックスは同じです4から7まで、そしてDF

15
00:01:05,610 --> 00:01:12,370
3は11までの指数を有する。

16
00:01:12,390 --> 00:01:17,430
連結連結について話しましょう。基本的に、データフレームを連結します。

17
00:01:17,440 --> 00:01:20,570
寸法はMachelと軸上で一致する必要があります。

18
00:01:20,580 --> 00:01:23,100
あなたはこれを連結しようとしています。

19
00:01:23,100 --> 00:01:29,540
PD dot

20
00:01:29,690 --> 00:01:36,190
com catを使用して、データフレームのリストを渡してここで連結します。データフレームを1つ2つと3つをPDにリストに渡して連結します。

21
00:01:36,210 --> 00:01:39,090
Concat関数。

22
00:01:39,310 --> 00:01:43,600
デフォルトでjoin onへのアクセスはゼロであることがわかります。

23
00:01:43,620 --> 00:01:45,970
それは一緒に行を結合することを意味します。

24
00:01:46,440 --> 00:01:52,580
ここでは、データフレームを正しく連結または基本的に接着したことがわかります。ここでは、bとcとdをインデックス0の列として11まで表示しています。

25
00:01:52,590 --> 00:01:57,510
&nbsp;

26
00:01:57,560 --> 00:02:00,100
各データポイントはうまく整列しています。

27
00:02:00,270 --> 00:02:06,090
ここで、xを1に設定すると、列に沿って結合およびマージしたり、列に沿って連結したりすることができます。

28
00:02:06,150 --> 00:02:07,290
&nbsp;

29
00:02:07,680 --> 00:02:13,770
これは、Kanchaがこれらの3つのデータフレームに沿ってPDを使用するとどうなるかの例です。

30
00:02:13,830 --> 00:02:15,900
Xは1に等しい。

31
00:02:15,900 --> 00:02:20,970
ここでは、欠落している値がたくさんあることに注意してください。これは、これらのデータフレームに、連結したいすべてのインデックスの値がないためです。

32
00:02:20,970 --> 00:02:23,800
&nbsp;

33
00:02:24,060 --> 00:02:31,640
たとえば、データフレーム1 A BとCとDの場合、0〜3の値があります。

34
00:02:31,650 --> 00:02:37,290
しかし、11までのすべての方法で、値を持たなかったので、これを結合したときKnollesで埋められたのは、データとデータフレーム3に連結されているからです。連結とP-doc連結で作業するとき、

35
00:02:37,290 --> 00:02:44,850
Axesに参加したときに情報が正しく整列されていることを確認します。

36
00:02:44,850 --> 00:02:50,910
&nbsp;

37
00:02:51,120 --> 00:02:53,960
&nbsp;

38
00:02:54,120 --> 00:02:58,850
この場合、すべてを正しく整列させるために0に等しいアクセス権に参加したいと考えました。

39
00:02:58,860 --> 00:03:00,740
どのようにして列に沿って結合を指定しますか？

40
00:03:00,750 --> 00:03:02,100
続編を1つにファックスします。

41
00:03:02,250 --> 00:03:04,890
私たちには情報がたくさん残っています。

42
00:03:04,890 --> 00:03:09,450
ほとんどの場合、たぶんあなたはおそらく一緒に列に参加しているので、実際に一緒に参加します。

43
00:03:09,450 --> 00:03:11,060
アクセスは1に等しい。

44
00:03:11,080 --> 00:03:15,890
ただし、アクセスを選択する前に、データと実際に連結する内容を確認してください。

45
00:03:16,710 --> 00:03:19,560
さあ、行きましょう。

46
00:03:19,650 --> 00:03:22,440
この場合、サンプルデータフレームをいくつか作成します。

47
00:03:22,440 --> 00:03:27,780
1つは左を呼び出し、もう1つは左を見ます。

48
00:03:27,780 --> 00:03:34,680
0からK 3を持っています。

49
00:03:34,680 --> 00:03:40,340
我々は列Aと列Bにいくつかの値を持っています。そして、列CとDを持つ以外は非常に似たデータフレームを持つ正しいデータフレームを持つキー列k

50
00:03:40,470 --> 00:03:45,690
&nbsp;

51
00:03:45,690 --> 00:03:51,850
しかし、キー列は左と全く同じですので、左のデータフレームと右のデータフレームのパンダラーはマージ機能を使用してマージロジックを実行できます。

52
00:03:51,870 --> 00:03:55,020
これは、後編テーブルを一緒にマージすることと非常によく似ています。

53
00:03:55,230 --> 00:03:59,610
続編で作業しない場合は、これについてあまり心配する必要はありませんが、2つのデータフレームをマージする方法の基本を紹介します。

54
00:03:59,610 --> 00:04:02,100
&nbsp;

55
00:04:02,100 --> 00:04:07,790
PDとは、左のデータフレームと右のデータフレームをマージして渡します。

56
00:04:07,920 --> 00:04:14,470
または、1つまたは複数のデータフレームから、それらを一緒にマージしたいデータフレームに変換するだけです。

57
00:04:14,550 --> 00:04:16,840
デフォルトではinnerにマージされます。

58
00:04:17,040 --> 00:04:22,440
合併症が起きたときにあなたに慣れていないのであれば、それを心配する必要はありません。

59
00:04:22,470 --> 00:04:23,160
&nbsp;

60
00:04:23,220 --> 00:04:26,700
もっと重要なことは、これについて学ぶことです。

61
00:04:26,700 --> 00:04:31,200
基本的には、マージしているときにキー列をマージしたいのですが、実際にキー列を1つ以上渡すことができます。

62
00:04:31,200 --> 00:04:33,740
&nbsp;

63
00:04:33,810 --> 00:04:39,930
しかし基本的にここでは、これらのデータフレームをこのキー列で結合または結合するつもりです。

64
00:04:39,930 --> 00:04:41,090
&nbsp;

65
00:04:41,220 --> 00:04:46,650
そして、それらを連結するのではなく、マージできる2つのキー列があるので、それらをマージしたり、それらを共有するのと同じキー列にジョインしたりします。

66
00:04:46,650 --> 00:04:49,960
&nbsp;

67
00:04:50,280 --> 00:04:55,050
したがって、ここでのロジックは、データフレームをまとめて接着するのではなく、マージするPDを使用しているときに、値が列のどこで一致するかを確認するときです。

68
00:04:55,140 --> 00:04:58,260
&nbsp;

69
00:04:58,260 --> 00:05:03,630
この場合、キー列を作成し、そのキー列を使用して行を作成します。

70
00:05:03,630 --> 00:05:06,570
私に行って、もっと複雑な例をいくつか紹介しましょう。

71
00:05:06,900 --> 00:05:14,910
2番目のデータフレームを指定してonを指定すると、キー1またはキー2などの複数のキーを実際にマージする場合は、キーのリストを渡すことができます。

72
00:05:15,900 --> 00:05:20,820
&nbsp;

73
00:05:21,050 --> 00:05:26,310
&nbsp;

74
00:05:26,310 --> 00:05:33,420
ここで私は左と右のデータフレームを持っていて、ここでは2つのキーとキー2があることに気付くでしょう。そうでなければ最初に見た左と右のものと同じです。

75
00:05:33,870 --> 00:05:38,660
次に、マージアウターまたはマージを使用したいくつかの例を示します。

76
00:05:38,730 --> 00:05:44,850
&nbsp;

77
00:05:44,850 --> 00:05:49,290
&nbsp;

78
00:05:49,290 --> 00:05:53,150
今では、内外の右または左の結合などのシーケンス構文に慣れていない場合、これについての心配はあまりにも多すぎます。コースでこれらを使用することはあまりありません。内部結合を使用するだけです。

79
00:05:53,190 --> 00:05:57,700
&nbsp;

80
00:05:57,690 --> 00:06:04,020
しかし、あなたが一連の続編をしようとしていて、すでに後編構文に慣れているのであれば、余分な機能が必要な場合に、Panchoにこれがどのようにパラメータを使っているかを知っているだけです。

81
00:06:04,020 --> 00:06:05,810
&nbsp;

82
00:06:06,030 --> 00:06:11,520
しかし、基本的にあなたが外側の書き込み内側などを使用している場合に依存します。

83
00:06:11,520 --> 00:06:16,890
いくつかの欠損値があることがわかるかもしれませんので、PDをマージして作業しているときにそれを念頭に置いてください。

84
00:06:16,920 --> 00:06:19,070
ここに、左の例があります。

85
00:06:19,680 --> 00:06:25,080
そして、最終的には、2つの潜在的に異なる索引データ・フレームの列を単一の結果のデータ・フレームに結合するための便利な方法です。

86
00:06:25,080 --> 00:06:29,310
&nbsp;

87
00:06:29,400 --> 00:06:33,840
基本的には、これをマージと同じものと考えることができます。ただし、結合するキーは実際には列の代わりにインデックスにあります。

88
00:06:33,840 --> 00:06:36,680
&nbsp;

89
00:06:36,690 --> 00:06:39,600
ここでは、左右に2つのデータフレームを作成しました。

90
00:06:39,600 --> 00:06:45,620
彼らは列A BとCDを持っていることに注意してください。次に、インデックスは実際にそれらを結合しようとしています。使用できる構文は、left

91
00:06:46,490 --> 00:06:52,530
join right

92
00:06:52,560 --> 00:06:53,990
inが自動的に左右の内部結合を行います。

93
00:06:54,060 --> 00:06:59,880
これらの2つのデータフレームをそれらの列の1つに基づいてマージしたい場合は、インデックスキーに基づいて、マージを使用する必要がありますが、ジョイン方法の機能はデータフレームの1つから外れます。

94
00:06:59,880 --> 00:07:05,220
&nbsp;

95
00:07:05,210 --> 00:07:08,830
結合し、他のデータフレームを渡して、マージのようにします。

96
00:07:08,850 --> 00:07:13,030
内側左外側などのHOWを指定することができます。 この用語は、すでにその用語に精通しているイベント続編ユーザーにのみ覚えておいてください。

97
00:07:13,070 --> 00:07:17,380
あなたがそれに慣れていないなら、あまり心配しないでください。

98
00:07:17,430 --> 00:07:20,330
&nbsp;

99
00:07:20,370 --> 00:07:26,700
マージと綿のデータフレームに参加する方法を簡単に見てみましょう。この講義で取り上げるべき重要なトピックについて説明します。

100
00:07:26,700 --> 00:07:29,000
&nbsp;

101
00:07:29,400 --> 00:07:34,800
データフレームを結合または結合してデータフレームを連結または結合するために、データフレームを結合および連結する限り、そのプロセスは非常に簡単です。

102
00:07:34,800 --> 00:07:37,100
あなたはちょうどpecan

103
00:07:37,320 --> 00:07:43,080
catと言って、あなたのデータフレームのリストをパサンして、行や列で一緒に結合したいかどうかに応じて、正しい軸を指定してください。

104
00:07:43,080 --> 00:07:48,900
次に、PDがマージし、PDがマージしてデータフレームをマージすることができます。マージしたい最初のデータフレームとマージしたい2番目のデータフレームを渡してから、あなたが言うことができます。単一列キー。

105
00:07:48,900 --> 00:07:54,960
&nbsp;

106
00:07:54,960 --> 00:07:59,190
&nbsp;

107
00:07:59,190 --> 00:08:03,000
または、任意のキーのリストを渡すことができます。デフォルトでは、入力時にマージされます。

108
00:08:03,150 --> 00:08:08,420
&nbsp;

109
00:08:08,610 --> 00:08:13,350
&nbsp;

110
00:08:13,590 --> 00:08:19,500
続編テーブルの統合に慣れていない場合は、右の左側の1つのデータフレームの1つのデータフレームを気にする必要はなく、特定のキー列またはキー列のリストを気にする必要はありません。

111
00:08:19,500 --> 00:08:20,550
&nbsp;

112
00:08:20,550 --> 00:08:26,730
これは実際にPDの唯一の機能ですが、私はコース全体で使用し、次に結合するために、2つの潜在的に異なるインデックスのデータフレームの列を結合するためのより高度な方法です。

113
00:08:26,730 --> 00:08:31,560
&nbsp;

114
00:08:31,560 --> 00:08:32,150
&nbsp;

115
00:08:32,160 --> 00:08:37,620
これは実際には列の代わりにインデックスに参加し、その構文は右の左データフレームの名前にすぎないという点を除いて、マージと非常に似ています。

116
00:08:37,620 --> 00:08:42,940
私たちは実際にコース全体で参加を使用することはありませんが、あなたはそれを知っておきたいと思っています。参加を検討したい場合は、このノートブックまたはドキュメントを参照することができます。

117
00:08:43,140 --> 00:08:48,090
&nbsp;

118
00:08:48,090 --> 00:08:51,810
大丈夫です。

119
00:08:52,110 --> 00:08:53,610
ありがとう、私は次の講演でお会いしましょう

120
00:08:53,730 --> 00:08:55,440
&nbsp;
