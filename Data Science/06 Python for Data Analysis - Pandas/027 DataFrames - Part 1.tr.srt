1
00:00:05,850 --> 00:00:10,470
Herkese merhaba ve veri çerçevesinin konferansına hoş geldiniz derler ve bu

2
00:00:10,470 --> 00:00:15,170
ders sonunda ciddi nesne veri çerçevelerinden oluşan veri çerçeveleri hakkında bilgi edineceğiz.

3
00:00:15,180 --> 00:00:17,800
Pandalarla çalışırken ana aracı olacak.

4
00:00:17,970 --> 00:00:21,680
Hadi devam edelim ve nasıl çalıştığını görmek için Jüpiter defterine atlayalım.

5
00:00:21,690 --> 00:00:22,020
Tamam.

6
00:00:22,020 --> 00:00:24,410
İşte Jüpiter Defterindeyim.

7
00:00:24,450 --> 00:00:29,940
Önemli olan bazı turpları ve P ve ithal pandaları PD olarak söyleyeceğiz

8
00:00:29,940 --> 00:00:35,880
ve onları kurtarmak için son bir şey yapacağım, Pied-Bot rasgele ithal Rand ve.

9
00:00:36,350 --> 00:00:38,370
Ve sonra dışarı çıkıp bir tohum hazırlayacağım.

10
00:00:38,370 --> 00:00:42,660
Ve bir tohumun anlamı, sadece aynı rasgele sayıları elde ettiğimizden emin olmaktır.

11
00:00:42,660 --> 00:00:45,510
Bu şekilde beni takip ediyorsanız aynı rastgele sayıları görürsünüz.

12
00:00:45,540 --> 00:00:49,260
Oraya girip o rastgele tohumu söyleyebiliyoruz.

13
00:00:49,290 --> 00:00:49,550
Tamam.

14
00:00:49,590 --> 00:00:57,840
Hadi gidip farklı komutu araştıralım ve ADF, PD veri çerçevesine eşit ve siz burada Jüpiter'de

15
00:00:57,840 --> 00:01:01,460
sekmeyi ve bunu otomatik tamamlamaya kadar kullanabilirsiniz.

16
00:01:01,770 --> 00:01:05,200
Ve EFIS'in Windu shift sekmesinden yararlandığına dikkat edin.

17
00:01:05,200 --> 00:01:10,770
Bu PD veri çerçevesi için doküman dizgisini ve ilk imzayı kontrol edin.

18
00:01:10,770 --> 00:01:16,830
Dizilerde yaptığımız gibi bir veri bağımsız değişkenine ve bir dizin bağımsız değişkenine sahibiz ancak o zaman bu ek

19
00:01:16,830 --> 00:01:18,210
sütun bağımsız değişkenleri var.

20
00:01:18,450 --> 00:01:23,130
Devam edin ve bunu bazı rasgele verilerle oluşturalım ve bir veri çerçevesinin gerçekte

21
00:01:23,130 --> 00:01:24,000
nasıl göründüğünü göreceğiz.

22
00:01:24,000 --> 00:01:31,090
Yapacağım ilk şey veri argümanlarını aktarmak ve aslında Ranz ve 5

23
00:01:31,110 --> 00:01:37,620
virgül 4'ü arayacağım ve sonra geçmek istediğiniz sonraki dizin dizindeki indeks.

24
00:01:37,620 --> 00:01:42,650
Burada bir karakter listesi yapabiliriz.

25
00:01:42,660 --> 00:01:48,850
Ben içeri girip A B C D E.

26
00:01:49,320 --> 00:01:53,950
Ve son olarak sütunlar için ilerleyip x y z diyecekler.

27
00:01:54,120 --> 00:02:05,810
Bu yüzden, wx y z'nin devam etmesini ve bunu çalıştırıp daha sonra verilerin aktarılmasını söyleyeceğim ve daha sonra güzel bir görüntü

28
00:02:05,820 --> 00:02:07,020
elde edeceğiz.

29
00:02:07,050 --> 00:02:12,370
Ve bu muhtemelen Excel girişlerine ve daha derin bir dizüstü bilgisayara benziyor ve çok iyi hissediyor.

30
00:02:12,540 --> 00:02:18,060
Başka bir kimlik düzenleyicisi kullanıyorsanız, bu kadar net bir görüntü elde edemezsiniz,

31
00:02:18,060 --> 00:02:21,560
ancak buna benzer bir çıktı almanız gerekir.

32
00:02:21,630 --> 00:02:22,060
Tamam.

33
00:02:22,110 --> 00:02:31,130
Temel olarak burada sahip olduğumuz şey w x y z ve ilgili satırlar A B C D E'nin bir sütun listesi.

34
00:02:31,170 --> 00:02:35,240
Şimdi bu sütunların her biri aslında yalnızca bir panda serisi.

35
00:02:35,250 --> 00:02:42,060
Yani W bir panda serisinin yanı sıra X Y ve Z'dir ve hepsi ortak bir dizini paylaşır ve

36
00:02:42,060 --> 00:02:46,350
bu temelde tüm veri çerçevesi bir dizini paylaşan yalnızca bir grup dizidir.

37
00:02:46,350 --> 00:02:51,830
Devam edin ve dizin oluşturma ve seçimi nasıl kullanabildiğimizi gösterelim, aslında bu

38
00:02:52,080 --> 00:02:59,280
ciddi nesnelerden birini veya birkaç sütunu bir yolla ayırın ve bunu yapmanın ana yolu DMF'yi söyleyip

39
00:02:59,340 --> 00:03:02,920
Rackett gösterimini kullanarak ve ardından sütun adını .

40
00:03:02,940 --> 00:03:05,590
Bu durumda devam edelim ve W sütununu kapatalım.

41
00:03:05,610 --> 00:03:12,180
Böylece, bir dizi geçiş w'si ve bu, W sütununu döndürür ve şimdi çıktıya bir göz atın.

42
00:03:12,180 --> 00:03:14,590
Şimdi bu aslında bir dizi gibi görünüyor.

43
00:03:14,590 --> 00:03:16,950
Bunun nedeni tam olarak W sütunudur.

44
00:03:16,950 --> 00:03:20,160
Bu sadece bir dizi ve bunu söyleyerek doğrulayabilirsiniz.

45
00:03:20,160 --> 00:03:27,870
W'nin d f cinsi ve Panas'ın çekirdek serisinin bu seriyi gösterdiğini gösterir.

46
00:03:27,870 --> 00:03:33,940
Yalnızca DFA nesnesinin kendisine yazdıysam bir veri çerçevesi çıkarırım.

47
00:03:34,260 --> 00:03:39,420
Bir veri çerçevesinin yalnızca aynı dizini paylaşan bir grup dizinin olduğu gerçeğini

48
00:03:39,450 --> 00:03:40,600
yinelemek için tekrarlayın.

49
00:03:40,590 --> 00:03:45,270
Bir veri çerçevesinden bir sütun kapatabileceğiniz iki farklı yöntem var.

50
00:03:45,300 --> 00:03:49,780
Ana yol ve yol daima bu tür parantez gösterimini kullanıyor ve sonra da

51
00:03:49,800 --> 00:03:51,090
sütun adını iletiyor yapıyor.

52
00:03:51,090 --> 00:03:56,640
Bununla birlikte, birçok kez netice aşina iseniz, bir sütunu seçerseniz, bir tablodan geçerseniz

53
00:03:57,090 --> 00:03:58,470
sütun adını verirsiniz.

54
00:03:58,530 --> 00:04:04,280
Bu aslında pantless için nokta ve sonra da sütun adını söyleyebiliriz çalışır.

55
00:04:04,440 --> 00:04:10,020
Bununla birlikte, veri çerçevesinin dışında bulunan çeşitli yöntemlerle karıştırılabileceği için

56
00:04:10,020 --> 00:04:11,870
bunu kullanmaman önerilir.

57
00:04:11,940 --> 00:04:18,160
Örneğin, DFA noktasını söylesem ve sekmeyi tıklarsam, benim için mevcut olan bir sürü yöntem görürüm.

58
00:04:18,480 --> 00:04:22,980
Ve bunlar, pandalar hakkında daha fazla bilgi edinirken öğreneceğimiz bir takım yöntemlerdir;

59
00:04:22,980 --> 00:04:28,050
ancak bu yöntemlerden birinin bir sütun adının üzerine yazılması ve ardından Panther, isteyip

60
00:04:28,050 --> 00:04:32,420
istemediğiniz konusunda şaşkına dönecek olmasıdır bir yöntem veya gerçek bir sütun adı.

61
00:04:32,430 --> 00:04:38,410
Bu nedenle, bir sütun isteyince her zamanki gibi parantez gösteriminden kaçınmanız gerekir.

62
00:04:38,970 --> 00:04:39,500
TAMAM.

63
00:04:39,510 --> 00:04:44,590
Birden çok sütun geri isterseniz, devam edin ve sütunların bir listesini pasanayın.

64
00:04:44,820 --> 00:04:49,800
ve burada başka bir parantez dizisi ile sonuçlanacak olan sütun adlarının bir listesini biliyorum.

65
00:04:49,800 --> 00:04:52,170
Parantezlerimi geçtiğimi ve sonra da geçeceğini

66
00:04:52,200 --> 00:05:02,970
Örneğin, W ve Z sütunlarını istiyorsanız, burada bir liste üzerinde vurgulanmış olan WNC'yi ve bu iki seriyi içeren bir

67
00:05:02,970 --> 00:05:05,520
veri çerçevesini geri alıyorum.

68
00:05:05,520 --> 00:05:10,620
Ve birden çok sütun istediğimde, aslında bir veri çerçevesi geri alıyorum, sadece bir

69
00:05:10,620 --> 00:05:13,240
dizi geri alacağım tek bir sütun istedi.

70
00:05:13,380 --> 00:05:17,510
Ve Jupiter not defteri sisteminde çıktı çıkışı gösterilir.

71
00:05:17,990 --> 00:05:25,540
Tamam, devam edelim ve yeni bir sütun oluşturmaya devam edelim. Palla, zaten mevcut

72
00:05:25,560 --> 00:05:29,390
gibi sütunu belirterek yeni sütunların oluşturulmasını destekliyor.

73
00:05:29,400 --> 00:05:31,100
Örneğin yeni.

74
00:05:31,140 --> 00:05:34,550
Şimdi bunu çalıştırırsam bir hata mesajı alırım ve kaleci olur.

75
00:05:34,570 --> 00:05:37,500
Kaydırma her yere buraya kadar Kear new diyelim.

76
00:05:37,680 --> 00:05:42,560
Ve temelde yeni bir anahtarı bulamayacağını söylemeye çalışıyor.

77
00:05:42,570 --> 00:05:50,190
Bununla birlikte, bir karma etiket oluştururken bırakın ve bunu yeni bir sütun oluştururken

78
00:05:50,190 --> 00:05:51,200
geri koyun.

79
00:05:51,210 --> 00:05:56,280
sonra eşit işaretin sağında aritmetik ile diğer sütunları kullanırsınız,

80
00:05:56,850 --> 00:06:05,610
örneğin yeni bir sütun çıkarmak için, örneğin zaten varmış gibi DSF yeni sütununu söyleyebilirsiniz DFW Plus sinek.

81
00:06:05,610 --> 00:06:09,970
Aslında bunu zaten varmış gibi tanımlayabilir ve daha

82
00:06:10,150 --> 00:06:11,710
Ve bu hata olmadan çalışacak.

83
00:06:11,910 --> 00:06:18,780
Ve eğer yeni sütun orada gerçekten bulunuyorsa ve sütunları kaldırmak için DF'yi kontrol edersem

84
00:06:18,780 --> 00:06:19,890
DFT diyebilirsiniz.

85
00:06:19,920 --> 00:06:28,020
Damla damla deific damla diyebiliriz ve bırakmak istediğiniz gerçek sütun adını.

86
00:06:28,020 --> 00:06:31,430
Şimdi tek başına yaparsanız bir hata alırsınız.

87
00:06:31,500 --> 00:06:35,340
Ve gidelim ve bu hatanın değer hatası olduğunu söyleyelim.

88
00:06:35,390 --> 00:06:36,120
Aşağı iniyoruz.

89
00:06:36,120 --> 00:06:40,540
Access'te yer almayan yeni etiketlerin olduğunu söylüyor.

90
00:06:40,620 --> 00:06:47,660
Ve bırakma yönteminde shift sekmesini tıklarsam, varsayılan olarak, erişim sıfıra eşit sıfıra eşit

91
00:06:47,670 --> 00:06:52,390
erişim noktası bırakma yöntemi için dizine işaret eder.

92
00:06:52,500 --> 00:07:01,050
Aslında, erişim belirtmek zorunda olduğum sütunlara bakmak istersem 1'e eşittir ve sonra o

93
00:07:01,680 --> 00:07:04,430
yeni sütun burada bırakılacaktır.

94
00:07:04,830 --> 00:07:10,260
Şimdi bu DFT'yi kullanırken dikkat etmeniz gereken iki nokta var, bilmeniz

95
00:07:10,260 --> 00:07:15,900
gereken ilk şey, bunun yerinde gerçekleşmesi anlamına gelmediğini belirttiğim sürece aslında

96
00:07:16,070 --> 00:07:18,370
çerçevenin durumunu etkilemediğim anlamına geliyor.

97
00:07:18,470 --> 00:07:20,450
Bununla ne demek istediğimi göstermek istiyorum.

98
00:07:20,610 --> 00:07:28,380
Bu satırı D-düz olarak adlandırdım, siz DMF'yi aradım, 1'e eşit verdim, o yeni kolona

99
00:07:28,380 --> 00:07:29,910
sahip olduğumu göreceğim.

100
00:07:29,910 --> 00:07:36,030
Bu, aslında, bir çok Pandur metodunda yerinde argümanı göstermek zorunda kalabilmek için bir

101
00:07:36,630 --> 00:07:42,840
değişkeni belirtmek zorunda olduğum anlamına gelir; bu, yerindeki argümanları doğru olarak ayarlamayı gerektirir.

102
00:07:42,990 --> 00:07:48,450
Pander'ların yaptığı bu, yanlışlıkla bilginizi kaybetmemeniz, verilerinizi yanlışlıkla

103
00:07:48,450 --> 00:07:53,820
kaybetmemeniz için bir takım düzenlemeler yaptıktan sonra yapmamanız.

104
00:07:53,820 --> 00:07:59,520
değişikliklerin birçoğunda kalmasını ve yerinde olmasını gerçekten isterseniz yerinde eşit söylemenizi ister.

105
00:07:59,550 --> 00:08:01,260
Dolayısıyla, Panduralar, bu

106
00:08:01,380 --> 00:08:07,800
Ve şimdi de, DFI'ya hücre bildirimi uyguluyorsam, yeni sütunun yerinde olduğu için kalıcı olarak

107
00:08:07,800 --> 00:08:15,960
kaldırıldığına dikkat etmem gerekiyor ve burada dikkat edilmesi gereken bir şey, örneğin, soldaki bırakmayı kullanarak satırları bırakmak

108
00:08:15,960 --> 00:08:16,450
gibi.

109
00:08:16,470 --> 00:08:19,930
Haydi dışarı çıkalım ve bunu kullanarak e satırını boşaltalım.

110
00:08:20,130 --> 00:08:28,290
DF'nin düşen bir E ve bir de eksene sıfır olduğuna inanıyorum diyebilirim.

111
00:08:28,290 --> 00:08:30,870
Unutmayın ki aslında bunu bir argüman olarak eklemek zorunda değilsiniz.

112
00:08:30,870 --> 00:08:32,230
Varsayılan budur.

113
00:08:32,820 --> 00:08:40,950
Şimdi gidelim ve E'yi bırakın, Access'i sıfıra eşit olduğu için e'yi

114
00:08:40,950 --> 00:08:41,410
düşürdük.

115
00:08:41,460 --> 00:08:45,260
Ve her iki durumda da X'e netlik olarak 0 diyebilirim ve bu tekrar işe yarıyor.

116
00:08:45,660 --> 00:08:48,140
Ve şunu unutmayın, bunu yerinde yapmıyorum.

117
00:08:48,360 --> 00:08:48,880
TAMAM.

118
00:08:49,020 --> 00:08:54,930
Bazen bir karışıklık noktası, satırların erişime neden sıfır olduğudur ve

119
00:08:54,960 --> 00:08:58,880
neden başvurunun aslında pi'ye geri döndüğü sütunlardır.

120
00:08:59,010 --> 00:09:06,850
Veri çerçeveleri, aslında bunu göstermek için bir PI dizisinin üstündeki fantezi dizin işaretleyicileridir.

121
00:09:07,080 --> 00:09:14,750
DF'nin, bir boru matrisi yaptığımız gibi şekli düşündüğünü söyleyebilirim; eğer bu şekil bir diş hayal matrisi

122
00:09:14,800 --> 00:09:19,750
için buradaysa sıfır endeksinde veya satır sayısında bir takım ise, hayır.

123
00:09:19,890 --> 00:09:23,020
Demek ki ZF burada beş sıra var.

124
00:09:23,070 --> 00:09:29,990
A B C ve D E ve sonra indeksin üzerinde dört sütun var w x y z.

125
00:09:30,150 --> 00:09:37,530
Bu nedenle, satırlar sıfır ekseni olarak adlandırılır ve sütunlar bir eksen olarak adlandırılır,

126
00:09:37,530 --> 00:09:43,020
çünkü doğrudan pasta dizisine sahip olacak gibi şekilden alınır.

127
00:09:43,020 --> 00:09:43,880
TAMAM.

128
00:09:43,920 --> 00:09:46,260
Şimdi satırları seçmek hakkında konuşalım.

129
00:09:46,290 --> 00:09:51,840
Yalnızca DMF diyerek sütunları seçme konusundan bahsettik ve parantez içinde

130
00:09:51,840 --> 00:09:53,280
sütun adını girdiniz.

131
00:09:53,280 --> 00:10:01,350
Veya çok sayıda sütun istiyorsanız, Z ve ardından virgül X gibi sütun adlarının bir listesini pasanlaştırın ve bu

132
00:10:01,350 --> 00:10:02,430
parantezi kapatın.

133
00:10:02,430 --> 00:10:07,460
Bu yüzden sütun adlarının bir listesini geçiyorum ve bu sütunların veri çerçevesini döndürüyorum.

134
00:10:07,500 --> 00:10:09,940
Satırları seçmek hakkında konuşalım.

135
00:10:10,900 --> 00:10:14,650
Veri çerçeveme bir göz atmak istiyorum burada benim veri çerçevem.

136
00:10:14,650 --> 00:10:18,400
ABC E benim gül WXYZ sütunlar.

137
00:10:18,400 --> 00:10:25,120
Veri çerçevesinde satır seçmenin iki yolu vardır ve bunun dışında bir yöntem çağırmanız gerekir.

138
00:10:25,120 --> 00:10:26,900
Ve kullanmak için iki yöntem var.

139
00:10:26,890 --> 00:10:31,040
Biri Loek EHLO yerini görüyor.

140
00:10:31,690 --> 00:10:38,030
Ve bu bir etiket içerisine girecek, böylece bu mülkü ve burada öğrenilecek bir şeyi görmek için burayı

141
00:10:38,020 --> 00:10:38,540
değiştirin.

142
00:10:38,560 --> 00:10:43,770
Biraz garip kare parantez kullanıyorum, ancak pandalarla çalışmanın yolu bu.

143
00:10:44,000 --> 00:10:48,920
LRC'yi geçiyorsun ve sonra parantez içinde istediğin satırı geçiyorsun.

144
00:10:48,910 --> 00:10:52,030
Örneğin, sırayı istesem az önce geçerim.

145
00:10:52,280 --> 00:10:56,210
Bkz. Bu dizin etiketini geçiyorum ve bu da döndürür.

146
00:10:56,240 --> 00:10:58,150
Bir dizi yok.

147
00:10:58,150 --> 00:11:04,310
Ve bu bizim ikinci sonucumuza geliyor, sadece tüm sütun serileri değil, sıralar seriler kadar

148
00:11:04,300 --> 00:11:06,730
geri dönüş elde edecekleri yolda.

149
00:11:06,880 --> 00:11:09,780
Onlara Pandas'da rastladığınızda.

150
00:11:10,090 --> 00:11:16,140
Şimdi, bir sonraki pozisyona dayalı bir sıra kapmak için ikinci yolu tartışalım.

151
00:11:16,510 --> 00:11:17,750
DFT'yi kullanabilirim.

152
00:11:17,840 --> 00:11:25,180
Eksenleri dizelerle etiketlenmiş olsa bile, aslında sayısal bir dizin konumuna getiriyorum.

153
00:11:25,180 --> 00:11:34,310
Örneğin, bu satırı görmek istersem DF ELO'ya bir yer görmek için parantez içinde C olan satır adını

154
00:11:34,380 --> 00:11:42,190
gönderirim veya EHLO hangi indeksin hangi konumda olduğunu ve hangi indeksi saydığını söyleyebilirim iki yolu

155
00:11:42,200 --> 00:11:43,690
yapabilirim diyor ki.

156
00:11:43,690 --> 00:11:45,870
Yani 0 1 2.

157
00:11:46,100 --> 00:11:51,790
Ve sonra Alosi'nin acele etmesi de bu satırı geri getirir.

158
00:11:51,790 --> 00:11:57,250
Ve bu temel olarak, EHLO kullanarak satırları seçmenin iki yolu var

159
00:11:57,250 --> 00:12:04,220
demektir; burada, konum veya etiketli dizin veya ben sayısal tabanlı dizini isteyip istemediğinizi görmek istersiniz.

160
00:12:04,240 --> 00:12:09,640
seçme hakkında konuşalım ve pi'yi öğrendiğimizden beri bu size çok aşinayacaktır.

161
00:12:09,640 --> 00:12:12,680
Tamam, satırların ve sütunların alt kümelerini

162
00:12:13,250 --> 00:12:21,530
DFI, EHLO'ya, yalnızca Num ile yaptığımız gibi pasan edebileceğimiz bir satır ve sütun alt kümesi seçmek

163
00:12:21,520 --> 00:12:25,400
isteyip istemediğini sanıyor diyebiliriz. Pi ortak notasyonu kullanarak.

164
00:12:25,390 --> 00:12:28,550
İstediğimiz sıra ve sonra istediğimiz kolon.

165
00:12:28,580 --> 00:12:36,520
Bu nedenle satırdaki değeri Y sütununda istiyorum ve bu yalnızca tek bir değeri orada döndürür.

166
00:12:36,550 --> 00:12:43,220
Dolayısıyla, DFA'ya tekrar r รก'ye bakan D sütununa bir göz atarsam, bu negatif 0'a sahip olurum. 8 ben de aynı

167
00:12:43,210 --> 00:12:44,610
sonucu alıyorum.

168
00:12:44,620 --> 00:12:52,700
bir alt kümesini istiyorsanız, Dhia ellos söyleyebilir ve daha sonra virgülle ayrılmış bir liste pasan.

169
00:12:52,690 --> 00:12:58,950
Yani sadece pi gibi bu satır virgül sütun gösterimini kullanabilirsiniz ve bunun

170
00:12:59,000 --> 00:13:07,180
Örneğin, W Y sütunlarıyla bir b satırının alt kümesini istedim, böylece temelde bu

171
00:13:07,540 --> 00:13:13,670
2'yi istedim diyelim. 7 0. 9 ve 0. 6 5 ve negatifler yirmi dört yaşındadır.

172
00:13:13,690 --> 00:13:20,650
Bu, istediğim satırların bir listesini sadece geçebileceğim anlamına geliyor, bu durumda bu ve b.

173
00:13:21,700 --> 00:13:31,490
Ve sonra, istediğim sütunların bir listesini geçirebilirim ki bu durumda bu, w ve y shift olur ve bu

174
00:13:31,490 --> 00:13:34,360
veri çerçevesinin alt kümesini döndürürüm.

175
00:13:34,880 --> 00:13:35,540
TAMAM.

176
00:13:35,770 --> 00:13:38,520
Şimdilik burada duracağız ve tartışmaya devam edeceğiz.

177
00:13:38,530 --> 00:13:44,960
Veri çerçevesinin dersinin ikinci bölümünde ve bu defterin tamamı, panderers klasörü altındaki Veri

178
00:13:44,950 --> 00:13:46,700
çerçeveleri olarak adlandırılıyor.

179
00:13:46,690 --> 00:13:51,610
Veri çerçevesi oluşturmaya kadar neler öğrendiğimize hızlı bir şekilde gözden geçelim.

180
00:13:51,620 --> 00:13:58,540
Sadece indeksinizdeki PD veri çerçevesi yolcu verilerini söylemelisiniz ve sonra da sütun adlarınızı iletmelisiniz.

181
00:13:58,930 --> 00:14:03,670
Genellikle veri inşa etmeyeceğiz Frayne'in eliyle bu şekilde bir CSP dosyası gibi bir

182
00:14:03,670 --> 00:14:08,250
kaynaktan veri okuyor olacak, ancak daha sonra koyacakları veri girişi nasıl yapılacağını öğreneceksiniz.

183
00:14:08,250 --> 00:14:14,030
Şimdilik, ağırlıklı olarak bir veri çerçevesi oluşturmak için bunu yapabilir, böylece bir veri çerçevesinden sütun

184
00:14:14,020 --> 00:14:16,100
seçmek için DSF diyebilirsiniz diyebilirsiniz.

185
00:14:16,100 --> 00:14:22,090
Ve sonra köşeli parantez içinde istediğiniz sütunları geçirirsiniz veya istediğiniz sütunların bir listesini geçerseniz,

186
00:14:22,180 --> 00:14:25,630
her sütunun aslında sadece bir seridir olduğunu unutmayın.

187
00:14:25,880 --> 00:14:31,430
Bu tür bir aritmetiği kullanarak eski sütunlara dayalı yeni sütunlar oluşturabilirsiniz.

188
00:14:31,450 --> 00:14:36,040
Ardından, bırakılan DFA'yı kullanarak sütunları veya satırları düşürebilirsiniz.

189
00:14:36,040 --> 00:14:38,730
Yerdeki söylenilen ihtiyaçların doğru olduğuna dikkat edin.

190
00:14:38,870 --> 00:14:44,820
Efektin kalıcı olmasını isterseniz, Eksen 1 sütunları için, ardından da 0 satırları için Erişim'i söyleyin.

191
00:14:44,980 --> 00:14:54,460
Ve yine bu şekil tuple 0 dizininden geldi satırlar 1 dizin olarak bir veri çerçeve

192
00:14:54,460 --> 00:14:56,350
satırları seçerek sütunlardı.

193
00:14:56,360 --> 00:14:57,630
Burada iki yöntem var.

194
00:14:57,640 --> 00:15:03,670
Etiketli bir dizin konumu olan Alosi yöntemi var ya da nokta var.

195
00:15:03,720 --> 00:15:08,670
I Alosi, tam sayı tabanlı dizin yeri.

196
00:15:09,430 --> 00:15:15,100
Ve sonra veri çerçevesinin alt kümelerini seçmek isterseniz, veri çerçevesinin alt kümelerini geri getirmek için

197
00:15:15,250 --> 00:15:18,800
nokta KÖP'I kullanabilirsiniz ve değerleri veya tam listeleri iletebilirsiniz.

198
00:15:19,330 --> 00:15:22,230
Tamam, veri çerçevelerinin temelleri için bu kadar.

199
00:15:22,420 --> 00:15:26,810
Bir sonraki adımda, koşullu seçimi kullanma gibi çerçeve durumundayken

200
00:15:26,800 --> 00:15:28,880
yapabileceğiniz şeyleri daha çok tartışacağız.

201
00:15:28,880 --> 00:15:30,580
Pekâlâ, herkese teşekkürler.

202
00:15:30,590 --> 00:15:31,570
Bir sonraki derside görüşürüz
