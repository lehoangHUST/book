1
00:00:05,220 --> 00:00:07,080
みなさんこんにちは、パネルへようこそ。

2
00:00:07,080 --> 00:00:12,900
BILTONのデータ視覚化講師とこの講義では、実際にそのプロットライブから構築されたPanther自身の機能に加えて、データから直接データ視覚化を呼び出すことができます。

3
00:00:13,230 --> 00:00:17,550
&nbsp;

4
00:00:17,610 --> 00:00:18,860
&nbsp;

5
00:00:19,140 --> 00:00:22,160
さあ、木星ノートに飛び乗りましょう。

6
00:00:22,170 --> 00:00:22,370
大丈夫。

7
00:00:22,370 --> 00:00:24,810
ここで私は木星ノートパソコンのサーバにいます。

8
00:00:24,810 --> 00:00:25,520
簡単なメモ。

9
00:00:25,590 --> 00:00:30,170
私の親指でこの木星ノートブックを開いて、データの可視化を行う必要があります。

10
00:00:30,180 --> 00:00:35,280
パネルはデータフォルダに組み込まれています。その理由は、ここではdef 1

11
00:00:35,290 --> 00:00:37,100
2と3と呼ばれるいくつかのccファイルがあります。

12
00:00:37,260 --> 00:00:41,350
Vファイルとして見ると、データビジュアライゼーションで構築されたパンダの機能を実際に表示するために作業する予定です。レクチャーノートがここにあります。

13
00:00:41,370 --> 00:00:44,910
&nbsp;

14
00:00:44,920 --> 00:00:49,050
このパネルパネルはデータビジュアライゼーションで構築され、その後、あなたは後に進む演習もあります。

15
00:00:49,110 --> 00:00:49,760
&nbsp;

16
00:00:49,830 --> 00:00:52,290
私はここに本を知って開店するつもりです。

17
00:00:52,380 --> 00:00:54,440
そして先に進んで始めましょう。

18
00:00:54,450 --> 00:00:54,660
大丈夫。

19
00:00:54,660 --> 00:01:01,890
&nbsp;

20
00:01:02,010 --> 00:01:09,030
&nbsp;

21
00:01:09,030 --> 00:01:16,120
ここで私はこのノートブックで、私は外に出て、PIとPがPDとしてパンダをインポートすることを重要と言っています。そして、私はまた、プロットされたプロットを指定するつもりです。実際のノートブックと私たちがアップロードしようとしているCACPファイルは、私が言いたいものです。

22
00:01:16,200 --> 00:01:25,020
PD read C S V pasand dもしあればDF

23
00:01:25,020 --> 00:01:26,820
1については、インデックスがインデックス0の最初のカラムであることも指定します。

24
00:01:26,820 --> 00:01:32,460
だから今私が見ると、インデックスは実際に時系列であり、実際にそれを視覚化するときに重要になることがわかります。

25
00:01:32,460 --> 00:01:34,570
&nbsp;

26
00:01:34,680 --> 00:01:43,530
そして、時系列以外のインデックスについては、私は終わりに行き、PDはC S

27
00:01:43,530 --> 00:01:45,340
Vを読んで、次に通過し、ちょうど2つを見てみましょうと言いました。

28
00:01:45,420 --> 00:01:50,100
これを除いては非常によく似ています。

29
00:01:50,100 --> 00:01:50,740
大丈夫。

30
00:01:50,880 --> 00:01:55,940
これらの列でこれらの種類のデータフレームを使用してできることの簡単な例を紹介します。

31
00:01:55,940 --> 00:01:57,060
&nbsp;

32
00:01:57,060 --> 00:02:02,600
DF 1のA列のすべての値のヒストグラムを取得するとします。

33
00:02:03,300 --> 00:02:05,590
まあ、それらは実際にそれを行うことができます。

34
00:02:05,970 --> 00:02:13,440
EF 1を呼び出してからちょうど呼ぶことができ、実際には自動的にヒストグラムの作成を開始します。

35
00:02:13,440 --> 00:02:14,330
&nbsp;

36
00:02:14,490 --> 00:02:18,960
&nbsp;

37
00:02:18,960 --> 00:02:24,670
実際にマッププロットを呼び出して呼び出していることに注意してください。マッププロットのlib引数を追加したり、このヒストグラムに必要なビン数などのスタイル引数を追加したりすることもできます。

38
00:02:25,020 --> 00:02:30,140
今すぐ確認するべきことは、実際にはあまりよく見ていないこのスタイルです。

39
00:02:30,150 --> 00:02:31,380
私の考えでは。

40
00:02:31,380 --> 00:02:35,880
&nbsp;

41
00:02:36,270 --> 00:02:42,280
だから、それを修正するためにあなたができることは、あなたがトップに来て、ノートブックのどこにいても、Seabornをasinusとしてインポートすると言うことです。

42
00:02:42,690 --> 00:02:48,080
一度それが輸入されているこれらの細胞をもう一度起動すると、それは海底地形のように見えます。

43
00:02:48,090 --> 00:02:49,100
もう少しよく見えます。

44
00:02:49,110 --> 00:02:50,330
それは私がやりたいことです。

45
00:02:50,400 --> 00:02:55,810
あなたは実際にスタイルでより多くを見ることができ、無言のコールはそれらのように見えます。

46
00:02:56,190 --> 00:03:01,140
Pandasにはいくつかのプロットタイプが組み込まれています。これらのプロットを作成する方法の例を簡単に説明します。

47
00:03:01,200 --> 00:03:03,080
&nbsp;

48
00:03:03,210 --> 00:03:09,360
ほとんどすべてのプロットはデータフレームからのコマンドで行うことができ、基本的にはデータフレーム自体を呼び出すか、データフレームの後に列を呼び出すことができる2つの方法でこれを行うことができます。

49
00:03:09,360 --> 00:03:14,420
&nbsp;

50
00:03:14,430 --> 00:03:21,630
行こうと今すぐ列を作って、プロットを呼び出すことができますし、プロット指定された種類の引数の下で。

51
00:03:21,630 --> 00:03:22,390
&nbsp;

52
00:03:22,530 --> 00:03:26,670
あなたのノートブックにリストがあり、私たちはこのリスト全体に行き、次に種類のキーワードを指定します。

53
00:03:26,670 --> 00:03:28,090
&nbsp;

54
00:03:28,090 --> 00:03:31,180
だから私がヒストグラムにしたいのであれば、私はこのように作成することもできます。

55
00:03:31,440 --> 00:03:37,920
そしてここで、必要なビンの数などのヒストグラムの引数を追加できます。

56
00:03:37,920 --> 00:03:43,710
これは、たとえば、ドットプロットと呼ばれるデータフレーム列からヒストリルームを作成し、種類を呼び出す方法の1つです。

57
00:03:43,920 --> 00:03:45,510
&nbsp;

58
00:03:45,510 --> 00:03:51,380
&nbsp;

59
00:03:51,690 --> 00:03:58,010
あなたがパンダを使ってプロットを呼び出すことができる他の方法は、種類の等しいヒスを指定するのではなく、実際にプロットから直接ヒストリを呼び出すことができるので、ドットプロットを言うことができます。

60
00:03:58,210 --> 00:04:00,110
これによってプロットも作成されます。

61
00:04:00,120 --> 00:04:04,110
&nbsp;

62
00:04:04,110 --> 00:04:09,570
これは、この講義の残りの部分で使用する方法ですので、データフレーム全体またはドットプロットという列を取得し、必要なプロットタイプをドットで呼び出すことができます。

63
00:04:10,110 --> 00:04:13,730
先に進んで、すべてのプロットタイプを調べてチェックしてみましょう。

64
00:04:14,370 --> 00:04:19,780
ですから、非時系列であるこれらの2つを試してみましょう。

65
00:04:19,780 --> 00:04:28,560
例として、通常のインデックスがあり、あなたが行うことができる1つのプロットは領域プロットです。プロット領域を指定することができます。

66
00:04:28,560 --> 00:04:30,700
&nbsp;

67
00:04:30,990 --> 00:04:38,250
そして、これは本質的にちょうど領域プロットを表示することになります。また、ここで引数としてAlphaを指定することもできます。

68
00:04:38,250 --> 00:04:39,190
&nbsp;

69
00:04:39,240 --> 00:04:46,680
もう少し透過性があり、Alfasが0であると言うなら。

70
00:04:46,680 --> 00:04:52,470
&nbsp;

71
00:04:52,470 --> 00:04:56,750
ここでは透明度を示していますが、これは値の領域を示しているだけで、基本的にはこれを通常の線図と考えることができますが、その下の領域は何らかの色で塗りつぶされています。

72
00:04:57,150 --> 00:05:01,890
大丈夫です。これは領域プロットであり、データフレームを呼び出すのも非常に簡単です。

73
00:05:01,890 --> 00:05:08,700
&nbsp;

74
00:05:09,150 --> 00:05:18,070
バーツプロットを見てみましょう。データフレームの2つのプロットをしてバーを作って自動的に棒グラフを作成します。これは基本的にカテゴリとしてインデックス値を取るだけです。

75
00:05:18,220 --> 00:05:19,630
&nbsp;

76
00:05:19,630 --> 00:05:22,830
だからこの場合、あなたのインデックスはカテゴリに属する​​べきです。

77
00:05:23,030 --> 00:05:26,830
私たちのデータフレームは実際には十分に小さいので、データフレームが0または9であることを見れば意味があります。

78
00:05:27,100 --> 00:05:29,560
&nbsp;

79
00:05:29,560 --> 00:05:32,890
シーケンシャルインデックスを持つ典型的なデータフレームは、おそらくこれを行うことになります。

80
00:05:33,100 --> 00:05:38,980
しかしカテゴリインデックスの場合は、カテゴリごとに列ごとの値をリストします。実際に積み重ねられるようにするには積み重ねた列をtrueにすると、このようなプロットが得られます。

81
00:05:38,980 --> 00:05:43,360
&nbsp;

82
00:05:46,180 --> 00:05:47,530
&nbsp;

83
00:05:47,530 --> 00:05:51,190
基本的には、値の積み重ねを除いて全く同じことです。

84
00:05:51,190 --> 00:05:54,780
個人的には、実際には、これらのタイプのプロットについて、より多くのものを見やすくすることを実際にお勧めします。

85
00:05:54,910 --> 00:06:00,100
しかし、あなたが非常に迅速な分析を行っているだけの場合、この種のことはあなたのために働くつもりです。

86
00:06:00,100 --> 00:06:01,480
&nbsp;

87
00:06:01,630 --> 00:06:04,180
今はヒストグラムと呼ばれています。

88
00:06:04,180 --> 00:06:06,500
それが再びどのように見えるかを明確にするだけです。

89
00:06:06,530 --> 00:06:13,780
だから、それを前に見たことがあるかどうかを1つのドットプロットと呼ぶつもりです。

90
00:06:14,020 --> 00:06:15,040
そしてここにヒストグラムがあります。

91
00:06:15,040 --> 00:06:17,110
また、必要なビンの数を指定することもできます。

92
00:06:17,300 --> 00:06:24,430
だからパンサーズのプロットが行くまでパンダのヒストグラムに組み込まれているものを使うことは、おそらく最も使いやすいものです。

93
00:06:24,460 --> 00:06:30,640
&nbsp;

94
00:06:30,640 --> 00:06:35,070
また、私がPandursに使用したいと思うもう一つの一般的なラインプロットを行うこともできます。

95
00:06:35,230 --> 00:06:39,630
たとえば、EF 1をチェックすると、私たちの時系列インデックスを覚えています。

96
00:06:39,790 --> 00:06:43,500
これらの時系列のうちの1つのデータをプロットすることを想像してみましょう。

97
00:06:43,600 --> 00:06:47,590
あなたは先に進み、DFを1つのプロットと呼んで、次にラインを呼び出すことができます。

98
00:06:47,590 --> 00:06:49,920
これはちょうどラインプロットを作成するつもりです。

99
00:06:50,290 --> 00:06:54,550
ラインプロットでは、XとYを指定する必要があります。

100
00:06:54,550 --> 00:07:03,400
したがって、この場合、Xを実際のインデックスにして、インデックスが1つで、yがこれらの列の1つになり、列を文字列として渡すことができます。

101
00:07:03,400 --> 00:07:06,250
&nbsp;

102
00:07:06,370 --> 00:07:07,500
だから私は不特定のものに行きたい。

103
00:07:07,540 --> 00:07:09,110
Bとしましょう

104
00:07:09,940 --> 00:07:14,590
そして、私がこれを実行すると、私はこのような形のプロットを取得します。

105
00:07:14,600 --> 00:07:15,770
一般的には線グラフです。

106
00:07:15,790 --> 00:07:19,900
だから、もしこれが株価情報であり、それをプロットしたかったのと比べて、あなたはこのようなものを得ることができると想像することができます。

107
00:07:19,900 --> 00:07:21,250
&nbsp;

108
00:07:21,520 --> 00:07:24,190
そして、これはすべてそのプロットから構築されています。

109
00:07:24,250 --> 00:07:28,050
あなたは、あなたが望むサイズのようなプロットのlib引数を追加することができます。

110
00:07:28,250 --> 00:07:31,420
だからもっと広いものを求めています。

111
00:07:31,420 --> 00:07:33,000
このようなことをすることができます。

112
00:07:33,130 --> 00:07:35,770
または、私が行を調整したいとしましょう。

113
00:07:35,860 --> 00:07:39,610
さて、私たちがPlautのライブについて見たのと同じように、ちょうどLWを行うことができます。

114
00:07:39,740 --> 00:07:43,510
それはあなたがマーカーで追加することができる少しスキンがあるものへの行です。

115
00:07:43,510 --> 00:07:45,210
これらの他のすべては、プロットレスコマンドをマップします。

116
00:07:45,370 --> 00:07:49,610
そのプロットが生きていることについて学ぶことはすべて、これらのデータフレームプロットに適用することができます。

117
00:07:50,050 --> 00:07:52,310
さて、散布図をチェックアウトしましょう。

118
00:07:52,810 --> 00:07:59,920
それで、私が飛行機と言う飛行機があり、xとyを指定しなければならないDFがあるとしましょう。

119
00:07:59,920 --> 00:08:00,400
&nbsp;

120
00:08:00,490 --> 00:08:05,110
だからこそ、列名を渡して文字列を渡すだけです。

121
00:08:05,410 --> 00:08:10,240
だからaとbとこれは私たちのために見栄えの良い散布図を作成します。

122
00:08:10,330 --> 00:08:15,150
あなたができることは、実際には別の列に基づいて色を設定することです。

123
00:08:15,160 --> 00:08:24,160
したがって、例えば、色が列Cから等しくなると言うことができます。

124
00:08:24,220 --> 00:08:27,220
だから私はちょうどそれを読むと、私は白と黒を取得します。

125
00:08:27,220 --> 00:08:32,010
だから、もし私がここでやっていることを明らかにするならば、私が見てみると。

126
00:08:32,010 --> 00:08:36,790
aとbの値があり、cの値があるときのデータ。 だから本質的には、3つのレベルの情報を3次元のプロットで表示しています。

127
00:08:36,820 --> 00:08:42,250
&nbsp;

128
00:08:42,250 --> 00:08:48,430
私たちはA対Bを持っているので、次に3番目の引数は色で表示され、実際には地図を引数として見てから自分のカラーマップを渡すことができます。

129
00:08:49,360 --> 00:08:52,330
&nbsp;

130
00:08:52,330 --> 00:08:57,820
あなたが前に見たクールな暖かさのために、今、あなたは3つのレベルの情報を表示しています。 時には色で表示するのが好きではなく、サイズで表示することを好みます。

131
00:08:57,970 --> 00:09:02,110
Cを引数として渡す代わりに、実際にそうすることもできます。

132
00:09:02,140 --> 00:09:06,500
ここでちょうど先に進むでしょう。

133
00:09:06,520 --> 00:09:09,910
S and for sデータフレームの列に進みます。

134
00:09:09,910 --> 00:09:12,440
&nbsp;

135
00:09:12,520 --> 00:09:18,150
したがって、実際にはデータフレームの列自体を渡す必要があります。これを行うとポイントが小さくなりすぎる可能性があります。

136
00:09:18,460 --> 00:09:24,100
そして、あなたができることは何らかの要因でこれを掛けることです。

137
00:09:24,100 --> 00:09:26,470
&nbsp;

138
00:09:27,110 --> 00:09:30,820
だからあなたはポイントがa対Bであり、サイズがどれほど大きいか、またはC値がお互いに相対的であるかを示すことができます。

139
00:09:31,390 --> 00:09:40,000
大丈夫。

140
00:09:40,000 --> 00:09:41,520
&nbsp;

141
00:09:41,560 --> 00:09:41,980
&nbsp;

142
00:09:42,010 --> 00:09:45,880
これはおそらく、私があなたのために集めた木星のノートブックに戻って参考にしたり、ドキュメントをチェックしたりする頭の上から覚えていないようなものです。

143
00:09:45,880 --> 00:09:50,320
先に進んでボックスプロットに移動してみましょう。

144
00:09:50,320 --> 00:09:52,090
&nbsp;

145
00:09:52,090 --> 00:09:55,010
私は本当にボックスプロットのための海軍が好きですが、ボックスプロットの簡単な分析をしたいだけなら、パンダもあなたのためにそれを行うことができます。

146
00:09:55,030 --> 00:09:59,980
したがって、データフレームコールプロットコールボックス全体を渡すだけで、基本的に自動的に列ごとに実行されるボックスプロットが表示されます。

147
00:09:59,980 --> 00:10:00,920
&nbsp;

148
00:10:00,940 --> 00:10:08,740
だから、すべての列をカテゴリにしてから、あなたのための分布をボックスプロットとしてプロットします。

149
00:10:08,740 --> 00:10:11,270
大丈夫。

150
00:10:11,290 --> 00:10:16,390
さまざまなデータによって、あなたが実際に見ていた六角形のプロットをPandursがSeabornと言い出してくれます。

151
00:10:16,920 --> 00:10:17,680
&nbsp;

152
00:10:17,680 --> 00:10:24,970
しかし、実際に正しく表示されるように新しいデータフレームを作りましょう。

153
00:10:24,970 --> 00:10:25,970
だから私はPDのデータフレームを言いたい。

154
00:10:26,200 --> 00:10:30,400
私はいくつかのランダムなデータを渡すつもりですし、私はこれを1000とすることで2つを言いましょう。次に私は渡すつもりです、そして、列はちょうどaとbになります。

155
00:10:30,520 --> 00:10:33,780
&nbsp;

156
00:10:33,780 --> 00:10:42,400
私たちのデータフレームを見てみると、このようなものになります。

157
00:10:42,400 --> 00:10:48,020
ちょうどいくつかのランダムなデータ。

158
00:10:49,580 --> 00:10:52,650
空き袋。

159
00:10:52,650 --> 00:10:53,700
私はちょうどここでいくつかのランダムな点がほしいと思っていました。これは変種によるものですから、ここでは2つの変数があります。

160
00:10:53,740 --> 00:10:54,700
&nbsp;

161
00:10:54,880 --> 00:11:01,330
そしてB私はプロットのHextonのパスを言うことができ、xは質量に等しく、YはBに等しい。

162
00:11:01,330 --> 00:11:01,620
そして、これを行うだけであれば、16進プロットが得られます。

163
00:11:01,660 --> 00:11:10,990
これは本質的に六角形のビン以外の散布図のようなものです。

164
00:11:11,330 --> 00:11:14,750
今、ビンサイズは実際には非常に小さいです。

165
00:11:14,980 --> 00:11:19,090
したがって、グリッドサイズが25に等しいと言うことができます。

166
00:11:19,210 --> 00:11:21,710
そして、これは、六角形のサイズを拡大し、本質的に六角形は暗くなります。その中にはより多くの点があり、ここで色のマッピングを変更して、See

167
00:11:21,730 --> 00:11:27,170
map is

168
00:11:27,580 --> 00:11:33,730
something elseと言います。

169
00:11:33,730 --> 00:11:39,760
例えば、涼しい暖かさを私たちのカラーマッピングにしたいのであれば、そうすることもできます。

170
00:11:39,760 --> 00:11:40,180
最後にカーネル密度推定プロットを行うことができます。

171
00:11:40,180 --> 00:11:45,930
何らかの理由でヒストグラムが必要なだけでなく、カーネル密度の推定が必要な場合は、データフレームまたはデータフレームから列を呼び出して、Haisseをプロットすることができます。

172
00:11:46,000 --> 00:11:49,980
&nbsp;

173
00:11:50,110 --> 00:11:56,020
&nbsp;

174
00:11:56,020 --> 00:12:02,700
このカーネル密度推定プロットが作成され、同じことを密度で行うことができます。これは別の呼び出しです。

175
00:12:03,080 --> 00:12:08,680
つまり密度とそれは同じことになります。

176
00:12:09,170 --> 00:12:10,450
&nbsp;

177
00:12:10,450 --> 00:12:15,880
密度やカーネル密度の推定プロットが必要な場合は、それらは同じものになります。実際には、データフレーム全体でこれを行うこともできます。

178
00:12:15,880 --> 00:12:20,410
データフレーム内のすべての列の密度カーネル密度推定プロットを比較する場合は、1列のすぐ後に行う必要はありません。

179
00:12:20,410 --> 00:12:23,320
&nbsp;

180
00:12:23,320 --> 00:12:29,890
大丈夫。

181
00:12:29,890 --> 00:12:32,220
それでおしまい。

182
00:12:32,230 --> 00:12:32,590
&nbsp;

183
00:12:32,590 --> 00:12:33,200
うまくいけば、Pandursから直接プロットするこの方法は、フルマッププロットライブラリを呼び出すよりもずっと簡単で、フィギュアのコントロールと使いやすさのバランスが取れているのが分かるはずです。

184
00:12:33,280 --> 00:12:38,920
実際にあなたの姿をカスタマイズし始めたいのであれば、Seabornや地図プロットに戻ってください。

185
00:12:38,920 --> 00:12:43,650
&nbsp;

186
00:12:43,720 --> 00:12:47,800
&nbsp;

187
00:12:47,800 --> 00:12:50,230
&nbsp;

188
00:12:50,470 --> 00:12:55,390
この種のコマンドは、データを素早く分析するためのものであり、作成したいプロットの種類を素早く参照し、データフレームから呼び出すか、列またはデータから呼び出すことができますフレーム。

189
00:12:55,390 --> 00:13:00,130
私たちがコース全体を通してこれをどのように使用するかについては、おそらくこれを使用する唯一の時間は、ラインプロットやヒストグラムを使って非常に速く呼び出すことです。

190
00:13:00,130 --> 00:13:02,190
&nbsp;

191
00:13:02,320 --> 00:13:06,370
より高度なこのHaskelプロッタボックスプロットまたはバープロットについては、私はSeabornと一緒に行くことを本当にお勧めします。

192
00:13:06,370 --> 00:13:10,840
&nbsp;

193
00:13:10,840 --> 00:13:16,170
皆さんはこれが有用であることを願っており、私は次の講義でお会いします。ここで学んだことを練習するための簡単な練習について説明します。

194
00:13:17,340 --> 00:13:22,570
みんなありがとう、私は次の講演でお会いしましょう

195
00:13:22,570 --> 00:13:25,720
&nbsp;

196
00:13:25,720 --> 00:13:27,430
&nbsp;
