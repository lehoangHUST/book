1
00:00:05,730 --> 00:00:10,950
Hello everyone and welcome to this optional lecture on Anaconda virtual environments.

2
00:00:10,950 --> 00:00:16,710
This is a bit of a more advanced topic on how to create virtual environments using the Anaconda distribution

3
00:00:16,710 --> 00:00:17,020
.

4
00:00:17,070 --> 00:00:20,580
You can go ahead and feel free to skip this topic if you're not interested in it.

5
00:00:20,880 --> 00:00:23,520
Let's go ahead and continue.

6
00:00:23,550 --> 00:00:29,310
Let's talk about what virtual environments are virtual environments allow you to set up a virtual installation

7
00:00:29,310 --> 00:00:32,130
of python and libraries on your computer.

8
00:00:32,340 --> 00:00:37,860
That way you can have multiple versions of Python or libraries and easily activate or de-activate these

9
00:00:37,860 --> 00:00:39,210
environments.

10
00:00:39,210 --> 00:00:44,220
Let's go ahead and see some examples of why you may want to do this for instance.

11
00:00:44,220 --> 00:00:47,870
Maybe sometimes you want to program in different versions of a library.

12
00:00:48,060 --> 00:00:54,750
For example you may have developed a full program that uses Sacket learn version 0.27 and then at some

13
00:00:54,750 --> 00:00:58,560
point in time the next versions are 0.1 8 is released.

14
00:00:58,560 --> 00:01:04,350
Maybe you want to explore the new features of 0.20 but don't want to break any of your old code when

15
00:01:04,350 --> 00:01:05,340
you upgrade.

16
00:01:05,340 --> 00:01:09,510
This is where you may want to create a virtual environment for that specific version of the library

17
00:01:09,510 --> 00:01:11,120
.

18
00:01:11,130 --> 00:01:15,390
In other examples sometimes you want to make sure your library installations are in the correct location

19
00:01:15,390 --> 00:01:15,800
.

20
00:01:15,900 --> 00:01:20,940
So for example you may want also multiple versions of Python on your computer so you'll want to make

21
00:01:20,940 --> 00:01:28,500
sure a python 2.7 version of a library is in the correct location versus a python 3.5 version which

22
00:01:28,500 --> 00:01:35,800
you can do a virtual environments as have one environment in Python 2.7 and another of Python 3.5.

23
00:01:36,090 --> 00:01:42,120
There is a virtual E and V library for normal Python distributions that has a lot of the capabilities

24
00:01:42,120 --> 00:01:44,740
that were going to be going over with Anaconda.

25
00:01:44,910 --> 00:01:50,030
This virtual ENV library allows you to create virtual environments and it's a virtual environment manager

26
00:01:50,030 --> 00:01:50,310
.

27
00:01:50,520 --> 00:01:55,740
Anaconda however which is the recommended distribution of Python that we use in this course already

28
00:01:55,740 --> 00:02:00,930
has a nice built in virtual environment manager that makes the whole process of creating a virtual environment

29
00:02:01,200 --> 00:02:04,480
activating and deactivating them very easy.

30
00:02:04,480 --> 00:02:08,610
Go ahead and check out the resource link for the official documentation that we're going to go over

31
00:02:08,610 --> 00:02:09,350
now.

32
00:02:09,480 --> 00:02:13,160
So go ahead and check out the resource link which will take you to this you r l.

33
00:02:13,290 --> 00:02:18,960
Or if you want you can manually type it in we're just going to the official can the PI data documentation

34
00:02:18,960 --> 00:02:20,940
or we talk about using environments.

35
00:02:20,940 --> 00:02:24,890
You can just click on the resource link if you don't want to type this entire file path or your file

36
00:02:24,900 --> 00:02:26,540
path in your browser.

37
00:02:26,570 --> 00:02:31,230
Going to go ahead and jump to my browser now explore the documentation a little bit and show you how

38
00:02:31,230 --> 00:02:33,300
you can use it at your command prompt.

39
00:02:33,300 --> 00:02:35,340
Let's go ahead and jump to that now.

40
00:02:36,060 --> 00:02:39,360
OK so here I am at the resource link for managing environments.

41
00:02:39,390 --> 00:02:44,670
What I want you to do is go ahead and go to create environments and you should see the basic instructions

42
00:02:44,670 --> 00:02:50,040
here for creating an environment and it's pretty simple as far as a command need to put in to create

43
00:02:50,070 --> 00:02:50,940
a new environment.

44
00:02:50,970 --> 00:02:57,120
You're going to go ahead and use the Konda create command followed by dash dash name then whatever name

45
00:02:57,120 --> 00:02:58,930
you want to call your new environment.

46
00:02:58,950 --> 00:03:04,710
In this example they're calling the new environment snowflake's and then space in a base package or

47
00:03:04,710 --> 00:03:08,430
library that you want to initiate that new environments with.

48
00:03:08,430 --> 00:03:11,690
If you don't put in a package here you may get an error.

49
00:03:11,730 --> 00:03:16,680
So once you have this full command in your command prompt or terminal after of course installing Anaconda

50
00:03:16,680 --> 00:03:20,420
distribution of Python Kano's going to ask you do you want to proceed.

51
00:03:20,430 --> 00:03:24,810
You can type Y for yes and then this creates a new environment called.

52
00:03:24,810 --> 00:03:30,200
In this case snowflake's that contains this program or package BYO Python.

53
00:03:30,360 --> 00:03:36,150
If you don't specify a specific version of Python it will use your base version of Python.

54
00:03:36,150 --> 00:03:38,690
The one that you download to is the anaconda.

55
00:03:38,820 --> 00:03:41,970
But you can actually specify a specific version of Python.

56
00:03:42,110 --> 00:03:44,100
It will show you how to do that as well.

57
00:03:44,100 --> 00:03:46,470
Let me go ahead and jump to my command prompt.

58
00:03:46,650 --> 00:03:49,820
Put it on here so I can walk you through these steps.

59
00:03:50,190 --> 00:03:52,500
OK so here is my command prompt.

60
00:03:52,590 --> 00:03:58,410
I will go ahead and create a virtual environment we'll call it Konda all say condo space create first

61
00:03:59,030 --> 00:04:05,700
that I'm going to say dash dash and an E for name and let's go ahead and call this just a ridiculous

62
00:04:05,700 --> 00:04:11,280
name so we know we're actually doing something with fluffy and then we need to put in a library to initiate

63
00:04:11,280 --> 00:04:11,890
it with.

64
00:04:12,030 --> 00:04:14,240
Let's go in and start off with NUMP pi.

65
00:04:14,280 --> 00:04:19,770
Since that's going to be one of the first libraries we learn about I enter they'll fetch the package

66
00:04:19,770 --> 00:04:20,530
meta data.

67
00:04:20,570 --> 00:04:24,170
They'll get a list of what it needs to install in Alaska if you want to proceed.

68
00:04:24,420 --> 00:04:31,110
Now I'll go ahead and say why for yes it will link certain packages together and then extract what it

69
00:04:31,110 --> 00:04:32,150
needs to extract.

70
00:04:32,260 --> 00:04:33,990
OK so that's done now.

71
00:04:34,010 --> 00:04:38,970
To activate this environment I can use activate fluffy to deactivate this environment.

72
00:04:38,970 --> 00:04:40,790
I use de-activate.

73
00:04:40,830 --> 00:04:46,920
Let me go in and show you what my base version of Python looks like versus this virtual environments

74
00:04:46,980 --> 00:04:48,330
version of Python.

75
00:04:48,330 --> 00:04:51,690
Remember this virtual environment was only initiated with pi.

76
00:04:51,840 --> 00:04:58,290
So if I just type in Python right now I will get my regular distribution of Anaconda the one I installed

77
00:04:58,560 --> 00:05:00,920
in this case it's 2.7.

78
00:05:00,930 --> 00:05:07,450
So for example if I go ahead and say imports num pi as and P enter.

79
00:05:07,470 --> 00:05:12,770
That works fine if I say import panderers as PD enter.

80
00:05:12,840 --> 00:05:14,470
That also works fine.

81
00:05:14,550 --> 00:05:20,970
Let's go ahead and quit from this now and I'm going to now activates my virtual environment which was

82
00:05:20,970 --> 00:05:27,450
called Fluffy and now you'll notice that in parentheses it says fluffy which lets me know that I'm actually

83
00:05:27,450 --> 00:05:30,060
inside this virtual environment of fluffy.

84
00:05:30,060 --> 00:05:37,740
So if I say Python and hit enter I get the same version of Python 2.7 that my base distribution was

85
00:05:38,040 --> 00:05:42,690
but something interesting is going to happen when I try to import some stuff for important umpires and

86
00:05:42,690 --> 00:05:46,280
P It imports no problem since I know that's right.

87
00:05:46,290 --> 00:05:53,860
Activated my virtual environment with if I say import pandas as PD I get an import error.

88
00:05:53,880 --> 00:05:55,980
No module named panderers.

89
00:05:56,010 --> 00:06:00,960
The reason for that is because this virtual environment doesn't have Pandurs inside of it.

90
00:06:00,960 --> 00:06:06,390
If I want to actually make sure that this virtual environment also contains pandas I will need to activate

91
00:06:06,390 --> 00:06:14,720
it as I've done already and then say Konda install this here or install whatever library you want Jupiter

92
00:06:14,730 --> 00:06:17,140
sikat learn about play live etc..

93
00:06:17,430 --> 00:06:24,630
So I'm going to go ahead and just delete this if I want to deactivate fluffy and go back to just my

94
00:06:24,630 --> 00:06:26,600
original distribution of Python.

95
00:06:26,730 --> 00:06:32,910
I just say deactivates hit enter and it deactivates that virtual environment.

96
00:06:32,910 --> 00:06:38,430
Now another active use case for virtual environments is to create an environment that uses a different

97
00:06:38,430 --> 00:06:40,070
version of Python.

98
00:06:40,200 --> 00:06:47,120
You can do that simply by saying Konda creates will go in and say dash dash and add me.

99
00:06:47,400 --> 00:06:54,150
You can also just say dash and single Dashon but will show the full thing dash dash name say the name

100
00:06:54,150 --> 00:06:55,570
of the virtual environment you want.

101
00:06:55,590 --> 00:06:58,080
We'll go ahead and call this virtual environment.

102
00:06:58,140 --> 00:07:03,710
My python 3 version space.

103
00:07:03,900 --> 00:07:08,150
And then you say Python equals 3.5.

104
00:07:08,430 --> 00:07:14,220
And here you have the option of just putting in a single library such as pi.

105
00:07:14,430 --> 00:07:20,180
Or if you want the entire Anaconda's distribution you can type in Anaconda here.

106
00:07:20,250 --> 00:07:25,570
That takes quite a while longer because remember that's the entire distribution of Anaconda.

107
00:07:25,710 --> 00:07:27,730
So I'll go in and just say pi.

108
00:07:27,780 --> 00:07:33,180
So this is going to go ahead and do is say Konda create this new virtual environment called my Python

109
00:07:33,180 --> 00:07:37,590
3 version space Python equals 3.5 pi.

110
00:07:37,760 --> 00:07:40,500
Enter I'll fetch the package metadata again.

111
00:07:40,650 --> 00:07:43,040
Remember it's going to do all of this with Python 3.

112
00:07:43,140 --> 00:07:48,000
I'll go ahead and say Why yes it will fetch the packages go ahead and solve them.

113
00:07:48,000 --> 00:07:55,410
I'm going to now jump to the finish of the extraction and installation and now it is complete.

114
00:07:55,650 --> 00:07:59,790
Let's go ahead and show just typing in Python.

115
00:08:00,090 --> 00:08:04,360
I have Python 2.7 here that's my base distribution.

116
00:08:04,410 --> 00:08:06,290
I'm going to go ahead and quit that.

117
00:08:06,390 --> 00:08:08,500
Now let's go ahead and check out my environments.

118
00:08:08,520 --> 00:08:16,170
I can say Kondo space info dash dash and a v s and this command will list out my environments here I

119
00:08:16,170 --> 00:08:19,680
have fluffy in other example environment that I made earlier.

120
00:08:19,680 --> 00:08:25,800
My python 3 version py 3:5 which is another environment I have and then my roots version of Python.

121
00:08:26,010 --> 00:08:27,020
You can see there's a start.

122
00:08:27,030 --> 00:08:28,080
Indicate that.

123
00:08:28,080 --> 00:08:32,570
So if you're opening up Jupiter notebook and you see something like Python Roop that's what it means

124
00:08:32,580 --> 00:08:33,270
it's roots.

125
00:08:33,300 --> 00:08:35,300
Installation of Python.

126
00:08:35,340 --> 00:08:42,600
Let's go ahead and activates my Python 3 version environments.

127
00:08:42,840 --> 00:08:43,710
Enter.

128
00:08:43,710 --> 00:08:45,910
You'll notice my Python 3 version.

129
00:08:45,930 --> 00:08:49,260
Now if I call Python inside of this virtual environments.

130
00:08:49,290 --> 00:08:51,580
Note that I get Python 3.5.

131
00:08:51,610 --> 00:08:57,840
So if you're able to actually specify that you want a different version of Python by saying Python equals

132
00:08:57,930 --> 00:09:01,080
and then whatever version number you want when you're creating that virtual environment.

133
00:09:01,080 --> 00:09:07,240
So if I do something like 1 divided by two I get 0.5 which is not the case for Python 2.

134
00:09:07,680 --> 00:09:09,900
OK so that's really all you need to know.

135
00:09:09,930 --> 00:09:15,930
As far as creating virtual environments the resource link has basically everything you would want to

136
00:09:15,930 --> 00:09:20,440
know such as changing environments cloning environments removing environments etc..

137
00:09:20,640 --> 00:09:21,930
It's pretty straightforward.

138
00:09:21,930 --> 00:09:26,070
So now that you know everything that we went over in this lecture you can go ahead and reference the

139
00:09:26,070 --> 00:09:27,820
documentation as you need.

140
00:09:27,840 --> 00:09:31,870
Again it is just an optional lecture in case you ever want to create your own virtual environments.

141
00:09:31,920 --> 00:09:36,990
I would suggest you create virtual environments just to make sure that all your libraries are the versions

142
00:09:36,990 --> 00:09:38,510
that you want them to be.

143
00:09:38,520 --> 00:09:44,190
So if you want to continue off this course maybe go ahead and create a virtual environment called my

144
00:09:44,220 --> 00:09:46,520
data science or something like that.

145
00:09:46,530 --> 00:09:47,160
All right.

146
00:09:47,190 --> 00:09:49,860
Hope you enjoyed this lecture and I will see you at the next one.

147
00:09:49,860 --> 00:09:51,230
Thanks everybody.
