1
00:00:05,340 --> 00:00:11,400
皆さん、こんにちは皆さん、この講義でのPythonクラッシュコースのエクササイズの概要講義を歓迎します。エクササイズノートの簡単な概要とエクササイズの方法について説明します。

2
00:00:11,400 --> 00:00:15,560
&nbsp;

3
00:00:15,570 --> 00:00:18,250
私は先に進み、運動ノートブックがどこにあるかを見せてあげましょう。

4
00:00:18,530 --> 00:00:25,490
ここでOK私はあなたのレポジトリにpythonクラッシュコースフォルダの下に3つのノートを見るでしょう。

5
00:00:25,510 --> 00:00:30,760
Pythonのクラッシュコースには、4つのパートの講義シリーズで取り上げたノートが含まれています。

6
00:00:30,930 --> 00:00:35,380
その後、PythonのクラッシュコースでIPYとBを実行します。

7
00:00:35,550 --> 00:00:39,690
これは演習用に使用するノートブックファイルで、ソリューションノートブックが表示されます。

8
00:00:39,780 --> 00:00:40,280
&nbsp;

9
00:00:40,290 --> 00:00:46,580
ここでは、練習用ノートブックをクリックすると、このようなノートブックが表示されます。

10
00:00:46,590 --> 00:00:50,850
これはPythonの基礎を理解するためのオプションのエクササイズテストです。

11
00:00:50,850 --> 00:00:55,920
このエクササイズが非常に挑戦的であることがわかった場合、残りのコースの準備はまだ整っておらず、継続するには十分なプログラミング経験がありません。

12
00:00:55,940 --> 00:00:58,700
&nbsp;

13
00:00:58,900 --> 00:01:03,300
そして、私はあなたが実際に完全なpythonブートキャンプなどの完全な初心者に向けて、さらに別のコースを取ることをお勧めします。

14
00:01:03,300 --> 00:01:06,030
&nbsp;

15
00:01:06,160 --> 00:01:10,230
しかし、これらの演習はかなりシンプルで簡単です。

16
00:01:10,230 --> 00:01:14,350
例えば、これは非常に最初のものです。

17
00:01:14,460 --> 00:01:20,790
だからうまくいけば、あなたはこのセルに来るはずの出力や、この質問に答えてPythonを使いたいと思っているどんなIDでも答えを見ることができれば幸いです。

18
00:01:20,790 --> 00:01:23,900
&nbsp;

19
00:01:23,910 --> 00:01:29,340
したがって、Pythonでどのように指数関数的な力を行うのかをよく覚えておく必要があります。

20
00:01:29,340 --> 00:01:34,110
文字列をリストに分割して、特定のメソッドを含む文字列をリストに分割する方法などを覚えておいてください。

21
00:01:34,110 --> 00:01:38,430
&nbsp;

22
00:01:38,430 --> 00:01:39,570
だから先に進む。

23
00:01:39,580 --> 00:01:42,030
あなたが得なければならないものの出力例があります。

24
00:01:42,210 --> 00:01:45,540
次に、タプルとリストの主な違いは何かを質問します。

25
00:01:45,540 --> 00:01:49,050
あなたはちょうど声を出して答えることができるこの方法は私が思う執筆ではない。

26
00:01:49,050 --> 00:01:50,650
&nbsp;

27
00:01:50,850 --> 00:01:55,290
次に、ドメインドットコムの文字列とフォームユーザーから電子メールWebサイトドメインを取得する関数を作成します。

28
00:01:55,290 --> 00:01:56,850
&nbsp;

29
00:01:56,850 --> 00:02:02,490
ですから、もしあなたが関数呼び出しをしていれば、ドメインのようなものがこのフォーマットの文字列を渡して、このドメインドットコムをつかむことができるはずです。

30
00:02:02,550 --> 00:02:06,150
&nbsp;

31
00:02:06,180 --> 00:02:08,640
だから入って、何らかの機能を作りなさい。

32
00:02:08,700 --> 00:02:14,540
あなたは外に出て、ドメインと呼ぶことができます。これは、文字列に電子メールアドレスを取り込み、その電子メールがホストしているWebサイトから取得したドメインを返します。

33
00:02:14,540 --> 00:02:18,850
&nbsp;

34
00:02:18,930 --> 00:02:23,910
その後、dogという文字が入力ストリームに含まれている場合にtrueを返す基本関数を作成します。

35
00:02:23,910 --> 00:02:25,050
&nbsp;

36
00:02:25,200 --> 00:02:29,250
そして、私はあなたが句読点が犬という言葉に付随しているが、大文字の使用を考慮に入れているような縁のケースについて心配する必要はない。

37
00:02:29,670 --> 00:02:31,620
&nbsp;

38
00:02:31,620 --> 00:02:35,990
ここでも、われわれが見つける可能性があるあらゆる単一のケースを扱っているわけではない。

39
00:02:36,000 --> 00:02:42,690
単語の文字列を検索するという基本的な考え方だけでは、文字dogで単語が何回出現するかを数える関数を作成する必要があります。

40
00:02:42,830 --> 00:02:46,260
&nbsp;

41
00:02:46,260 --> 00:02:48,220
そしてもう一度、あなたは端の場合を無視することができます。

42
00:02:48,390 --> 00:02:52,290
例えば、この犬は他の犬の犬より速く走っています。

43
00:02:52,410 --> 00:02:58,840
DAGA Pierceを2回カウントするので、犬のカウント犬という機能を作ろうとしています。

44
00:02:58,930 --> 00:03:03,510
ラムダ式とFilcher関数を使用して、文字Sで始まらないリストから単語を除外することは望ましくありません。

45
00:03:03,510 --> 00:03:05,080
&nbsp;

46
00:03:05,100 --> 00:03:09,770
たとえば、このリストのシーケンスを取得した場合、このリストにフィルタリングする必要があります。

47
00:03:09,810 --> 00:03:11,080
スープとサラダ。

48
00:03:11,670 --> 00:03:13,230
そして、ここに最終的な問題があります。

49
00:03:13,260 --> 00:03:17,700
ここで説明を読むことができますが、基本的にはこの小さな最終的な問題を解決するためにこの機能を補完していきます。

50
00:03:17,820 --> 00:03:20,970
&nbsp;

51
00:03:21,030 --> 00:03:27,090
これには、もしあなたがQ＆Aフォーラムを投稿することを自由に感じたら関数を作成することと一緒にelefant

52
00:03:27,090 --> 00:03:30,350
else文が含まれていれば、私はあなたを助けてくれるでしょう。

53
00:03:30,390 --> 00:03:31,120
みんな、ありがとう。

54
00:03:31,170 --> 00:03:35,090
そして次は、この演習の解決策のウォークスルーです
