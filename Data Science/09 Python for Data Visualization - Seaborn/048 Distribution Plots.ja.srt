1
00:00:05,040 --> 00:00:10,260
&nbsp;

2
00:00:10,260 --> 00:00:15,990
こんにちは皆さん、この講演では、Seabornの分布図の講義を歓迎します。私たちは、Seabornとのさまざまなプロットタイプについて議論し、データセットの分布を視覚化することができます。

3
00:00:16,530 --> 00:00:20,170
木星ノートブックにジャンプして始めましょう。

4
00:00:21,270 --> 00:00:23,370
ここでOK私はノートブックにいる。

5
00:00:23,370 --> 00:00:29,740
私は海軍を輸入することから始めたいと思っています。

6
00:00:29,970 --> 00:00:35,430
私がノートブックに入っているので、私は先に進んで、私が見ることができるようにマット・プロットのライブ・イン・ラインがノートブックの内部の視覚化であると言うでしょう。

7
00:00:35,430 --> 00:00:38,340
&nbsp;

8
00:00:38,880 --> 00:00:39,210
大丈夫。

9
00:00:39,210 --> 00:00:44,040
さて、あなたが直接読み込むことができる組み込みのデータセットをいくつか用意して、海底地形が実際に入ってくるいくつかのデータを取得しましょう。

10
00:00:44,040 --> 00:00:45,220
&nbsp;

11
00:00:45,840 --> 00:00:50,480
そして、私はチップと呼ばれるものをつかんでチップと呼ばれるデータフレームとして保存します。

12
00:00:50,640 --> 00:00:58,210
これは、TippsがAsinusロードデータセットと等しいとし、ヒントを文字列として渡すだけで行うことができます。

13
00:00:59,280 --> 00:01:04,560
そして、これはヒントデータセットをロードし、実際にフレームの状態の頭をチェックすることができ、このようなものに見えます。

14
00:01:04,560 --> 00:01:06,050
&nbsp;

15
00:01:06,150 --> 00:01:11,580
ここには7つのコラムがあり、基本的には食事をしてからその後にヒントを残した人を指すデータです。

16
00:01:11,580 --> 00:01:13,540
&nbsp;

17
00:01:13,560 --> 00:01:19,350
だから、彼らは彼らが食事を食べた昼と時間を喫煙者であるかどうかにかかわらず、ヒントを残している人の性別や性別をヒントとして左にどれくらいの金額か食事の総額を持っています。

18
00:01:19,350 --> 00:01:24,620
&nbsp;

19
00:01:24,660 --> 00:01:27,030
そして、パーティーの大きさ。

20
00:01:27,030 --> 00:01:27,380
大丈夫。

21
00:01:27,420 --> 00:01:34,590
&nbsp;

22
00:01:34,590 --> 00:01:39,720
&nbsp;

23
00:01:39,720 --> 00:01:43,610
このプロットである最初のプロットタイプについて議論しましょう。このプロットは、単変量の観測値の分布を示すことができ、非常に単なる1つの変数を表現するのとはまったく異なっています。

24
00:01:43,620 --> 00:01:45,350
これを調べてみましょう。

25
00:01:45,390 --> 00:01:51,870
私はAsinusがこのプロットを考えたと言うつもりです。そして、このプロットでは、データフレームの単一の列を渡すだけです。

26
00:01:51,870 --> 00:01:53,580
&nbsp;

27
00:01:53,850 --> 00:01:57,610
この場合、総手形がどのように配分されているかを見てみましょう。

28
00:01:58,130 --> 00:02:03,690
だから私は総額を言うつもり、セルを実行し、あなたはこのようなプロットを取得する必要があります。

29
00:02:03,930 --> 00:02:06,100
ここで警告が出たら、心配しないでください。

30
00:02:06,120 --> 00:02:08,900
statのモデルと呼ばれる別のパッケージがあれば、実際にはそうする必要があります。

31
00:02:09,000 --> 00:02:11,220
実際のSeabornコードには影響しません。

32
00:02:11,520 --> 00:02:13,810
しかしここで私たちは何の警告もないのでOKです。

33
00:02:14,220 --> 00:02:20,990
ここでは、基本的にヒストグラムを得て、ここではカーネル密度推定と呼ばれるものを知っています。

34
00:02:21,000 --> 00:02:22,420
&nbsp;

35
00:02:22,530 --> 00:02:26,460
この講義の後半で、Katieが何であるか、実際にそれをどのように構築できるかについて説明します。

36
00:02:26,460 --> 00:02:27,090
&nbsp;

37
00:02:27,150 --> 00:02:34,680
しかし、ここではKatieがfalseに等しいという追加の議論として言いたいと思えば、それを取り除くことができます。

38
00:02:36,870 --> 00:02:39,060
そしてちょうどKatyと入力するとfalseになります。

39
00:02:39,060 --> 00:02:44,700
今度は本質的にヒストグラムを持っており、ヒストグラムは本質的にちょうどあなたの合計法案がある場所の分布です。

40
00:02:44,700 --> 00:02:46,010
&nbsp;

41
00:02:46,170 --> 00:02:52,020
だから、ここではy軸上にカウントがあることがわかります。次に、これらの棒がビンとしてX軸にあります。

42
00:02:52,050 --> 00:02:52,780
&nbsp;

43
00:02:52,890 --> 00:02:58,940
そして、これは基本的にあなたの合計請求額のほとんどが$ 10〜$ 20の間にあることを意味します。

44
00:02:59,000 --> 00:03:03,510
&nbsp;

45
00:03:03,510 --> 00:03:09,750
そして、これについてもう少し詳しく知りたければ、binの数を変更して、先に進むことができます.3番目の引数Sabinと適切な数の入札があり、その数は実際にあなたのデータセットに依存します。

46
00:03:09,750 --> 00:03:11,240
&nbsp;

47
00:03:11,400 --> 00:03:14,820
しかし、今は30に入ることにしましょう。

48
00:03:14,820 --> 00:03:19,440
そして、今や基本的な定義をもう少し理解することができ、10から20の間でほとんどの請求書があることがわかります。

49
00:03:19,440 --> 00:03:21,560
&nbsp;

50
00:03:21,900 --> 00:03:28,490
&nbsp;

51
00:03:28,500 --> 00:03:35,250
&nbsp;

52
00:03:36,090 --> 00:03:37,640
たとえば、あまりにも高い値を選択して100を入力すると、1つの価格ポイントごとに合計請求額を1つずつプロットすることが本質的に始まっています。

53
00:03:37,650 --> 00:03:43,740
だから、通常はサイズのバランスを見つけようとしますが、それは実際にあなたのプロット自体に依存します。

54
00:03:43,770 --> 00:03:44,070
OK。

55
00:03:44,100 --> 00:03:46,930
私たちはここに情報を得ているようです。

56
00:03:47,040 --> 00:03:50,940
そして、彼がこのグラフを読むことができれば、基本的には、法案のほとんどが10〜20ドルの間のどこかで起き、あなたがより高くなるにつれて消えていくと言うことができます。

57
00:03:51,000 --> 00:03:54,320
&nbsp;

58
00:03:54,330 --> 00:04:00,360
Bill Priceそれはプロットであり、それはあなたが本質的にヒストグラムを視覚化することを可能にし、その上に食べるためにケーキを加えることができます。

59
00:04:00,720 --> 00:04:02,710
&nbsp;

60
00:04:02,730 --> 00:04:05,930
しかし、後でKatieプロットについて学びます。

61
00:04:05,970 --> 00:04:13,620
&nbsp;

62
00:04:13,620 --> 00:04:20,670
&nbsp;

63
00:04:20,670 --> 00:04:21,950
私はAsinusジョイントプロットを使って基本的にこのプロットをさまざまなデータとマッチさせることができますが、基本的に2つの異なる分布プロットを組み合わせることができます。

64
00:04:22,110 --> 00:04:24,370
そしてそれはちょうど2つの変数です。

65
00:04:24,480 --> 00:04:29,640
そして、私たちが実際にこれらの2つのディストリビューションをどのように比較したいかを選ぶことを可能にするパラメータの種類があるとき。

66
00:04:29,640 --> 00:04:32,340
&nbsp;

67
00:04:32,340 --> 00:04:35,660
私に入って、エッセンスを出発点プロットとしてどのように使うことができるかを見せてください。

68
00:04:35,670 --> 00:04:41,130
まず、変数xの変数を渡してからY変数を渡してから、データセットを渡す必要があります。

69
00:04:41,130 --> 00:04:43,910
&nbsp;

70
00:04:44,100 --> 00:04:48,400
バックエンドから出発し、乗客のデータをヒントとして設定しましょう。

71
00:04:48,450 --> 00:04:54,510
そのような種類のデータフレーム、次にxとyについては、列名である文字列をパッシングします。

72
00:04:54,510 --> 00:04:56,690
お互いに比較したい2つのもの。

73
00:04:56,700 --> 00:05:02,980
だから、例えば、チップのサイズに対するチップの総量の分布を比較したいと思うかもしれません。

74
00:05:03,030 --> 00:05:04,440
それをやりましょう。

75
00:05:04,470 --> 00:05:14,350
私は、私の元として、そして途中で、法案総額を言うつもりです。アクセス私はヒントの欄にヒントを入れます。

76
00:05:14,360 --> 00:05:19,500
だから今私はちょうど合計の請求書の列にヒントの列を渡して、データがヒントに等しいと私は本質的にちょうど2つの分布プロットであるこのようなプロットを取得します。

77
00:05:20,980 --> 00:05:25,730
&nbsp;

78
00:05:25,950 --> 00:05:31,680
あなたはy軸の先端とx軸に沿った合計の紙幣を見ることができ、それから全体のプロットを見ることができるようにズームアウトすることができます。

79
00:05:31,690 --> 00:05:32,670
&nbsp;

80
00:05:33,250 --> 00:05:38,970
そして、その間に散布図があり、この散布図は基本的には理にかなっています。なぜなら、全体の請求額が高くなるにつれて、チップが高くなり、チップが通常は合計請求額に比例するためです。

81
00:05:38,980 --> 00:05:45,550
&nbsp;

82
00:05:45,550 --> 00:05:49,480
&nbsp;

83
00:05:49,560 --> 00:05:57,330
ジョイントプロットは、実際にはkindという名前の追加の引数パラメータを与えます。このkindパラメータは、このジョイントプロットの内部で実際に何が起こっているかに影響を与えることができます。

84
00:05:57,370 --> 00:06:03,270
&nbsp;

85
00:06:03,270 --> 00:06:07,860
&nbsp;

86
00:06:10,620 --> 00:06:15,750
今はデフォルトでは散らばっていますが、16進数や16進数などの引数を渡すことで、基本的に六角形の分布表現を作成することができます。

87
00:06:15,750 --> 00:06:21,660
&nbsp;

88
00:06:21,660 --> 00:06:27,150
基本的に六角形に一定数の点がある場合は暗くなり、点数が少なくなると基本的に軽くなりますが、分散点をすべて表示する必要はなく、これらの六角形。

89
00:06:27,150 --> 00:06:33,160
&nbsp;

90
00:06:33,150 --> 00:06:38,400
私たちが種の中に入れることができるもう一つの議論は、回帰を表すe gです。

91
00:06:38,740 --> 00:06:43,120
これは、Seabornが実際に回帰直線を描くことを除いて、散布図のように見えます。

92
00:06:43,120 --> 00:06:43,920
&nbsp;

93
00:06:43,930 --> 00:06:48,840
&nbsp;

94
00:06:48,850 --> 00:06:54,240
&nbsp;

95
00:06:54,250 --> 00:06:54,930
今では線形回帰については実際には学んでいませんが、機械学習の話題までは学んでいますが、後でその話題に近づくときにこれに戻り、実際にこの線がどのように構築されるかを話します。

96
00:06:55,200 --> 00:07:01,110
しかし本質的には、これは散在する点データに線形近似するようなものに過ぎませんが、後で線形回帰について実際に議論する際には後で説明するPeerson係数のP値を実際に見ることができます。

97
00:07:01,120 --> 00:07:05,940
&nbsp;

98
00:07:05,940 --> 00:07:07,910
&nbsp;

99
00:07:07,950 --> 00:07:14,830
最後に、あなたがここに入れることができる他の種類のものは、KDEであり、あなたもこれを持つことができます。

100
00:07:14,820 --> 00:07:20,410
私はK-Tについて言及しましたが、これは基本的に、これらのポイントが最も一致する場所の密度を示しています。

101
00:07:21,570 --> 00:07:29,580
大丈夫だよ。ジョイントプロットから進んでいくのは、通常はデフォルトスキャターでプロットを使うということです。これは本質的に読みやすいものであり、バットからかなりの情報を得ることができるからです。

102
00:07:29,880 --> 00:07:34,300
&nbsp;

103
00:07:34,290 --> 00:07:35,850
&nbsp;

104
00:07:35,860 --> 00:07:43,300
私たちは先に進んで、ペア・プロットとペア・プロットを示すことによって、そのアイデアを拡大することは、本質的に、少なくとも数値列に対して、データ・フレーム全体にわたるペアワイズ関係をプロットすることになります。

105
00:07:43,290 --> 00:07:49,000
&nbsp;

106
00:07:49,140 --> 00:07:53,780
また、後で説明するように、カテゴリの列の色相引数もサポートしています。

107
00:07:54,190 --> 00:08:01,680
しかし、ここでは、このジョイントのプロットを持っていることがわかります。プロットは、このデータフレームの数値カラムの可能な組み合わせごとに、このジョイントプロットを行うことです。

108
00:08:01,690 --> 00:08:08,260
&nbsp;

109
00:08:08,250 --> 00:08:09,590
私が何を意味するかを見せてあげましょう。

110
00:08:09,750 --> 00:08:11,700
それはすべての組み合わせのためにそれを行うつもりだからです。

111
00:08:11,700 --> 00:08:15,400
基本的には、プロットごとにSとSを呼び、データフレームを渡すだけです。

112
00:08:15,430 --> 00:08:18,250
そして、これは私たちがコースを通してかなりやっていることです。

113
00:08:18,250 --> 00:08:21,510
プロットごとの時間が長いほどデータフレームが大きくなることに注意してください。

114
00:08:21,660 --> 00:08:26,460
したがって、比較的小さいフレームではなく非常に大きなデータフレームを使用すると、プロットごとに多くの時間がかかることがあります。

115
00:08:26,470 --> 00:08:26,790
&nbsp;

116
00:08:26,790 --> 00:08:28,080
だから私たちはOKです。

117
00:08:28,200 --> 00:08:33,280
ここでは基本的にすべての数値列の値を対にしたプロットがあります。

118
00:08:33,270 --> 00:08:36,430
サイズは 総手形サイズ対先端。

119
00:08:36,420 --> 00:08:42,660
そして、実際に散布図を作成するのではなく、大きさや大きさなどのパラメータを取得するときに、それが理にかなっていれば直線になります。

120
00:08:42,660 --> 00:08:46,310
&nbsp;

121
00:08:46,380 --> 00:08:48,680
代わりにヒストグラムが表示されます。

122
00:08:49,120 --> 00:08:51,060
とチップとチップの同じこと。

123
00:08:51,100 --> 00:08:57,600
また、合計請求額と合計請求額を比較すると、プロットごとに平均してデータをすばやく視覚化することができます。

124
00:08:57,610 --> 00:08:58,280
&nbsp;

125
00:08:58,410 --> 00:09:06,400
また、もっとうまくいくのは、色相引数をこのhに加えることができ、hewe引数は列を渡す場所であるということです。

126
00:09:06,390 --> 00:09:08,140
&nbsp;

127
00:09:08,130 --> 00:09:15,420
カテゴリカルの欄の目的は、数値的または連続的ではなく実際のカテゴリを意味します。

128
00:09:15,450 --> 00:09:21,040
たとえば、男性と女性の2つのカテゴリがあるため、性別の列はカテゴリに分類されます。

129
00:09:22,710 --> 00:09:31,650
そしてあなたがコロニーの名前に等しい性別を渡すときにこれを渡すと、それはあなたが色相のために入れた列に基づいてデータポイントを色付けします。

130
00:09:31,680 --> 00:09:35,480
&nbsp;

131
00:09:35,520 --> 00:09:40,560
だからここではすべての緑のポイントはこの伝説とすべての男性ポイントに基づいて女性です。

132
00:09:40,630 --> 00:09:42,930
私たちは全体を見ることができるようにズームアウトします。

133
00:09:43,120 --> 00:09:45,600
すべての青い点は男性です。

134
00:09:45,610 --> 00:09:52,690
そして3番目の引数としてパレットを指定することができ、パレットでは特定のカラーパレットでこれを実際に色づけることができます。

135
00:09:52,890 --> 00:09:54,870
&nbsp;

136
00:09:54,880 --> 00:09:59,820
私たちは海軍の講義シリーズの終わりにパレットと色とスタイルについて議論します。

137
00:09:59,830 --> 00:10:01,900
今私はあなたに例を示します。

138
00:10:01,890 --> 00:10:06,690
基本的には、あなたがパレットに渡すことができるライブのプロットから来ているこれらのカラーマップ文字列があり、パラメータが何であれ、特定の色を選択します。

139
00:10:06,900 --> 00:10:11,100
&nbsp;

140
00:10:11,160 --> 00:10:16,650
そして、ここで私たちはメールが青色で、女性がこのような薄ピンク色であることを見ることができます。

141
00:10:16,650 --> 00:10:17,230
大丈夫。

142
00:10:17,250 --> 00:10:20,040
カラーとスタイルのパレットでこれを触れさせます。

143
00:10:20,050 --> 00:10:25,770
先に進んでRougプロットに進んでください。不正なプロットは実際は非常に単純なコンセプトですが、実際には不正なプロットという概念を使用して作成します。

144
00:10:25,770 --> 00:10:28,600
&nbsp;

145
00:10:28,620 --> 00:10:28,980
わたし。

146
00:10:28,990 --> 00:10:38,770
前に見たK-Tプロットを説明して、私は先に進み、Sと言うだろう。 A.

147
00:10:38,860 --> 00:10:43,110
Rougプロットを作成し、ここで単一の列に渡す配布プロットをプロットするだけです。

148
00:10:43,180 --> 00:10:51,040
ですから、ヒントを言い、合計の請求書の列を渡しましょう。敷物のプロットは非常に単純な概念です。

149
00:10:51,040 --> 00:10:52,450
&nbsp;

150
00:10:52,450 --> 00:10:59,980
これは、この統一されたまたは一意のバリアント分布上のすべての点について、ダッシュマークを本質的に1つの単一の変数として描くだけです。

151
00:10:59,980 --> 00:11:01,550
&nbsp;

152
00:11:01,570 --> 00:11:06,710
だから、ヒストグラムのように私は先に進んで、もう一度このプロットを比較してみましょう。

153
00:11:07,150 --> 00:11:12,280
私はこのプロットが総勘定書を告げるとすぐに言います。

154
00:11:12,280 --> 00:11:17,900
それを実行して、ケイティが偽であると言うことに行きましょう。

155
00:11:20,010 --> 00:11:27,040
&nbsp;

156
00:11:27,040 --> 00:11:32,920
&nbsp;

157
00:11:32,920 --> 00:11:39,480
ここでのヒストグラムとこのRuggeプロットの違いは、ヒストグラムに本質的にビンがあり、そのビン内にダッシュがいくつあるのかを数えてから数えて表示すると、私たちがこれを見ているかどうかについて知っている。

158
00:11:39,570 --> 00:11:41,200
そこに45ダッシュ。

159
00:11:41,250 --> 00:11:43,210
彼らはお互いに積み重ねられています。

160
00:11:43,360 --> 00:11:48,910
そして、ここでは、総額がさらに上がるにつれ、Rougが少なくなるか、ダッシュが少なくなります。つまり、ベンはあまり高くないでしょう。

161
00:11:48,970 --> 00:11:51,070
&nbsp;

162
00:11:51,070 --> 00:11:55,840
これは、SR-GR RAMとこの不正なプロットとの間の基本的な関係です。本当に簡単なコンセプトです。

163
00:11:55,840 --> 00:11:56,450
&nbsp;

164
00:11:56,560 --> 00:12:01,730
ディストリビューションラインに沿ったすべての単一点に対してダッシュマークを描くだけです。

165
00:12:01,750 --> 00:12:02,180
大丈夫。

166
00:12:02,230 --> 00:12:03,460
これが総収入です。

167
00:12:03,510 --> 00:12:09,490
私たちがしたいことは、この実際のカイエプロットが何であるかを説明するために、この不正なプロットのアイデアを築くことです。そして、それはここでこのラインになるでしょう。

168
00:12:10,960 --> 00:12:13,260
&nbsp;

169
00:12:13,450 --> 00:12:17,820
これらの不正なプロットに基づいて実際にどのようにこの線を構築するのですか？

170
00:12:18,010 --> 00:12:26,200
&nbsp;

171
00:12:26,260 --> 00:12:32,260
&nbsp;

172
00:12:32,260 --> 00:12:38,320
&nbsp;

173
00:12:38,440 --> 00:12:39,520
KDEプロットはカーネル密度推定プロットを表しています。実際にこれをGoogleで調べることができ、カーネル密度推定プロットに関するWikipediaをチェックすると、ページはこのようなカール密度のように見えますこれは本当にスクロールダウンです。

174
00:12:39,520 --> 00:12:43,440
これは本当に素晴らしいここの図形であり、本質的に我々は構築しようとしています。

175
00:12:43,450 --> 00:12:47,230
これらの黒いダッシュのそれぞれが不正なプロットであることがわかります。

176
00:12:47,230 --> 00:12:48,460
実際のポイント。

177
00:12:48,700 --> 00:12:53,140
そして、あなたはこれらの小さな正規ガウス分布を各点の上に持っています。

178
00:12:53,200 --> 00:12:54,580
そして、あなたはそれらをすべてまとめます。

179
00:12:54,640 --> 00:12:58,540
したがって、このCurrenceカーネルの最終的な密度推定値を得ることができます。

180
00:12:58,570 --> 00:13:02,150
今、正規分布またはガウス分布とはどういう意味ですか？

181
00:13:02,410 --> 00:13:08,010
あなたがWikipedia

182
00:13:08,080 --> 00:13:11,770
Nessusを確率論で見上げれば正規分布が成り立ち、おそらく最も一般的な連続確率分布は一元的に言えます。

183
00:13:11,780 --> 00:13:16,780
それは普通のディストリビューションのようなものです。皆さんはどのようにテストをしましたか、そしてすべての生徒をグレードしてから得点の分布を見てください。

184
00:13:16,780 --> 00:13:20,130
&nbsp;

185
00:13:20,140 --> 00:13:26,530
だから、通常、このように正規化されたものや、人の年齢や人の高さなど、通常、多くのものが正規分布に従う傾向があります。

186
00:13:26,530 --> 00:13:29,950
&nbsp;

187
00:13:29,950 --> 00:13:30,420
OK。

188
00:13:30,760 --> 00:13:36,160
Jupiterのノートブックに戻り、これらのトピックに触れてみましょう。

189
00:13:37,270 --> 00:13:38,340
&nbsp;

190
00:13:38,380 --> 00:13:42,880
私はノートブックからいくつかのコードをコピーして貼り付けて、このコードの理解を心配する必要はありません。

191
00:13:42,880 --> 00:13:43,360
&nbsp;

192
00:13:43,420 --> 00:13:49,320
それをコピー＆ペーストするための説明のための図を作成するだけです。

193
00:13:50,170 --> 00:13:54,510
私はこのコードをコピーして貼り付けて、このコードを使って素早く細分化してみましょう。

194
00:13:54,610 --> 00:13:56,260
私はちょうどいくつかの輸入品を持っています。

195
00:13:56,260 --> 00:13:58,690
ランダムなデータのデータセットを作成します。

196
00:13:58,780 --> 00:14:02,050
それから私はそのランダムなデータにラグプロットを使用します。

197
00:14:02,050 --> 00:14:04,630
プロットのx軸を設定します。

198
00:14:04,660 --> 00:14:11,340
任意のOhlund空間を使って、X-Men's X maxから等間隔の点の点を100点作成し、ここで作成します。

199
00:14:11,380 --> 00:14:14,290
これはおそらくライブラリを使用するため、理解するのが最も難しい部分です。

200
00:14:14,290 --> 00:14:15,240
我々はまだ話をしていない。

201
00:14:15,280 --> 00:14:16,600
それは普通ではありません。

202
00:14:16,600 --> 00:14:21,920
これは、プロットがそれぞれのラグプロット点の正規分布であることです。

203
00:14:21,920 --> 00:14:23,030
そして、それはこのように見えます。

204
00:14:23,060 --> 00:14:25,340
私たちは先に進み、これを拡大します。

205
00:14:25,660 --> 00:14:28,900
ここでは私のデータセットがあり、これはランダムなデータセットです。

206
00:14:28,900 --> 00:14:33,610
だから、この年を走らせると少し違って見えるかもしれませんが、私たちはもうヒントを使って作業しているようには見えません。

207
00:14:33,610 --> 00:14:33,980
&nbsp;

208
00:14:34,000 --> 00:14:35,790
私たちはいくつかのランダムなデータに取り組んでいます。

209
00:14:35,800 --> 00:14:40,840
注意ここに青いダッシュがあり、この灰色の線は正規分布を表しています。

210
00:14:40,870 --> 00:14:43,050
これらの青いダッシュのそれぞれの上に。

211
00:14:43,330 --> 00:14:47,040
これはダッシュを中心とした正規分布です。

212
00:14:47,320 --> 00:14:49,940
そして、私たちはお互いの上にそれらの束を持っています。

213
00:14:49,990 --> 00:14:56,180
さて、次に進むべきことは、カーネル密度基底関数を得るためにそれらのすべてを上げることです。

214
00:14:57,070 --> 00:15:01,480
そして、これはこれらの小さな正規分布のすべての合計に過ぎません。

215
00:15:01,480 --> 00:15:02,010
大丈夫。

216
00:15:02,020 --> 00:15:07,150
&nbsp;

217
00:15:07,150 --> 00:15:12,670
ノートブックからコードの2番目のブロックをコピーして貼り付けることで、実際にこれらの基底関数をすべて集計することができます。

218
00:15:12,670 --> 00:15:17,700
あなたはこれからのTeekayプロットであるこのようなものを手に入れます。それはプロットがディスクプロットからどのように構築されるかです。

219
00:15:17,890 --> 00:15:20,930
&nbsp;

220
00:15:20,950 --> 00:15:25,490
最初のプロットでは、Tよりも高いtを見ました。

221
00:15:25,570 --> 00:15:26,430
大丈夫。

222
00:15:26,560 --> 00:15:31,940
だからこそ、私たちがもっと見てきたデータの分布を示すことができます。

223
00:15:32,110 --> 00:15:38,350
このコンピュータとプロットが入力するさまざまなプロットタイプをすばやく確認してみましょう。

224
00:15:38,350 --> 00:15:39,770
私たちはスクロールアップします。

225
00:15:39,820 --> 00:15:46,120
彼らはこのプロットであり、このプロットでは2つの方法でそれを使うことができ、Kayteeは偽となり、基本的にヒストグラムを見るか、この空白のままにしています。

226
00:15:46,120 --> 00:15:51,410
&nbsp;

227
00:15:52,840 --> 00:15:57,100
&nbsp;

228
00:15:57,100 --> 00:16:03,580
&nbsp;

229
00:16:03,580 --> 00:16:08,740
そして、あなたは実際にカーシィ密度を見積もることができます。どのような種類の説明は、終わりが敷物のまわりのすべての正規分布の合計にすぎないことを説明します。Aプロットジョイントプロットは、2列で渡すこのアイデアのアイデアに本当に似ています。それらをxとyの引数として扱います。

230
00:16:08,760 --> 00:16:15,400
&nbsp;

231
00:16:15,580 --> 00:16:21,630
&nbsp;

232
00:16:21,640 --> 00:16:26,830
&nbsp;

233
00:16:26,830 --> 00:16:33,340
&nbsp;

234
00:16:33,340 --> 00:16:39,400
&nbsp;

235
00:16:39,400 --> 00:16:45,310
&nbsp;

236
00:16:45,400 --> 00:16:46,450
3番目の引数がデータと等しい場合は、次のプロットはペアプロットであり、プロットはプロットを基に作成されたもので、データセット内のすべての単一の列または数値の列の結合プロットです。データフレームそのものを渡すだけで色相とパレットを渡すことができます。カテゴリの列で実際に色付けしたい場合は、次のプロットではRougプロットは通常Rougプロットを使用しませんが、それはあなたのためにあります不正なプロットを使用する主な考え方は、ここでこのコードを使って行われるカーネル密度推定プロットのロジックを構築することです。

237
00:16:46,570 --> 00:16:51,470
&nbsp;

238
00:16:51,490 --> 00:16:56,330
&nbsp;

239
00:16:56,470 --> 00:17:03,400
&nbsp;

240
00:17:03,400 --> 00:17:05,200
あなたは時間をかけてこのコードを読むことができますが、不正なプロットを使用しているときにKatieプロットのカーネル密度推定プロットを作成したいときは、不正なプロットはこれらのすべての正規分布を各点に持ち、それらの点の合計を取る。

241
00:17:05,200 --> 00:17:07,810
それがカーネル密度推定プロットです。

242
00:17:08,950 --> 00:17:16,540
Kayteeがfalseであると言ってK-Tプロットを取り除くことができることを知っています。

243
00:17:16,840 --> 00:17:20,620
&nbsp;

244
00:17:20,620 --> 00:17:27,160
あなたが実際にK-Tプロットをしたいだけで実際のBeenzをここでは望んでいないのであれば、あなたはAsinus

245
00:17:27,160 --> 00:17:34,780
KDEプロットをしてから助けてくれるかもしれないプロットの代わりに実際にパーザンできます。

246
00:17:35,200 --> 00:17:42,010
総手形とこれはバーの分布なしでこのK-Tプロットを構築します。

247
00:17:42,010 --> 00:17:42,710
大丈夫。

248
00:17:43,090 --> 00:17:48,760
うまくいけば、Seabornは信じられないほど強力で、あなたが書く必要があるコードまで非常にシンプルであることを実感してください。

249
00:17:48,760 --> 00:17:49,560
&nbsp;

250
00:17:49,690 --> 00:17:51,580
私たちがしたことはすべて、ただ一つの行で終わりました。

251
00:17:51,640 --> 00:17:55,960
あなたがこれをやろうとするとplot

252
00:17:56,020 --> 00:18:00,490
libをマップすると複数の行が表示されますが、これについてはうまくいくのはあなたがplotのライブについて知っていることとは違っているから、スタイリングと色についてもっと多くのことを見るでしょう。

253
00:18:00,490 --> 00:18:02,200
&nbsp;

254
00:18:02,350 --> 00:18:06,790
地図プロットが生き残った知識の多くは、このプロットで実際に小さなものを編集することに移ります。

255
00:18:06,880 --> 00:18:08,020
&nbsp;

256
00:18:08,380 --> 00:18:13,290
Seabornが私の好きな図書館の1つになる前にもう一度Seabornを楽しむようになってくれることを願っています。私たちがSeabornで学ぶ予定の次の数種類の模型をお見せすることはできません。

257
00:18:13,560 --> 00:18:17,800
OK

258
00:18:18,400 --> 00:18:20,260
みんなありがとう、私は次の講演でお会いしましょう
