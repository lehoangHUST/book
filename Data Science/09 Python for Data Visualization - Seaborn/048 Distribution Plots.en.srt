1
00:00:05,040 --> 00:00:10,260
Hello everyone and welcome to the distribution plot's lecture for Seaborn in this lecture we're going

2
00:00:10,260 --> 00:00:15,990
to discuss different plot types with Seaborn that allow us to visualize the distribution of a data set

3
00:00:15,990 --> 00:00:16,520
.

4
00:00:16,530 --> 00:00:20,170
Let's go ahead and jump to the Jupiter notebook to get started.

5
00:00:21,270 --> 00:00:23,370
OK here I am at the notebook.

6
00:00:23,370 --> 00:00:29,740
I want to get started by importing seaborne and by convention we import Seaborn as asinus.

7
00:00:29,970 --> 00:00:35,430
And since I'm in the notebook I'm going to go ahead and say Matt plot's live in line that way I can

8
00:00:35,430 --> 00:00:38,340
see are visualizations inside of the notebook.

9
00:00:38,880 --> 00:00:39,210
All right.

10
00:00:39,210 --> 00:00:44,040
Now let's get some data a plot seaborne actually comes in with a few built in data sets that you can

11
00:00:44,040 --> 00:00:45,220
directly load.

12
00:00:45,840 --> 00:00:50,480
And I'm going to grab one called tips and save it as a data frame called tips.

13
00:00:50,640 --> 00:00:58,210
You can do this by just saying Tipps is equal to Asinus load data set and then passen tips as a string

14
00:00:58,220 --> 00:00:58,650
.

15
00:00:59,280 --> 00:01:04,560
And this will load the tips data set and then I can actually check the head of the state of frame and

16
00:01:04,560 --> 00:01:06,050
it looks something like this.

17
00:01:06,150 --> 00:01:11,580
There's seven columns here and this is basically just data referring to people who had a meal and then

18
00:01:11,580 --> 00:01:13,540
left a tip afterwards.

19
00:01:13,560 --> 00:01:19,350
So you have the total price or bill of the meal how much the left as a tip the gender or sex of the

20
00:01:19,350 --> 00:01:24,620
person leaving the tip whether or not they were a smoker what day and time they ate their meal out.

21
00:01:24,660 --> 00:01:27,030
And then the size of the party.

22
00:01:27,030 --> 00:01:27,380
All right.

23
00:01:27,420 --> 00:01:34,590
Let's go ahead and discuss our first plot type which is this plot CISC plot that this plot allows us

24
00:01:34,590 --> 00:01:39,720
to show the distribution of a univariate set of observations and you know very it is just a different

25
00:01:39,720 --> 00:01:43,610
way of saying just one variable.

26
00:01:43,620 --> 00:01:45,350
Let's go in and explore this.

27
00:01:45,390 --> 00:01:51,870
I'm going to say Asinus thought this plot and then for this plot what you do is you just pass in a single

28
00:01:51,870 --> 00:01:53,580
column of your data frame.

29
00:01:53,850 --> 00:01:57,610
In this case let's go ahead and see how the total bill is distributed.

30
00:01:58,130 --> 00:02:03,690
So I'm going to say total bill and then run the cell and you should get a plot that looks like this

31
00:02:03,690 --> 00:02:03,880
.

32
00:02:03,930 --> 00:02:06,100
If you get a warning here don't worry about it.

33
00:02:06,120 --> 00:02:08,900
That actually has to do if another package called stat's models.

34
00:02:09,000 --> 00:02:11,220
It won't affect your actual Seaborn code.

35
00:02:11,520 --> 00:02:13,810
But here we don't have any warning so we're OK.

36
00:02:14,220 --> 00:02:20,990
Notice here that I get basically a histogram and what's known as a k d e a kernel density estimation

37
00:02:21,000 --> 00:02:22,420
that's the line here.

38
00:02:22,530 --> 00:02:26,460
Later on in this lecture we're going to discuss what this Katie is and how we can actually build that

39
00:02:26,460 --> 00:02:27,090
up.

40
00:02:27,150 --> 00:02:34,680
But for now we can remove it if we want to by saying as an additional argument here Katie equals false

41
00:02:34,680 --> 00:02:35,800
.

42
00:02:36,870 --> 00:02:39,060
And just by typing Katy equals false.

43
00:02:39,060 --> 00:02:44,700
Now you essentially just have a histogram and a histogram is essentially just a distribution of where

44
00:02:44,700 --> 00:02:46,010
your total bill lies.

45
00:02:46,170 --> 00:02:52,020
So you can see here that on the y axis you have a count and then you have these bars on the X-axis as

46
00:02:52,050 --> 00:02:52,780
bins.

47
00:02:52,890 --> 00:02:58,940
And this basically means that most of your total bills are somewhere between $10 and $20.

48
00:02:59,000 --> 00:03:03,510
And if you want to get a little more information on this you can change the number of bins so you can

49
00:03:03,510 --> 00:03:09,750
go ahead and there's a third argument Sabin's and then the appropriate number of bids and the number

50
00:03:09,750 --> 00:03:11,240
really depends on your dataset.

51
00:03:11,400 --> 00:03:14,820
But let's go in and choose 30 for now.

52
00:03:14,820 --> 00:03:19,440
And now we can get a little more basically definition and we can still see that there's most of the

53
00:03:19,440 --> 00:03:21,560
bills happen between 10 and 20.

54
00:03:21,900 --> 00:03:28,490
If you choose a value that's too high for instance let's go ahead and put in 100 you'll start to get

55
00:03:28,500 --> 00:03:35,250
kind of a weird scenario where you're essentially beginning to plot every single instance of total bills

56
00:03:36,090 --> 00:03:37,640
for every single price point.

57
00:03:37,650 --> 00:03:43,740
So usually I want to try to find a balance in size but that really depends on your plot itself.

58
00:03:43,770 --> 00:03:44,070
OK.

59
00:03:44,100 --> 00:03:46,930
Looks like we have a good idea of the information here.

60
00:03:47,040 --> 00:03:50,940
And if he can read this graph can basically just say most of the bills happen somewhere between 10 and

61
00:03:51,000 --> 00:03:54,320
$20 and begin to fade away as you get higher and higher.

62
00:03:54,330 --> 00:04:00,360
Bill Price That's the plot and that allows you to visualize the distribution essentially a histogram

63
00:04:00,720 --> 00:04:02,710
and you can add a cake to eat on top of that.

64
00:04:02,730 --> 00:04:05,930
But we'll learn about Katie plot's later on.

65
00:04:05,970 --> 00:04:13,620
Let's talk about joint's plot and joint plots from seaborne I can say Asinus joint plots allows you

66
00:04:13,620 --> 00:04:20,670
to basically match up to this plots for by various data meaning you can essentially combine two different

67
00:04:20,670 --> 00:04:21,950
distribution plots.

68
00:04:22,110 --> 00:04:24,370
And by very it is just two variables.

69
00:04:24,480 --> 00:04:29,640
And when you have a kind of parameter that we're going to play around with which allows us to choose

70
00:04:29,640 --> 00:04:32,340
how we actually want to compare these two distributions.

71
00:04:32,340 --> 00:04:35,660
Let me go in and show you how we can use essence as a starting point plot.

72
00:04:35,670 --> 00:04:41,130
First you have the passen in x variable and then you have to pass in a Y variable and then you have

73
00:04:41,130 --> 00:04:43,910
to pass in your data set.

74
00:04:44,100 --> 00:04:48,400
Let's start from the back end so passenger data set as tips.

75
00:04:48,450 --> 00:04:54,510
So that sort of data frame and then for x and y you just pasand strings that are column names.

76
00:04:54,510 --> 00:04:56,690
The two things you want to compare to each other.

77
00:04:56,700 --> 00:05:02,980
So for instance maybe I want to compare the distribution of the total bill versus the tip size.

78
00:05:03,030 --> 00:05:04,440
Let's go ahead and do that.

79
00:05:04,470 --> 00:05:14,350
I'm going to say total bill as my ex and on my way Access I'm going to put in tip the tip column.

80
00:05:14,360 --> 00:05:19,500
So right now I'm just passing in the total bill column the tip column and then the data equals tips

81
00:05:20,980 --> 00:05:25,730
and I get a plot that looks like this which is essentially just two distribution plots.

82
00:05:25,950 --> 00:05:31,680
You can see the tip on the y axis and total bill along the x axis and then zoom out so you can see the

83
00:05:31,690 --> 00:05:32,670
whole plot.

84
00:05:33,250 --> 00:05:38,970
And then in between I have a scatterplot and this scatterplot actually basically makes sense because

85
00:05:38,980 --> 00:05:45,550
it looks like it has a trend that as you go higher in total bill you will go higher in tip and that

86
00:05:45,550 --> 00:05:49,480
makes sense because tips are usually proportionate to your total bill.

87
00:05:49,560 --> 00:05:57,330
Now joint plots actually give you an additional argument parameter called kind's and this kind parameter

88
00:05:57,370 --> 00:06:03,270
allows you to affect what's actually going on inside of this joint plot.

89
00:06:03,270 --> 00:06:07,860
Right now by default it's scatter but you can also pass in an argument such as hex

90
00:06:10,620 --> 00:06:15,750
and hex allows you to make basically a hexagon distribution representation.

91
00:06:15,750 --> 00:06:21,660
It's similar to scatter except basically if the hexagon has a certain number of points in it it gets

92
00:06:21,660 --> 00:06:27,150
darker and if it has less points it gets lighter essentially it's just a way of not having to put all

93
00:06:27,150 --> 00:06:33,160
those scatter points on but instead showing a distribution with these hexagons.

94
00:06:33,150 --> 00:06:38,400
Another argument we can put in for kind is e g which stands for regression.

95
00:06:38,740 --> 00:06:43,120
And this will look a lot like a scatterplot except Seaborn is actually going to draw a regression line

96
00:06:43,120 --> 00:06:43,920
on it.

97
00:06:43,930 --> 00:06:48,840
Now we haven't actually learns about linear regression yet as far as the machine learning topic but

98
00:06:48,850 --> 00:06:54,240
later on when we do approach that topic will come back to this and actually discuss how this line is

99
00:06:54,250 --> 00:06:54,930
built.

100
00:06:55,200 --> 00:07:01,110
But essentially this is just showing almost like a linear fit to the scattered point data and you can

101
00:07:01,120 --> 00:07:05,940
actually see it has a P value in a Peerson coefficient which we'll discuss later on when we actually

102
00:07:05,940 --> 00:07:07,910
discuss linear regression.

103
00:07:07,950 --> 00:07:14,830
Finally in other kind that you can put in here is KDE and that allows you to have this too.

104
00:07:14,820 --> 00:07:20,410
I mentioned K-T which essentially just shows you the density of where these points match up the most

105
00:07:20,400 --> 00:07:21,560
.

106
00:07:21,570 --> 00:07:29,580
All right let's go ahead and move on from joint plot will usually be using plot with the default scatter

107
00:07:29,880 --> 00:07:34,300
because that's the one that's essentially easiest to read and gives you quite a bit of information right

108
00:07:34,290 --> 00:07:35,850
off the bat.

109
00:07:35,860 --> 00:07:43,300
We're going to go ahead and expand that idea by showing you pair plot and pair plot is essentially going

110
00:07:43,290 --> 00:07:49,000
to plot pairwise relationships across an entire data frame at least for the numerical columns.

111
00:07:49,140 --> 00:07:53,780
And it also supports a color hue argument for categorical columns which I'll show you later on.

112
00:07:54,190 --> 00:08:01,680
But we see here on top that we have this joint's plot what plot is essentially going to do is do this

113
00:08:01,690 --> 00:08:08,260
joint plot for every single possible combination of the numerical columns in this data frame.

114
00:08:08,250 --> 00:08:09,590
Let me go to show you what I mean.

115
00:08:09,750 --> 00:08:11,700
Because it's going to do it for all the combinations.

116
00:08:11,700 --> 00:08:15,400
Basically you just have to call S and S thought per plot and passing your data frame.

117
00:08:15,430 --> 00:08:18,250
And this is something we're going to be doing quite a bit throughout the course.

118
00:08:18,250 --> 00:08:21,510
Keep in mind the larger your data frame the longer per plot takes.

119
00:08:21,660 --> 00:08:26,460
So a lot of times per plot takes a while if you have a very large data frame instead of frames relatively

120
00:08:26,470 --> 00:08:26,790
small.

121
00:08:26,790 --> 00:08:28,080
So we're OK.

122
00:08:28,200 --> 00:08:33,280
And here we basically have a pair plot for all the numerical column values.

123
00:08:33,270 --> 00:08:36,430
So we have size vs. total bill size versus tip.

124
00:08:36,420 --> 00:08:42,660
And then when you get to a parameter versus itself for instance size versus size instead of actually

125
00:08:42,660 --> 00:08:46,310
doing a scatterplot which when it makes sense you just have a straight line.

126
00:08:46,380 --> 00:08:48,680
You see a histogram instead.

127
00:08:49,120 --> 00:08:51,060
And same thing for Tip versus tip.

128
00:08:51,100 --> 00:08:57,600
And for total bill versus total bill that means per plot is a really nice way to quickly visualize your

129
00:08:57,610 --> 00:08:58,280
data.

130
00:08:58,410 --> 00:09:06,400
And what's even nicer is that you can add a hue argument to this h you eat and the hewe argument is

131
00:09:06,390 --> 00:09:08,140
where you would pass in the column.

132
00:09:08,130 --> 00:09:15,420
The aim of a categorical column in categorical means not numerical or continuous but actual categories

133
00:09:15,420 --> 00:09:15,450
.

134
00:09:15,450 --> 00:09:21,040
For instance the sex column is categorical because there's two categories in it there's male and female

135
00:09:21,030 --> 00:09:22,270
.

136
00:09:22,710 --> 00:09:31,650
And when you pass this in as you pass in the colony name equal sex and it will color the data points

137
00:09:31,680 --> 00:09:35,480
based off of the column you put in for hue.

138
00:09:35,520 --> 00:09:40,560
So here all the green points are female based on this legend and all the male points.

139
00:09:40,630 --> 00:09:42,930
We're going to zoom out so we can see the whole thing.

140
00:09:43,120 --> 00:09:45,600
All the blue points are male.

141
00:09:45,610 --> 00:09:52,690
And as a third argument you can specify a palette and the palette allows you to actually color this

142
00:09:52,890 --> 00:09:54,870
with some specific color palette.

143
00:09:54,880 --> 00:09:59,820
We're going to discuss palettes and color and style at the very end of the seaborne lecture series.

144
00:09:59,830 --> 00:10:01,900
Right now I'll just show you an example.

145
00:10:01,890 --> 00:10:06,690
Essentially there's these color map strings that are from that plot live that you can pass in his palette

146
00:10:06,900 --> 00:10:11,100
and they will choose certain colors for whatever the parameters are.

147
00:10:11,160 --> 00:10:16,650
And here we can see now mail is blue and female is this kind of a light pink color.

148
00:10:16,650 --> 00:10:17,230
All right.

149
00:10:17,250 --> 00:10:20,040
We'll touch it on palettes in colors and styles a lot more.

150
00:10:20,050 --> 00:10:25,770
Let's go ahead and move on to Roug plots and rogue plots are actually a very simple concept but we're

151
00:10:25,770 --> 00:10:28,600
going to use the concept of a rogue plot to actually build.

152
00:10:28,620 --> 00:10:28,980
I am.

153
00:10:28,990 --> 00:10:38,770
Explain the K-T plot we saw earlier were I'm going to go ahead and say S.A. Roug plots and just like

154
00:10:38,860 --> 00:10:43,110
just plot the distribution plot you're going to pass in a single column here.

155
00:10:43,180 --> 00:10:51,040
So we're going to say tips and let's go to pass the total bill column and what the rug plot does is

156
00:10:51,040 --> 00:10:52,450
it's a very simple concept.

157
00:10:52,450 --> 00:10:59,980
It just draws a dash mark for every points on this uniform or unique variant distribution essentially

158
00:10:59,980 --> 00:11:01,550
one single variable.

159
00:11:01,570 --> 00:11:06,710
So instead of like a histogram let me go ahead and make that this plot one more time to compare.

160
00:11:07,150 --> 00:11:12,280
I will say as soon as this plot tips total bill.

161
00:11:12,280 --> 00:11:17,900
Run that and let's go to say Katie is false.

162
00:11:20,010 --> 00:11:27,040
OK so the difference between a histogram here below and this Rugge plot is that the histogram essentially

163
00:11:27,040 --> 00:11:32,920
has bins and it counts how many dashes were in that bin and then shows it as a number up here and that

164
00:11:32,920 --> 00:11:39,480
means theres between like 10 and I don't know 11 there's about if we take a look at this.

165
00:11:39,570 --> 00:11:41,200
Forty five dashes there.

166
00:11:41,250 --> 00:11:43,210
They're all kind of stacked on top of each other.

167
00:11:43,360 --> 00:11:48,910
And then over here as we go further in total bill price there's less Roug or less dashes and that means

168
00:11:48,970 --> 00:11:51,070
the Ben is going to be less high.

169
00:11:51,070 --> 00:11:55,840
That's the basic relationship between the SR-GR RAM and this rogue plot going rogue plot really simple

170
00:11:55,840 --> 00:11:56,450
concept.

171
00:11:56,560 --> 00:12:01,730
You just draw a dash mark for every single point along the distribution line.

172
00:12:01,750 --> 00:12:02,180
All right.

173
00:12:02,230 --> 00:12:03,460
That's the total bill.

174
00:12:03,510 --> 00:12:09,490
What we want to do is build off this idea of rogue plots to explain what this actual Kaytee plot is

175
00:12:10,960 --> 00:12:13,260
and that's going to be this line right here.

176
00:12:13,450 --> 00:12:17,820
How do we actually build this line based off of these rogue plots.

177
00:12:18,010 --> 00:12:26,200
And you can see that it kind of has a relationship to the rogue plot counts KDE plots stand for kernel

178
00:12:26,260 --> 00:12:32,260
density estimation plots and you can actually Google this and check out the Wikipedia on kernel density

179
00:12:32,260 --> 00:12:38,320
estimation plots and the page will look something like this curl density estimation and this is a really

180
00:12:38,440 --> 00:12:39,520
scroll down.

181
00:12:39,520 --> 00:12:43,440
This is a really nice figure here here and essentially we're going to try to construct.

182
00:12:43,450 --> 00:12:47,230
You'll notice that each of these black dashes here is the rogue plot.

183
00:12:47,230 --> 00:12:48,460
So the actual points.

184
00:12:48,700 --> 00:12:53,140
And then you have these little normal Gaussian distributions on top of each point.

185
00:12:53,200 --> 00:12:54,580
And then you sum them all up.

186
00:12:54,640 --> 00:12:58,540
So you get this final Currence kernel density estimation.

187
00:12:58,570 --> 00:13:02,150
Now what do I mean by normal distribution or Gaussian distribution.

188
00:13:02,410 --> 00:13:08,010
Well if you also look up on Wikipedia Nessus in probability theory the normal distribution and I'd say

189
00:13:08,080 --> 00:13:11,770
probably the most common continuous probability distribution centrally.

190
00:13:11,780 --> 00:13:16,780
It's these kind of normal distributions where you say like oh how did everyone do on their test and

191
00:13:16,780 --> 00:13:20,130
you grade all the students and then see the distribution of scores.

192
00:13:20,140 --> 00:13:26,530
So usually something normalized like this or for instance people's ages or people's Heights usually

193
00:13:26,530 --> 00:13:29,950
a lot of things tend to follow a normal distribution.

194
00:13:29,950 --> 00:13:30,420
OK.

195
00:13:30,760 --> 00:13:36,160
Let's go ahead and jump back to the Jupiter note book and touch upon these topics in a little more detail

196
00:13:37,270 --> 00:13:38,340
in order to do this.

197
00:13:38,380 --> 00:13:42,880
I'm going to copy and paste some code from the note book and you don't need to worry about understanding

198
00:13:42,880 --> 00:13:43,360
this code.

199
00:13:43,420 --> 00:13:49,320
It's just to build out a diagram for explanation in a go to copy and paste this.

200
00:13:50,170 --> 00:13:54,510
I've copied and pasted this code and let me break down real quick with this codes doing.

201
00:13:54,610 --> 00:13:56,260
I just have a few imports.

202
00:13:56,260 --> 00:13:58,690
I create a dataset of random data.

203
00:13:58,780 --> 00:14:02,050
Then I use a rug plot on that random data.

204
00:14:02,050 --> 00:14:04,630
I set up the x axis for the plot.

205
00:14:04,660 --> 00:14:11,340
Use any Ohlund space to create 100 equally spaced point points from X-Men's X max and then here.

206
00:14:11,380 --> 00:14:14,290
This is probably the hardest part to understand because it uses the library.

207
00:14:14,290 --> 00:14:15,240
We haven't talked about yet.

208
00:14:15,280 --> 00:14:16,600
That's not normal.

209
00:14:16,600 --> 00:14:21,920
All this does is it plot's a normal distribution for each of the rug plot points.

210
00:14:21,920 --> 00:14:23,030
And that looks like this.

211
00:14:23,060 --> 00:14:25,340
We go ahead and zoom in on this.

212
00:14:25,660 --> 00:14:28,900
Here I have my data set and this is a random data set.

213
00:14:28,900 --> 00:14:33,610
So if you run this years may look a little different but keep in mind we're not look working with tips

214
00:14:33,610 --> 00:14:33,980
anymore.

215
00:14:34,000 --> 00:14:35,790
We're just working on some random data.

216
00:14:35,800 --> 00:14:40,840
Notice I have blue dashes here and then these gray lines represent normal distributions.

217
00:14:40,870 --> 00:14:43,050
On top of each of these blue dashes.

218
00:14:43,330 --> 00:14:47,040
So this is a normal distribution centered around the dash.

219
00:14:47,320 --> 00:14:49,940
And we have a bunch of them on top of each other.

220
00:14:49,990 --> 00:14:56,180
Well we're going to go ahead and do next is some of them all up to get the kernel density basis function

221
00:14:56,190 --> 00:14:56,540
.

222
00:14:57,070 --> 00:15:01,480
And this is just the sum of all of these little normal distributions.

223
00:15:01,480 --> 00:15:02,010
All right.

224
00:15:02,020 --> 00:15:07,150
Copy and pasting the second block of code from the notebook allows us to actually sum up all these basis

225
00:15:07,150 --> 00:15:12,670
functions which are just these normal distributions when she sum them all up.

226
00:15:12,670 --> 00:15:17,700
You get something that looks like this which is just Teekay the plot from before and that's how the

227
00:15:17,890 --> 00:15:20,930
plot is constructed from the disk plot.

228
00:15:20,950 --> 00:15:25,490
The very first plot we looked at the highest t below T.

229
00:15:25,570 --> 00:15:26,430
All right.

230
00:15:26,560 --> 00:15:31,940
So those are all the major ways you can show distributions of data we have see more.

231
00:15:32,110 --> 00:15:38,350
Let's go ahead and quickly review all the various plot types that this computer and plot types.

232
00:15:38,350 --> 00:15:39,770
We scroll back up.

233
00:15:39,820 --> 00:15:46,120
They were the this plot and again that this plot you can use it with two methods have Kaytee equals

234
00:15:46,120 --> 00:15:51,410
false and essentially just see a histogram or leave this blank.

235
00:15:52,840 --> 00:15:57,100
And then you can actually see the Caity the kernel density estimation which kind of explain that the

236
00:15:57,100 --> 00:16:03,580
end is just the sum of all the normal distributions around the rug A-plot joint plot is really similar

237
00:16:03,580 --> 00:16:08,740
to this idea expectorate passing in two columns and you pass them in as x and y arguments.

238
00:16:08,760 --> 00:16:15,400
If your third argument equal to the data then the next plot we learn about was the pair plot and the

239
00:16:15,580 --> 00:16:21,630
plot is just building off of the plot and essentially is a joint plot for every single column or numerical

240
00:16:21,640 --> 00:16:26,830
column in your data set and that means you just pass in the data set itself that data frame and you

241
00:16:26,830 --> 00:16:33,340
can pass in the hue and palette if you want to actually color by a categorical column next plot we learned

242
00:16:33,340 --> 00:16:39,400
about was Roug plot usually won't be using Roug plots but it's there for you and the main idea of using

243
00:16:39,400 --> 00:16:45,310
a rogue plot is kind of building the logic of the kernel density estimation plot which is done through

244
00:16:45,400 --> 00:16:46,450
this code here.

245
00:16:46,570 --> 00:16:51,470
You can take the time and read through this code but I just wanted to get the point across that when

246
00:16:51,490 --> 00:16:56,330
you're using a rogue plot and you want to build a kernel density estimation plot for that the Katie

247
00:16:56,470 --> 00:17:03,400
plot you can do that just by saying rogue plot has all these normal distributions on to each point and

248
00:17:03,400 --> 00:17:05,200
then take the sum of all those points.

249
00:17:05,200 --> 00:17:07,810
And that's the kernel density estimation plot.

250
00:17:08,950 --> 00:17:16,540
And we've seen how we can do that using this plot and as a quick point if you are using this plot here

251
00:17:16,840 --> 00:17:20,620
we know that we can get rid of the K-T plot by saying Kaytee equals false.

252
00:17:20,620 --> 00:17:27,160
If you actually just want the K-T plot and don't want the actual Beenz here you can actually pasan instead

253
00:17:27,160 --> 00:17:34,780
of the plots you can do Asinus KDE plot and then passen tips.

254
00:17:35,200 --> 00:17:42,010
Total bill and this will build the this the K-T plot without any distribution of the bars.

255
00:17:42,010 --> 00:17:42,710
All right.

256
00:17:43,090 --> 00:17:48,760
Hopefully you realize that Seaborn is incredibly powerful and also very simple as far as the code you

257
00:17:48,760 --> 00:17:49,560
need to write.

258
00:17:49,690 --> 00:17:51,580
Everything we did was just done in one line.

259
00:17:51,640 --> 00:17:55,960
If you try to do this it map plot lib it would have taken you multiple lines but what's nice about this

260
00:17:56,020 --> 00:18:00,490
is that it works off of what you know about plot live and we'll see that a lot more when we talk about

261
00:18:00,490 --> 00:18:02,200
styling and colors.

262
00:18:02,350 --> 00:18:06,790
A lot of that map plot lived knowledge is going to be transferrable to actually editing little things

263
00:18:06,880 --> 00:18:08,020
in this plot.

264
00:18:08,380 --> 00:18:13,290
OK I hope you're beginning to enjoy Seaborn again like I mentioned before it's one of my favorite libraries

265
00:18:13,560 --> 00:18:17,800
and I can't wait to show you the next couple of the plot types we're going to learn about with Seaborn

266
00:18:17,800 --> 00:18:18,350
.

267
00:18:18,400 --> 00:18:20,260
Thanks everyone and I'll see you at the next lecture
